{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21","program":"C:\\Users\\DAVID\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_executor","--edition=2018","C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=4c1dcfd896ebf955","-C","extra-filename=-4c1dcfd896ebf955","--out-dir","c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libfutures_core-087913808c6bab5e.rmeta","--extern","futures_task=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libfutures_task-aec8b3632fffeb5b.rmeta","--extern","futures_util=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libfutures_util-35d8ff582b9717e8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\DAVID\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libfutures_executor-4c1dcfd896ebf955.rmeta"},"prelude":{"crate_id":{"name":"futures_executor","disambiguator":[13290770892403177145,0]},"crate_root":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src","external_crates":[{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":14,"id":{"name":"futures_core","disambiguator":[1925450448152840744,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":15,"id":{"name":"futures_task","disambiguator":[676015542430194402,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":16,"id":{"name":"futures_util","disambiguator":[7292322857226997359,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":17,"id":{"name":"pin_utils","disambiguator":[7710960794867656871,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":18,"id":{"name":"futures_sink","disambiguator":[1159555140867771621,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[13059054705806279928,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":20,"id":{"name":"futures_channel","disambiguator":[14731519330169371591,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":21,"id":{"name":"slab","disambiguator":[11270129971421005808,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":22,"id":{"name":"futures_io","disambiguator":[16512441511211748890,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","num":23,"id":{"name":"memchr","disambiguator":[18137323351871073608,0]}}],"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":2827,"line_start":1,"line_end":76,"column_start":1,"column_end":50}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2274,"byte_end":2282,"line_start":59,"line_end":59,"column_start":29,"column_end":37},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2284,"byte_end":2299,"line_start":59,"line_end":59,"column_start":39,"column_end":54},"alias_span":null,"name":"block_on_stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2301,"byte_end":2315,"line_start":59,"line_end":59,"column_start":56,"column_end":70},"alias_span":null,"name":"BlockingStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2317,"byte_end":2326,"line_start":59,"line_end":59,"column_start":72,"column_end":81},"alias_span":null,"name":"LocalPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2328,"byte_end":2340,"line_start":59,"line_end":59,"column_start":83,"column_end":95},"alias_span":null,"name":"LocalSpawner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2801,"byte_end":2806,"line_start":76,"line_end":76,"column_start":24,"column_end":29},"alias_span":null,"name":"enter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2808,"byte_end":2813,"line_start":76,"line_end":76,"column_start":31,"column_end":36},"alias_span":null,"name":"Enter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":2815,"byte_end":2825,"line_start":76,"line_end":76,"column_start":38,"column_end":48},"alias_span":null,"name":"EnterError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":2827,"line_start":1,"line_end":76,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189}],"decl_id":null,"docs":" Built-in executors and related tools.","sig":null,"attributes":[{"value":"/ Built-in executors and related tools.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":41,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":42,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ All asynchronous computation occurs within an executor, which is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":46,"byte_end":114,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ capable of spawning futures as tasks. This module provides several","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":115,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ built-in executors, as well as tools for building your own.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":186,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":250,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` feature of this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":254,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":318,"byte_end":375,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":376,"byte_end":379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Using a thread pool (M:N task scheduling)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":380,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":428,"byte_end":431,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Most of the time tasks should be executed on a [thread pool](ThreadPool).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":432,"byte_end":509,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ A small set of worker threads can handle a very large set of spawned tasks","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":510,"byte_end":588,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ (which are much lighter weight than threads). Tasks spawned onto the pool","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":589,"byte_end":666,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ with the [`spawn_ok`](ThreadPool::spawn_ok) function will run ambiently on","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":667,"byte_end":745,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the created threads.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":746,"byte_end":770,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":771,"byte_end":774,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Spawning additional tasks","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":775,"byte_end":806,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":807,"byte_end":810,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can be spawned onto a spawner by calling its [`spawn_obj`] method","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":811,"byte_end":886,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ directly. In the case of `!Send` futures, [`spawn_local_obj`] can be used","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":887,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":965,"byte_end":977,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":978,"byte_end":981,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Single-threaded execution","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":982,"byte_end":1013,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1014,"byte_end":1017,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ In addition to thread pools, it's possible to run a task (and the tasks","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1018,"byte_end":1093,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ it spawns) entirely within a single thread via the [`LocalPool`] executor.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1094,"byte_end":1172,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ Aside from cutting down on synchronization costs, this executor also makes","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1173,"byte_end":1251,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ it possible to spawn non-`Send` tasks, via [`spawn_local_obj`]. The","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1252,"byte_end":1323,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ [`LocalPool`] is best suited for running I/O-bound tasks that do relatively","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1324,"byte_end":1403,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ little work between I/O operations.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1404,"byte_end":1443,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1444,"byte_end":1447,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ There is also a convenience function [`block_on`] for simply running a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1448,"byte_end":1522,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ future to completion on the current thread.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1523,"byte_end":1570,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1571,"byte_end":1574,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`spawn_obj`]: https://docs.rs/futures/0.3/futures/task/trait.Spawn.html#tymethod.spawn_obj","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1575,"byte_end":1670,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ [`spawn_local_obj`]: https://docs.rs/futures/0.3/futures/task/trait.LocalSpawn.html#tymethod.spawn_local_obj","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1671,"byte_end":1783,"line_start":37,"line_end":37,"column_start":1,"column_end":113}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\lib.rs","byte_start":1828,"byte_end":1960,"line_start":40,"line_end":46,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3982,"byte_end":3991,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"LocalPool","qualname":"::local_pool::LocalPool","value":"LocalPool {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":" A single-threaded task pool for polling futures to completion.","sig":null,"attributes":[{"value":"/ A single-threaded task pool for polling futures to completion.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3363,"byte_end":3429,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3430,"byte_end":3433,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This executor allows you to multiplex any number of tasks onto a single","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3434,"byte_end":3509,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ thread. It's appropriate to poll strictly I/O-bound futures that do very","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3510,"byte_end":3586,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ little work in between I/O actions.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3587,"byte_end":3626,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3627,"byte_end":3630,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ To get a handle to the pool that implements","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3631,"byte_end":3678,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ [`Spawn`](futures_task::Spawn), use the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3679,"byte_end":3722,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/ [`spawner()`](LocalPool::spawner) method. Because the executor is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3723,"byte_end":3792,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ single-threaded, it supports a special form of task spawning for non-`Send`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3793,"byte_end":3872,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ futures, via [`spawn_local_obj`](futures_task::LocalSpawn::spawn_local_obj).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":3873,"byte_end":3953,"line_start":29,"line_end":29,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":4212,"byte_end":4224,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"LocalSpawner","qualname":"::local_pool::LocalSpawner","value":"LocalSpawner {  }","parent":null,"children":[{"krate":0,"index":198}],"decl_id":null,"docs":" A handle to a [`LocalPool`](LocalPool) that implements\n [`Spawn`](futures_task::Spawn).\n","sig":null,"attributes":[{"value":"/ A handle to a [`LocalPool`](LocalPool) that implements","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":4082,"byte_end":4140,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ [`Spawn`](futures_task::Spawn).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":4141,"byte_end":4176,"line_start":37,"line_end":37,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7331,"byte_end":7334,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalPool>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty pool of tasks.\n","sig":null,"attributes":[{"value":"/ Create a new, empty pool of tasks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7281,"byte_end":7319,"line_start":123,"line_end":123,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7500,"byte_end":7507,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"spawner","qualname":"<LocalPool>::spawner","value":"pub fn spawner(&Self) -> LocalSpawner","parent":null,"children":[],"decl_id":null,"docs":" Get a clonable handle to the pool as a [`Spawn`].\n","sig":null,"attributes":[{"value":"/ Get a clonable handle to the pool as a [`Spawn`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7435,"byte_end":7488,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8162,"byte_end":8165,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"run","qualname":"<LocalPool>::run","value":"pub fn run(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Run all tasks in the pool to completion.","sig":null,"attributes":[{"value":"/ Run all tasks in the pool to completion.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7609,"byte_end":7653,"line_start":133,"line_end":133,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7658,"byte_end":7661,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7666,"byte_end":7673,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7678,"byte_end":7715,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7720,"byte_end":7723,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7728,"byte_end":7764,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7769,"byte_end":7772,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ // ... spawn some initial tasks using `spawn.spawn()` or `spawn.spawn_local()`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7777,"byte_end":7859,"line_start":140,"line_end":140,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7864,"byte_end":7867,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ // run *all* tasks in the pool to completion, including any newly-spawned ones.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7872,"byte_end":7955,"line_start":142,"line_end":142,"column_start":5,"column_end":88}},{"value":"/ pool.run();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7960,"byte_end":7975,"line_start":143,"line_end":143,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7980,"byte_end":7987,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7992,"byte_end":7995,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function will block the calling thread until *all* tasks in the pool","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8000,"byte_end":8076,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ are complete, including any spawned while running existing tasks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8081,"byte_end":8150,"line_start":147,"line_end":147,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8961,"byte_end":8970,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"run_until","qualname":"<LocalPool>::run_until","value":"pub fn run_until<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs all the tasks in the pool until the given future completes.","sig":null,"attributes":[{"value":"/ Runs all the tasks in the pool until the given future completes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8236,"byte_end":8304,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8309,"byte_end":8312,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8317,"byte_end":8324,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8329,"byte_end":8366,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8371,"byte_end":8374,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8379,"byte_end":8415,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/ # let my_app  = async {};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8420,"byte_end":8449,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8454,"byte_end":8457,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ // run tasks in the pool until `my_app` completes","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8462,"byte_end":8515,"line_start":160,"line_end":160,"column_start":5,"column_end":58}},{"value":"/ pool.run_until(my_app);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8520,"byte_end":8547,"line_start":161,"line_end":161,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8552,"byte_end":8559,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8564,"byte_end":8567,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The function will block the calling thread *only* until the future `f`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8572,"byte_end":8646,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ completes; there may still be incomplete tasks in the pool, which will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8651,"byte_end":8725,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ be inert after the call completes, but can continue with further use of","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8730,"byte_end":8805,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ one of the pool's run or poll methods. While the function is running,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8810,"byte_end":8883,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ however, all tasks in the pool will try to make progress.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":8888,"byte_end":8949,"line_start":168,"line_end":168,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10774,"byte_end":10785,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"try_run_one","qualname":"<LocalPool>::try_run_one","value":"pub fn try_run_one(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Runs all tasks and returns after completing one future or until no more progress\n can be made. Returns `true` if one future was completed, `false` otherwise.","sig":null,"attributes":[{"value":"/ Runs all tasks and returns after completing one future or until no more progress","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9421,"byte_end":9505,"line_start":186,"line_end":186,"column_start":5,"column_end":89}},{"value":"/ can be made. Returns `true` if one future was completed, `false` otherwise.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9510,"byte_end":9589,"line_start":187,"line_end":187,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9594,"byte_end":9597,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9602,"byte_end":9609,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9614,"byte_end":9651,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9656,"byte_end":9693,"line_start":191,"line_end":191,"column_start":5,"column_end":42}},{"value":"/ use futures::future::{ready, pending};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9698,"byte_end":9740,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9745,"byte_end":9748,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9753,"byte_end":9789,"line_start":194,"line_end":194,"column_start":5,"column_end":41}},{"value":"/ let spawner = pool.spawner();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9794,"byte_end":9827,"line_start":195,"line_end":195,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9832,"byte_end":9835,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9840,"byte_end":9884,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9889,"byte_end":9933,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(pending()).unwrap();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9938,"byte_end":9982,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9987,"byte_end":9990,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // Run the two ready tasks and return true for them.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":9995,"byte_end":10051,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"/ pool.try_run_one(); // returns true after completing one of the ready futures","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10056,"byte_end":10137,"line_start":202,"line_end":202,"column_start":5,"column_end":86}},{"value":"/ pool.try_run_one(); // returns true after completing the other ready future","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10142,"byte_end":10221,"line_start":203,"line_end":203,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10226,"byte_end":10229,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ // the remaining task can not be completed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10234,"byte_end":10280,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/ assert!(!pool.try_run_one()); // returns false","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10285,"byte_end":10335,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10340,"byte_end":10347,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10352,"byte_end":10355,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will return the moment","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10360,"byte_end":10438,"line_start":209,"line_end":209,"column_start":5,"column_end":83}},{"value":"/ that there are no tasks left for which progress can be made or after exactly one","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10443,"byte_end":10527,"line_start":210,"line_end":210,"column_start":5,"column_end":89}},{"value":"/ task was completed; Remaining incomplete tasks in the pool can continue with","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10532,"byte_end":10612,"line_start":211,"line_end":211,"column_start":5,"column_end":85}},{"value":"/ further use of one of the pool's run or poll methods.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10617,"byte_end":10674,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/ Though only one task will be completed, progress may be made on multiple tasks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":10679,"byte_end":10762,"line_start":213,"line_end":213,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12436,"byte_end":12453,"line_start":259,"line_end":259,"column_start":12,"column_end":29},"name":"run_until_stalled","qualname":"<LocalPool>::run_until_stalled","value":"pub fn run_until_stalled(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Runs all tasks in the pool and returns if no more progress can be made\n on any task.","sig":null,"attributes":[{"value":"/ Runs all tasks in the pool and returns if no more progress can be made","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11412,"byte_end":11486,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ on any task.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11491,"byte_end":11507,"line_start":235,"line_end":235,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11512,"byte_end":11515,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11520,"byte_end":11527,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11532,"byte_end":11569,"line_start":238,"line_end":238,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11574,"byte_end":11611,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ use futures::future::{ready, pending};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11616,"byte_end":11658,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11663,"byte_end":11666,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11671,"byte_end":11707,"line_start":242,"line_end":242,"column_start":5,"column_end":41}},{"value":"/ let spawner = pool.spawner();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11712,"byte_end":11745,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11750,"byte_end":11753,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11758,"byte_end":11802,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11807,"byte_end":11851,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(pending()).unwrap();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11856,"byte_end":11900,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11905,"byte_end":11908,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // Runs the two ready task and returns.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11913,"byte_end":11956,"line_start":249,"line_end":249,"column_start":5,"column_end":48}},{"value":"/ // The empty task remains in the pool.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":11961,"byte_end":12003,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ pool.run_until_stalled();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12008,"byte_end":12037,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12042,"byte_end":12049,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12054,"byte_end":12057,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will return the moment","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12062,"byte_end":12140,"line_start":254,"line_end":254,"column_start":5,"column_end":83}},{"value":"/ that there are no tasks left for which progress can be made;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12145,"byte_end":12209,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ remaining incomplete tasks in the pool can continue with further use of one","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12214,"byte_end":12293,"line_start":256,"line_end":256,"column_start":5,"column_end":84}},{"value":"/ of the pool's run or poll methods. While the function is running, all tasks","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12298,"byte_end":12377,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/ in the pool will try to make progress.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":12382,"byte_end":12424,"line_start":258,"line_end":258,"column_start":5,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14110,"byte_end":14118,"line_start":313,"line_end":313,"column_start":8,"column_end":16},"name":"block_on","qualname":"::local_pool::block_on","value":"pub fn block_on<F: Future>(F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the current thread.","sig":null,"attributes":[{"value":"/ Run a future to completion on the current thread.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":13870,"byte_end":13923,"line_start":307,"line_end":307,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":13924,"byte_end":13927,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ This function will block the caller until the given future has completed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":13928,"byte_end":14005,"line_start":309,"line_end":309,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14006,"byte_end":14009,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ Use a [`LocalPool`](LocalPool) if you need finer-grained control over","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14010,"byte_end":14083,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/ spawned tasks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14084,"byte_end":14102,"line_start":312,"line_end":312,"column_start":1,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14419,"byte_end":14434,"line_start":322,"line_end":322,"column_start":8,"column_end":23},"name":"block_on_stream","qualname":"::local_pool::block_on_stream","value":"pub fn block_on_stream<S: Stream + Unpin>(S) -> BlockingStream<S>","parent":null,"children":[],"decl_id":null,"docs":" Turn a stream into a blocking iterator.","sig":null,"attributes":[{"value":"/ Turn a stream into a blocking iterator.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14214,"byte_end":14257,"line_start":318,"line_end":318,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14258,"byte_end":14261,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ When `next` is called on the resulting `BlockingStream`, the caller","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14262,"byte_end":14333,"line_start":320,"line_end":320,"column_start":1,"column_end":72}},{"value":"/ will be blocked until the next element of the `Stream` becomes available.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14334,"byte_end":14411,"line_start":321,"line_end":321,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14631,"byte_end":14645,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"BlockingStream","qualname":"::local_pool::BlockingStream","value":"BlockingStream {  }","parent":null,"children":[{"krate":0,"index":209}],"decl_id":null,"docs":" An iterator which blocks on values from a stream until they become available.\n","sig":null,"attributes":[{"value":"/ An iterator which blocks on values from a stream until they become available.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14521,"byte_end":14602,"line_start":326,"line_end":326,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15094,"byte_end":15104,"line_start":347,"line_end":347,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BlockingStream<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Convert this `BlockingStream` into the inner `Stream` type.\n","sig":null,"attributes":[{"value":"/ Convert this `BlockingStream` into the inner `Stream` type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15019,"byte_end":15082,"line_start":346,"line_end":346,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16679,"byte_end":16684,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Enter","qualname":"::enter::Enter","value":"Enter {  }","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" Represents an executor context.","sig":null,"attributes":[{"value":"/ Represents an executor context.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16568,"byte_end":16603,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16604,"byte_end":16607,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ For more details, see [`enter` documentation](enter()).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16608,"byte_end":16667,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16801,"byte_end":16811,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"EnterError","qualname":"::enter::EnterError","value":"EnterError {  }","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" An error returned by `enter` if an execution scope has already been\n entered.\n","sig":null,"attributes":[{"value":"/ An error returned by `enter` if an execution scope has already been","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16705,"byte_end":16776,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ entered.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16777,"byte_end":16789,"line_start":14,"line_end":14,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17851,"byte_end":17856,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"enter","qualname":"::enter::enter","value":"pub fn enter() -> Result<Enter, EnterError>","parent":null,"children":[],"decl_id":null,"docs":" Marks the current thread as being within the dynamic extent of an\n executor.","sig":null,"attributes":[{"value":"/ Marks the current thread as being within the dynamic extent of an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17197,"byte_end":17266,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ executor.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17267,"byte_end":17280,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17281,"byte_end":17284,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Executor implementations should call this function before beginning to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17285,"byte_end":17359,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ execute a tasks, and drop the returned [`Enter`](Enter) value after","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17360,"byte_end":17431,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ completing task execution:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17432,"byte_end":17462,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17463,"byte_end":17466,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17467,"byte_end":17474,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use futures::executor::enter;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17475,"byte_end":17508,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17509,"byte_end":17512,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let enter = enter().expect(\"...\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17513,"byte_end":17551,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ /* run task */","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17552,"byte_end":17570,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ drop(enter);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17571,"byte_end":17587,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17588,"byte_end":17595,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17596,"byte_end":17599,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Doing so ensures that executors aren't","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17600,"byte_end":17642,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ accidentally invoked in a nested fashion.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17643,"byte_end":17688,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17689,"byte_end":17692,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Error","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17693,"byte_end":17704,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17705,"byte_end":17708,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the current thread is already marked, in which case the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17709,"byte_end":17788,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ caller should panic with a tailored error message.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17789,"byte_end":17843,"line_start":54,"line_end":54,"column_start":1,"column_end":55}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":4992,"byte_end":5004,"line_start":63,"line_end":63,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7265,"byte_end":7274,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":13802,"byte_end":13811,"line_start":301,"line_end":301,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14719,"byte_end":14733,"line_start":332,"line_end":332,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14866,"byte_end":14880,"line_start":339,"line_end":339,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14995,"byte_end":15009,"line_start":345,"line_end":345,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15184,"byte_end":15198,"line_start":352,"line_end":352,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15447,"byte_end":15459,"line_start":364,"line_end":364,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15963,"byte_end":15975,"line_start":383,"line_end":383,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16852,"byte_end":16862,"line_start":19,"line_end":19,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17005,"byte_end":17015,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17182,"byte_end":17192,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":18095,"byte_end":18100,"line_start":67,"line_end":67,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":18230,"byte_end":18235,"line_start":73,"line_end":73,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":4992,"byte_end":5004,"line_start":63,"line_end":63,"column_start":18,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":88},"to":{"krate":15,"index":94}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":7265,"byte_end":7274,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":13802,"byte_end":13811,"line_start":301,"line_end":301,"column_start":18,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14719,"byte_end":14733,"line_start":332,"line_end":332,"column_start":35,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14866,"byte_end":14880,"line_start":339,"line_end":339,"column_start":38,"column_end":52},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":14995,"byte_end":15009,"line_start":345,"line_end":345,"column_start":25,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15184,"byte_end":15198,"line_start":352,"line_end":352,"column_start":38,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15447,"byte_end":15459,"line_start":364,"line_end":364,"column_start":16,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":197},"to":{"krate":15,"index":15}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\local_pool.rs","byte_start":15963,"byte_end":15975,"line_start":383,"line_end":383,"column_start":21,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":15,"index":18}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":16852,"byte_end":16862,"line_start":19,"line_end":19,"column_start":21,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17005,"byte_end":17015,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":17182,"byte_end":17192,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":18095,"byte_end":18100,"line_start":67,"line_end":67,"column_start":21,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.21\\src\\enter.rs","byte_start":18230,"byte_end":18235,"line_start":73,"line_end":73,"column_start":15,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":3266}}]}