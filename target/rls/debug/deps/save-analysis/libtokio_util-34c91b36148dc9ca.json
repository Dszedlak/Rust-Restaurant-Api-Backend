{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2","program":"C:\\Users\\DAVID\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","--cfg","feature=\"tracing\"","-C","metadata=34c91b36148dc9ca","-C","extra-filename=-34c91b36148dc9ca","--out-dir","c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libbytes-f48a7b2dfccca3db.rmeta","--extern","futures_core=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libfutures_core-087913808c6bab5e.rmeta","--extern","futures_sink=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libfutures_sink-42effa7ce425dff3.rmeta","--extern","pin_project_lite=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libpin_project_lite-35c3889ff8796024.rmeta","--extern","tokio=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libtokio-761b979c3b6d6be9.rmeta","--extern","tracing=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libtracing-a63bd59fc49d0bb1.rmeta","--cap-lints","allow","-L","native=C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\DAVID\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libtokio_util-34c91b36148dc9ca.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[5287370238504059055,0]},"crate_root":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src","external_crates":[{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","num":14,"id":{"name":"pin_project_lite","disambiguator":[13059054705806279928,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":15,"id":{"name":"futures_sink","disambiguator":[1159555140867771621,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":16,"id":{"name":"tokio","disambiguator":[16269990530449856130,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":17,"id":{"name":"winapi","disambiguator":[8420896054204666362,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":18,"id":{"name":"mio","disambiguator":[3829580351734518988,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":19,"id":{"name":"log","disambiguator":[2429338322379649461,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":20,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":21,"id":{"name":"windows_sys","disambiguator":[11437932319356824400,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","num":22,"id":{"name":"bytes","disambiguator":[11656778557661069651,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":23,"id":{"name":"once_cell","disambiguator":[9495832533216755129,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":24,"id":{"name":"tokio_macros","disambiguator":[5630323419927989105,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":25,"id":{"name":"memchr","disambiguator":[18137323351871073608,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":26,"id":{"name":"socket2","disambiguator":[945109140986656325,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","num":27,"id":{"name":"num_cpus","disambiguator":[13959434253400856960,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","num":28,"id":{"name":"futures_core","disambiguator":[1925450448152840744,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","num":29,"id":{"name":"tracing","disambiguator":[2340767073726843827,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","num":30,"id":{"name":"tracing_core","disambiguator":[9440659260873027801,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","num":31,"id":{"name":"lazy_static","disambiguator":[10174962780488854296,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","num":32,"id":{"name":"tracing_attributes","disambiguator":[7752294931269729251,0]}}],"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725208,"byte_end":16725218,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725257,"byte_end":16725264,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725303,"byte_end":16725310,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725472,"byte_end":16725478,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725480,"byte_end":16725491,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725539,"byte_end":16725549,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725598,"byte_end":16725609,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725671,"byte_end":16725691,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725693,"byte_end":16725718,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725767,"byte_end":16725777,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725779,"byte_end":16725794,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725859,"byte_end":16725876,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725878,"byte_end":16725900,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16825098,"byte_end":16825106,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16825137,"byte_end":16825149,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16825180,"byte_end":16825192,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16825216,"byte_end":16825229,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16825231,"byte_end":16825245,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":6945,"byte_end":6954,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":6956,"byte_end":6973,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":6975,"byte_end":7000,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":7029,"byte_end":7042,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":7044,"byte_end":7054,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":7102,"byte_end":7115,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":7158,"byte_end":7175,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":439},{"krate":0,"index":1286},{"krate":0,"index":14},{"krate":0,"index":320},{"krate":0,"index":389}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1143}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\cfg.rs","byte_start":5429,"byte_end":5454,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16714936,"byte_end":16714989,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16714990,"byte_end":16714993,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16714994,"byte_end":16715069,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715070,"byte_end":16715135,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715136,"byte_end":16715139,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715140,"byte_end":16715220,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715221,"byte_end":16715296,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715297,"byte_end":16715345,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715346,"byte_end":16715349,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715350,"byte_end":16715373,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715374,"byte_end":16715377,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715378,"byte_end":16715457,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715458,"byte_end":16715537,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715538,"byte_end":16715609,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715610,"byte_end":16715680,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715681,"byte_end":16715759,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715760,"byte_end":16715836,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715837,"byte_end":16715870,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715871,"byte_end":16715874,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715875,"byte_end":16715955,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16715956,"byte_end":16716036,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716037,"byte_end":16716087,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716088,"byte_end":16716091,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716092,"byte_end":16716143,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716144,"byte_end":16716193,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716194,"byte_end":16716245,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716246,"byte_end":16716249,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716250,"byte_end":16716315,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716316,"byte_end":16716319,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716320,"byte_end":16716397,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716398,"byte_end":16716439,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716440,"byte_end":16716443,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716444,"byte_end":16716524,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716525,"byte_end":16716604,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716605,"byte_end":16716683,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716684,"byte_end":16716763,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716764,"byte_end":16716778,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716779,"byte_end":16716782,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716783,"byte_end":16716862,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716863,"byte_end":16716942,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716943,"byte_end":16716960,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716961,"byte_end":16716964,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16716965,"byte_end":16717042,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717043,"byte_end":16717122,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717123,"byte_end":16717200,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717201,"byte_end":16717271,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717272,"byte_end":16717321,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717322,"byte_end":16717325,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717326,"byte_end":16717339,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717340,"byte_end":16717372,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717373,"byte_end":16717440,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717441,"byte_end":16717555,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717556,"byte_end":16717593,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717594,"byte_end":16717655,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717656,"byte_end":16717705,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717706,"byte_end":16717709,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717710,"byte_end":16717751,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717752,"byte_end":16717762,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717763,"byte_end":16717847,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717848,"byte_end":16717904,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717905,"byte_end":16717908,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717909,"byte_end":16717930,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717931,"byte_end":16717998,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16717999,"byte_end":16718027,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718028,"byte_end":16718041,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718042,"byte_end":16718060,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718061,"byte_end":16718070,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718071,"byte_end":16718074,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718075,"byte_end":16718134,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718135,"byte_end":16718159,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718160,"byte_end":16718169,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718170,"byte_end":16718175,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718176,"byte_end":16718184,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718185,"byte_end":16718192,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718193,"byte_end":16718267,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718268,"byte_end":16718271,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718272,"byte_end":16718294,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718295,"byte_end":16718298,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718299,"byte_end":16718376,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718377,"byte_end":16718453,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718454,"byte_end":16718533,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718534,"byte_end":16718588,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718589,"byte_end":16718592,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718593,"byte_end":16718637,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718638,"byte_end":16718645,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718646,"byte_end":16718681,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718682,"byte_end":16718713,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718714,"byte_end":16718717,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718718,"byte_end":16718747,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718748,"byte_end":16718751,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718752,"byte_end":16718791,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718792,"byte_end":16718795,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718796,"byte_end":16718834,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718835,"byte_end":16718862,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718863,"byte_end":16718899,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718900,"byte_end":16718903,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718904,"byte_end":16718922,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718923,"byte_end":16718945,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718946,"byte_end":16718976,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16718977,"byte_end":16719031,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719032,"byte_end":16719062,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719063,"byte_end":16719120,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719121,"byte_end":16719153,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719154,"byte_end":16719167,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719168,"byte_end":16719171,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719172,"byte_end":16719206,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719207,"byte_end":16719251,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719252,"byte_end":16719304,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719305,"byte_end":16719372,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719373,"byte_end":16719376,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719377,"byte_end":16719451,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719452,"byte_end":16719518,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719519,"byte_end":16719548,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719549,"byte_end":16719596,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719597,"byte_end":16719649,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719650,"byte_end":16719721,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719722,"byte_end":16719741,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719742,"byte_end":16719755,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719756,"byte_end":16719759,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719760,"byte_end":16719799,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719800,"byte_end":16719855,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719856,"byte_end":16719874,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719875,"byte_end":16719951,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16719952,"byte_end":16720018,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720019,"byte_end":16720071,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720072,"byte_end":16720075,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720076,"byte_end":16720156,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720157,"byte_end":16720182,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720183,"byte_end":16720215,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720216,"byte_end":16720229,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720230,"byte_end":16720233,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720234,"byte_end":16720306,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720307,"byte_end":16720333,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720334,"byte_end":16720385,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720386,"byte_end":16720422,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720423,"byte_end":16720426,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720427,"byte_end":16720505,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720506,"byte_end":16720549,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720550,"byte_end":16720597,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720598,"byte_end":16720634,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720635,"byte_end":16720679,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720680,"byte_end":16720736,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720737,"byte_end":16720785,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720786,"byte_end":16720808,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720809,"byte_end":16720827,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720828,"byte_end":16720841,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720842,"byte_end":16720851,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720852,"byte_end":16720857,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720858,"byte_end":16720865,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720866,"byte_end":16720869,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720870,"byte_end":16720893,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720894,"byte_end":16720897,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720898,"byte_end":16720976,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16720977,"byte_end":16721050,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721051,"byte_end":16721127,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721128,"byte_end":16721208,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721209,"byte_end":16721225,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721226,"byte_end":16721229,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721230,"byte_end":16721310,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721311,"byte_end":16721390,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721391,"byte_end":16721471,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721472,"byte_end":16721544,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721545,"byte_end":16721548,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721549,"byte_end":16721626,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721627,"byte_end":16721705,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721706,"byte_end":16721779,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721780,"byte_end":16721846,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721847,"byte_end":16721850,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721851,"byte_end":16721864,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721865,"byte_end":16721898,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721899,"byte_end":16721933,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721934,"byte_end":16721971,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16721972,"byte_end":16722039,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722040,"byte_end":16722075,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722076,"byte_end":16722137,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722138,"byte_end":16722184,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722185,"byte_end":16722246,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722247,"byte_end":16722250,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722251,"byte_end":16722279,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722280,"byte_end":16722283,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722284,"byte_end":16722325,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722326,"byte_end":16722336,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722337,"byte_end":16722361,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722362,"byte_end":16722436,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722437,"byte_end":16722479,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722480,"byte_end":16722494,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722495,"byte_end":16722552,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722553,"byte_end":16722602,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722603,"byte_end":16722617,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722618,"byte_end":16722655,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722656,"byte_end":16722707,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722708,"byte_end":16722754,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722755,"byte_end":16722785,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722786,"byte_end":16722800,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722801,"byte_end":16722810,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722811,"byte_end":16722816,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722817,"byte_end":16722824,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722825,"byte_end":16722832,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722833,"byte_end":16722908,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722909,"byte_end":16722982,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16722983,"byte_end":16723025,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723026,"byte_end":16723029,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723030,"byte_end":16723052,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723053,"byte_end":16723056,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723057,"byte_end":16723134,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723135,"byte_end":16723211,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723212,"byte_end":16723288,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723289,"byte_end":16723312,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723313,"byte_end":16723316,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723317,"byte_end":16723362,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723363,"byte_end":16723370,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723371,"byte_end":16723406,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723407,"byte_end":16723431,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723432,"byte_end":16723435,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723436,"byte_end":16723465,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723466,"byte_end":16723469,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723470,"byte_end":16723509,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723510,"byte_end":16723513,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723514,"byte_end":16723560,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723561,"byte_end":16723597,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723598,"byte_end":16723601,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723602,"byte_end":16723693,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723694,"byte_end":16723768,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723769,"byte_end":16723791,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723792,"byte_end":16723825,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723826,"byte_end":16723873,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723874,"byte_end":16723926,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16723927,"byte_end":16724002,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724003,"byte_end":16724022,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724023,"byte_end":16724036,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724037,"byte_end":16724040,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724041,"byte_end":16724093,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724094,"byte_end":16724171,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724172,"byte_end":16724236,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724237,"byte_end":16724240,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724241,"byte_end":16724284,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724285,"byte_end":16724325,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724326,"byte_end":16724329,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724330,"byte_end":16724387,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724388,"byte_end":16724434,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724435,"byte_end":16724486,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724487,"byte_end":16724505,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724506,"byte_end":16724515,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724516,"byte_end":16724521,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724522,"byte_end":16724529,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724530,"byte_end":16724533,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724534,"byte_end":16724573,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724574,"byte_end":16724615,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724616,"byte_end":16724652,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724653,"byte_end":16724685,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724686,"byte_end":16724782,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724783,"byte_end":16724834,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724835,"byte_end":16724888,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724889,"byte_end":16724932,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724933,"byte_end":16724977,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16724978,"byte_end":16725026,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725027,"byte_end":16725075,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725076,"byte_end":16725122,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725123,"byte_end":16725162,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727186,"byte_end":16727196,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726029,"byte_end":16726114,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726115,"byte_end":16726118,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726119,"byte_end":16726157,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726158,"byte_end":16726196,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726197,"byte_end":16726200,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726201,"byte_end":16726214,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726215,"byte_end":16726218,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726219,"byte_end":16726300,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726301,"byte_end":16726304,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726305,"byte_end":16726344,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726345,"byte_end":16726378,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726379,"byte_end":16726408,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726409,"byte_end":16726412,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726413,"byte_end":16726420,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726421,"byte_end":16726439,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726440,"byte_end":16726470,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726471,"byte_end":16726495,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726496,"byte_end":16726503,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726504,"byte_end":16726533,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726534,"byte_end":16726586,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726587,"byte_end":16726590,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726591,"byte_end":16726609,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726610,"byte_end":16726627,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726628,"byte_end":16726708,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726709,"byte_end":16726743,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726744,"byte_end":16726797,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726798,"byte_end":16726809,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726810,"byte_end":16726817,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726818,"byte_end":16726823,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726824,"byte_end":16726871,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726872,"byte_end":16726925,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726926,"byte_end":16726984,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16726985,"byte_end":16727064,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727065,"byte_end":16727077,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727078,"byte_end":16727085,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727086,"byte_end":16727093,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727094,"byte_end":16727097,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727298,"byte_end":16727301,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727225,"byte_end":16727286,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729539,"byte_end":16729546,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728253,"byte_end":16728288,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728289,"byte_end":16728292,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728293,"byte_end":16728362,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728363,"byte_end":16728442,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728443,"byte_end":16728515,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728516,"byte_end":16728540,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728541,"byte_end":16728544,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728545,"byte_end":16728613,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728614,"byte_end":16728691,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728692,"byte_end":16728753,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728754,"byte_end":16728757,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728758,"byte_end":16728819,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728820,"byte_end":16728882,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728883,"byte_end":16728886,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728887,"byte_end":16728950,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16728951,"byte_end":16729014,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729015,"byte_end":16729094,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729095,"byte_end":16729169,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729170,"byte_end":16729189,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729190,"byte_end":16729193,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729194,"byte_end":16729262,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729263,"byte_end":16729325,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729326,"byte_end":16729401,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729402,"byte_end":16729442,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729443,"byte_end":16729446,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729447,"byte_end":16729483,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729484,"byte_end":16729528,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729594,"byte_end":16729598,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729553,"byte_end":16729584,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730364,"byte_end":16730369,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729605,"byte_end":16729657,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729662,"byte_end":16729665,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729670,"byte_end":16729739,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729744,"byte_end":16729814,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729819,"byte_end":16729865,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729870,"byte_end":16729873,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729878,"byte_end":16729954,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16729959,"byte_end":16730034,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730039,"byte_end":16730114,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730119,"byte_end":16730159,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730164,"byte_end":16730167,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730172,"byte_end":16730246,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730251,"byte_end":16730297,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730302,"byte_end":16730305,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730310,"byte_end":16730354,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733305,"byte_end":16733311,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730393,"byte_end":16730458,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730463,"byte_end":16730466,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730471,"byte_end":16730545,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730550,"byte_end":16730622,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730627,"byte_end":16730700,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730705,"byte_end":16730748,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730753,"byte_end":16730756,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730761,"byte_end":16730834,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730839,"byte_end":16730902,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730907,"byte_end":16730982,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16730987,"byte_end":16731062,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731067,"byte_end":16731090,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731095,"byte_end":16731098,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731103,"byte_end":16731175,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731180,"byte_end":16731254,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731259,"byte_end":16731329,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731334,"byte_end":16731337,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731342,"byte_end":16731410,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731415,"byte_end":16731486,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731491,"byte_end":16731571,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731576,"byte_end":16731588,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731593,"byte_end":16731596,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731601,"byte_end":16731671,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731676,"byte_end":16731751,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731756,"byte_end":16731793,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731798,"byte_end":16731801,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731806,"byte_end":16731842,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731847,"byte_end":16731891,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731896,"byte_end":16731899,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731904,"byte_end":16731927,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731932,"byte_end":16731935,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16731940,"byte_end":16732014,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732019,"byte_end":16732093,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732098,"byte_end":16732151,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732156,"byte_end":16732159,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732164,"byte_end":16732235,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732240,"byte_end":16732310,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732315,"byte_end":16732331,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732336,"byte_end":16732339,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732344,"byte_end":16732357,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732362,"byte_end":16732380,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732385,"byte_end":16732390,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732395,"byte_end":16732421,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732426,"byte_end":16732463,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732468,"byte_end":16732473,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732478,"byte_end":16732499,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732504,"byte_end":16732509,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732514,"byte_end":16732544,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732549,"byte_end":16732563,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732568,"byte_end":16732599,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732604,"byte_end":16732637,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732642,"byte_end":16732645,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732650,"byte_end":16732743,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732748,"byte_end":16732766,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732771,"byte_end":16732774,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732779,"byte_end":16732851,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732856,"byte_end":16732916,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732921,"byte_end":16732973,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16732978,"byte_end":16733040,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733045,"byte_end":16733112,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733117,"byte_end":16733120,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733125,"byte_end":16733153,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733158,"byte_end":16733167,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733172,"byte_end":16733177,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733182,"byte_end":16733189,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733194,"byte_end":16733197,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733202,"byte_end":16733271,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733276,"byte_end":16733297,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734477,"byte_end":16734487,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733392,"byte_end":16733464,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733469,"byte_end":16733518,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733523,"byte_end":16733526,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733531,"byte_end":16733599,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733604,"byte_end":16733671,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733676,"byte_end":16733744,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733749,"byte_end":16733825,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733830,"byte_end":16733896,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733901,"byte_end":16733904,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733909,"byte_end":16733977,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16733982,"byte_end":16734057,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734062,"byte_end":16734137,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734142,"byte_end":16734214,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734219,"byte_end":16734261,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734266,"byte_end":16734269,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734274,"byte_end":16734349,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734354,"byte_end":16734432,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734437,"byte_end":16734469,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16736095,"byte_end":16736101,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734905,"byte_end":16734985,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16734990,"byte_end":16735066,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735071,"byte_end":16735074,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735079,"byte_end":16735154,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735159,"byte_end":16735229,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735234,"byte_end":16735305,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735310,"byte_end":16735382,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735387,"byte_end":16735445,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735450,"byte_end":16735453,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735458,"byte_end":16735527,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735532,"byte_end":16735607,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735612,"byte_end":16735688,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735693,"byte_end":16735715,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735720,"byte_end":16735723,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735728,"byte_end":16735801,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735806,"byte_end":16735879,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735884,"byte_end":16735960,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735965,"byte_end":16735968,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16735973,"byte_end":16736009,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16736014,"byte_end":16736046,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\decoder.rs","byte_start":16736051,"byte_end":16736087,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736435,"byte_end":16736442,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736280,"byte_end":16736352,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736353,"byte_end":16736373,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736374,"byte_end":16736377,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736378,"byte_end":16736424,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736707,"byte_end":16736712,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736455,"byte_end":16736487,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736492,"byte_end":16736495,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736500,"byte_end":16736577,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736582,"byte_end":16736638,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736643,"byte_end":16736646,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736651,"byte_end":16736697,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16737063,"byte_end":16737069,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736736,"byte_end":16736781,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736786,"byte_end":16736789,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736794,"byte_end":16736868,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736873,"byte_end":16736953,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16736958,"byte_end":16736996,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16737001,"byte_end":16737004,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\encoder.rs","byte_start":16737009,"byte_end":16737055,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16750709,"byte_end":16750715,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1707}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752488,"byte_end":16752491,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16750857,"byte_end":16750937,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16750942,"byte_end":16751023,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751028,"byte_end":16751031,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751036,"byte_end":16751111,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751116,"byte_end":16751186,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751191,"byte_end":16751260,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751265,"byte_end":16751337,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751342,"byte_end":16751400,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751405,"byte_end":16751408,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751413,"byte_end":16751484,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751489,"byte_end":16751566,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751571,"byte_end":16751647,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751652,"byte_end":16751674,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751679,"byte_end":16751682,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751687,"byte_end":16751760,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751765,"byte_end":16751838,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751843,"byte_end":16751919,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751924,"byte_end":16751927,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16751932,"byte_end":16752008,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752013,"byte_end":16752089,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752094,"byte_end":16752169,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752174,"byte_end":16752209,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752214,"byte_end":16752217,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752222,"byte_end":16752258,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752263,"byte_end":16752295,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752300,"byte_end":16752337,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752342,"byte_end":16752380,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752385,"byte_end":16752476,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754099,"byte_end":16754112,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752704,"byte_end":16752784,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752789,"byte_end":16752870,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752875,"byte_end":16752924,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752929,"byte_end":16752932,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16752937,"byte_end":16753012,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753017,"byte_end":16753087,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753092,"byte_end":16753161,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753166,"byte_end":16753238,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753243,"byte_end":16753301,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753306,"byte_end":16753309,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753314,"byte_end":16753385,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753390,"byte_end":16753467,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753472,"byte_end":16753548,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753553,"byte_end":16753575,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753580,"byte_end":16753583,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753588,"byte_end":16753661,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753666,"byte_end":16753739,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753744,"byte_end":16753820,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753825,"byte_end":16753828,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753833,"byte_end":16753869,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753874,"byte_end":16753906,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753911,"byte_end":16753948,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753953,"byte_end":16753991,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16753996,"byte_end":16754087,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756259,"byte_end":16756269,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754682,"byte_end":16754762,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754767,"byte_end":16754848,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754853,"byte_end":16754856,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754861,"byte_end":16754936,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754941,"byte_end":16755011,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755016,"byte_end":16755087,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755092,"byte_end":16755164,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755169,"byte_end":16755227,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755232,"byte_end":16755235,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755240,"byte_end":16755311,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755316,"byte_end":16755393,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755398,"byte_end":16755474,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755479,"byte_end":16755501,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755506,"byte_end":16755509,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755514,"byte_end":16755593,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755598,"byte_end":16755675,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755680,"byte_end":16755683,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755688,"byte_end":16755761,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755766,"byte_end":16755839,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755844,"byte_end":16755920,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755925,"byte_end":16755928,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755933,"byte_end":16755969,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16755974,"byte_end":16756006,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756011,"byte_end":16756049,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756054,"byte_end":16756092,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756097,"byte_end":16756151,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756156,"byte_end":16756247,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756904,"byte_end":16756911,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756621,"byte_end":16756684,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756689,"byte_end":16756702,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756707,"byte_end":16756710,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756715,"byte_end":16756790,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756795,"byte_end":16756865,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756870,"byte_end":16756892,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757255,"byte_end":16757262,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16756964,"byte_end":16757035,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757040,"byte_end":16757053,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757058,"byte_end":16757061,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757066,"byte_end":16757141,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757146,"byte_end":16757216,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757221,"byte_end":16757243,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757625,"byte_end":16757636,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757327,"byte_end":16757405,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757410,"byte_end":16757423,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757428,"byte_end":16757431,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757436,"byte_end":16757511,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757516,"byte_end":16757586,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757591,"byte_end":16757613,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757983,"byte_end":16757988,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757732,"byte_end":16757790,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757795,"byte_end":16757808,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757813,"byte_end":16757816,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757821,"byte_end":16757895,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16757900,"byte_end":16757971,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758300,"byte_end":16758309,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758041,"byte_end":16758107,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758112,"byte_end":16758125,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758130,"byte_end":16758133,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758138,"byte_end":16758212,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758217,"byte_end":16758288,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758646,"byte_end":16758655,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758374,"byte_end":16758442,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758447,"byte_end":16758471,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758476,"byte_end":16758479,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758484,"byte_end":16758558,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16758563,"byte_end":16758634,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759346,"byte_end":16759359,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759087,"byte_end":16759153,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759158,"byte_end":16759171,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759176,"byte_end":16759179,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759184,"byte_end":16759258,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759263,"byte_end":16759334,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759505,"byte_end":16759516,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759450,"byte_end":16759493,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759651,"byte_end":16759666,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759588,"byte_end":16759639,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759806,"byte_end":16759818,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759750,"byte_end":16759794,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759955,"byte_end":16759971,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16759891,"byte_end":16759943,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760321,"byte_end":16760331,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760056,"byte_end":16760119,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760124,"byte_end":16760127,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760132,"byte_end":16760207,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760212,"byte_end":16760282,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760287,"byte_end":16760309,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760703,"byte_end":16760713,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760381,"byte_end":16760455,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760460,"byte_end":16760501,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760506,"byte_end":16760509,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760514,"byte_end":16760589,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760594,"byte_end":16760664,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16760669,"byte_end":16760691,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762687,"byte_end":16762698,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762372,"byte_end":16762443,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762444,"byte_end":16762516,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762517,"byte_end":16762577,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762578,"byte_end":16762581,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762582,"byte_end":16762618,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762636,"byte_end":16762675,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762784,"byte_end":16762786,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762711,"byte_end":16762775,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762818,"byte_end":16762823,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762796,"byte_end":16762809,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762888,"byte_end":16762896,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762833,"byte_end":16762879,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762983,"byte_end":16762992,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762913,"byte_end":16762974,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16763225,"byte_end":16763228,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16763173,"byte_end":16763213,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16763957,"byte_end":16763967,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1666}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764218,"byte_end":16764221,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764150,"byte_end":16764206,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764569,"byte_end":16764582,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764453,"byte_end":16764535,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764540,"byte_end":16764557,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765336,"byte_end":16765343,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765049,"byte_end":16765112,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765117,"byte_end":16765134,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765139,"byte_end":16765142,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765147,"byte_end":16765222,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765227,"byte_end":16765297,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765302,"byte_end":16765324,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765691,"byte_end":16765698,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765396,"byte_end":16765467,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765472,"byte_end":16765489,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765494,"byte_end":16765497,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765502,"byte_end":16765577,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765582,"byte_end":16765652,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765657,"byte_end":16765679,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766065,"byte_end":16766076,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765763,"byte_end":16765841,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765846,"byte_end":16765863,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765868,"byte_end":16765871,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765876,"byte_end":16765951,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765956,"byte_end":16766026,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766031,"byte_end":16766053,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766441,"byte_end":16766451,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766172,"byte_end":16766239,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766244,"byte_end":16766247,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766252,"byte_end":16766327,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766332,"byte_end":16766402,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766407,"byte_end":16766429,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766563,"byte_end":16766570,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766501,"byte_end":16766551,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766693,"byte_end":16766704,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766623,"byte_end":16766681,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766869,"byte_end":16766880,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766769,"byte_end":16766828,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16766833,"byte_end":16766857,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767396,"byte_end":16767411,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767326,"byte_end":16767384,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767557,"byte_end":16767568,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767502,"byte_end":16767545,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767698,"byte_end":16767713,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767635,"byte_end":16767686,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16769814,"byte_end":16769825,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770032,"byte_end":16770035,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16769963,"byte_end":16770020,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770593,"byte_end":16770600,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770305,"byte_end":16770368,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770373,"byte_end":16770391,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770396,"byte_end":16770399,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770404,"byte_end":16770479,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770484,"byte_end":16770554,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770559,"byte_end":16770581,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770949,"byte_end":16770956,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770653,"byte_end":16770724,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770729,"byte_end":16770747,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770752,"byte_end":16770755,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770760,"byte_end":16770835,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770840,"byte_end":16770910,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770915,"byte_end":16770937,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771324,"byte_end":16771335,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771021,"byte_end":16771099,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771104,"byte_end":16771122,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771127,"byte_end":16771130,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771135,"byte_end":16771210,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771215,"byte_end":16771285,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771290,"byte_end":16771312,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771701,"byte_end":16771711,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771431,"byte_end":16771499,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771504,"byte_end":16771507,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771512,"byte_end":16771587,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771592,"byte_end":16771662,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771667,"byte_end":16771689,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771823,"byte_end":16771830,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771761,"byte_end":16771811,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771953,"byte_end":16771964,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16771883,"byte_end":16771941,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772130,"byte_end":16772141,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772029,"byte_end":16772089,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772094,"byte_end":16772118,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772659,"byte_end":16772674,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772589,"byte_end":16772647,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772821,"byte_end":16772833,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772765,"byte_end":16772809,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772964,"byte_end":16772980,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16772900,"byte_end":16772952,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":1194},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":954},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":956},{"krate":0,"index":963},{"krate":0,"index":967},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":980},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774507,"byte_end":16774559,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774560,"byte_end":16774563,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774564,"byte_end":16774634,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774635,"byte_end":16774693,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774694,"byte_end":16774766,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774767,"byte_end":16774837,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774838,"byte_end":16774905,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774906,"byte_end":16774909,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774910,"byte_end":16774931,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774932,"byte_end":16774935,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16774936,"byte_end":16775011,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775012,"byte_end":16775083,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775084,"byte_end":16775155,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775156,"byte_end":16775226,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775227,"byte_end":16775267,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775268,"byte_end":16775271,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775272,"byte_end":16775279,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775280,"byte_end":16775323,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775324,"byte_end":16775382,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775383,"byte_end":16775386,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775387,"byte_end":16775442,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775443,"byte_end":16775485,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775486,"byte_end":16775491,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775492,"byte_end":16775544,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775545,"byte_end":16775550,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775551,"byte_end":16775573,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775574,"byte_end":16775581,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775582,"byte_end":16775585,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775586,"byte_end":16775658,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775659,"byte_end":16775730,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775731,"byte_end":16775750,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775751,"byte_end":16775754,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775755,"byte_end":16775766,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775767,"byte_end":16775816,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775817,"byte_end":16775866,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775867,"byte_end":16775916,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775917,"byte_end":16775924,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775925,"byte_end":16775928,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775929,"byte_end":16775967,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775968,"byte_end":16775971,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775972,"byte_end":16775979,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16775980,"byte_end":16776023,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776024,"byte_end":16776082,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776083,"byte_end":16776086,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776087,"byte_end":16776112,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776113,"byte_end":16776134,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776135,"byte_end":16776138,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776139,"byte_end":16776215,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776216,"byte_end":16776225,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776226,"byte_end":16776268,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776269,"byte_end":16776274,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776275,"byte_end":16776348,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776349,"byte_end":16776396,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776397,"byte_end":16776400,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776401,"byte_end":16776438,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776439,"byte_end":16776453,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776454,"byte_end":16776459,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776460,"byte_end":16776467,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776468,"byte_end":16776471,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776472,"byte_end":16776514,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776515,"byte_end":16776518,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776519,"byte_end":16776530,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776531,"byte_end":16776570,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776571,"byte_end":16776610,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776611,"byte_end":16776650,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776651,"byte_end":16776658,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776659,"byte_end":16776662,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776663,"byte_end":16776677,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776678,"byte_end":16776681,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776682,"byte_end":16776757,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776758,"byte_end":16776831,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776832,"byte_end":16776898,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776899,"byte_end":16776968,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16776969,"byte_end":16777034,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777035,"byte_end":16777038,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777039,"byte_end":16777055,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777056,"byte_end":16777059,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777060,"byte_end":16777136,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777137,"byte_end":16777178,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777179,"byte_end":16777182,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777183,"byte_end":16777190,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777191,"byte_end":16777222,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777223,"byte_end":16777273,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777274,"byte_end":16777315,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777316,"byte_end":16777351,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777352,"byte_end":16777400,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777401,"byte_end":16777436,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777437,"byte_end":16777485,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777486,"byte_end":16777535,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777536,"byte_end":16777558,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777559,"byte_end":16777566,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777567,"byte_end":16777589,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777590,"byte_end":16777597,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777598,"byte_end":16777601,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777602,"byte_end":16777650,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777651,"byte_end":16777654,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777655,"byte_end":16777666,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777667,"byte_end":16777719,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777720,"byte_end":16777785,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777786,"byte_end":16777851,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777852,"byte_end":16777917,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777918,"byte_end":16777925,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777926,"byte_end":16777929,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16777930,"byte_end":16778006,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778007,"byte_end":16778081,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778082,"byte_end":16778154,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778155,"byte_end":16778231,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778232,"byte_end":16778274,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778275,"byte_end":16778278,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778279,"byte_end":16778295,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778296,"byte_end":16778299,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778300,"byte_end":16778375,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778376,"byte_end":16778417,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778418,"byte_end":16778421,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778422,"byte_end":16778429,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778430,"byte_end":16778461,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778462,"byte_end":16778512,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778513,"byte_end":16778554,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778555,"byte_end":16778590,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778591,"byte_end":16778639,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778640,"byte_end":16778675,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778676,"byte_end":16778724,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778725,"byte_end":16778784,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778785,"byte_end":16778807,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778808,"byte_end":16778815,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778816,"byte_end":16778838,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778839,"byte_end":16778846,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778847,"byte_end":16778850,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778851,"byte_end":16778899,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778900,"byte_end":16778903,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778904,"byte_end":16778915,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778916,"byte_end":16778965,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16778966,"byte_end":16779020,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779021,"byte_end":16779075,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779076,"byte_end":16779130,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779131,"byte_end":16779138,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779139,"byte_end":16779142,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779143,"byte_end":16779216,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779217,"byte_end":16779284,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779285,"byte_end":16779288,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779289,"byte_end":16779305,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779306,"byte_end":16779309,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779310,"byte_end":16779386,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779387,"byte_end":16779459,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779460,"byte_end":16779499,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779500,"byte_end":16779503,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779504,"byte_end":16779511,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779512,"byte_end":16779543,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779544,"byte_end":16779594,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779595,"byte_end":16779636,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779637,"byte_end":16779672,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779673,"byte_end":16779721,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779722,"byte_end":16779757,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779758,"byte_end":16779805,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779806,"byte_end":16779826,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779827,"byte_end":16779849,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779850,"byte_end":16779857,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779858,"byte_end":16779880,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779881,"byte_end":16779888,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779889,"byte_end":16779892,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779893,"byte_end":16779941,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779942,"byte_end":16779945,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779946,"byte_end":16779957,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16779958,"byte_end":16780010,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780011,"byte_end":16780076,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780077,"byte_end":16780142,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780143,"byte_end":16780208,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780209,"byte_end":16780216,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780217,"byte_end":16780220,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780221,"byte_end":16780293,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780294,"byte_end":16780369,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780370,"byte_end":16780442,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780443,"byte_end":16780519,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780520,"byte_end":16780593,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780594,"byte_end":16780597,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780598,"byte_end":16780614,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780615,"byte_end":16780618,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780619,"byte_end":16780693,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780694,"byte_end":16780761,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780762,"byte_end":16780765,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780766,"byte_end":16780773,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780774,"byte_end":16780805,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780806,"byte_end":16780856,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780857,"byte_end":16780898,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780899,"byte_end":16780934,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780935,"byte_end":16780983,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16780984,"byte_end":16781015,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781016,"byte_end":16781064,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781065,"byte_end":16781085,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781086,"byte_end":16781108,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781109,"byte_end":16781116,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781117,"byte_end":16781139,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781140,"byte_end":16781147,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781148,"byte_end":16781151,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781152,"byte_end":16781200,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781201,"byte_end":16781204,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781205,"byte_end":16781216,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781217,"byte_end":16781243,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781244,"byte_end":16781289,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781290,"byte_end":16781335,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781336,"byte_end":16781381,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781382,"byte_end":16781385,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781386,"byte_end":16781414,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781415,"byte_end":16781460,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781461,"byte_end":16781506,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781507,"byte_end":16781552,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781553,"byte_end":16781560,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781561,"byte_end":16781564,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781565,"byte_end":16781637,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781638,"byte_end":16781714,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781715,"byte_end":16781785,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781786,"byte_end":16781855,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781856,"byte_end":16781893,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781894,"byte_end":16781897,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781898,"byte_end":16781972,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16781973,"byte_end":16782027,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782028,"byte_end":16782031,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782032,"byte_end":16782048,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782049,"byte_end":16782052,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782053,"byte_end":16782126,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782127,"byte_end":16782203,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782204,"byte_end":16782278,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782279,"byte_end":16782292,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782293,"byte_end":16782296,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782297,"byte_end":16782304,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782305,"byte_end":16782336,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782337,"byte_end":16782387,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782388,"byte_end":16782429,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782430,"byte_end":16782465,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782466,"byte_end":16782515,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782516,"byte_end":16782551,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782552,"byte_end":16782600,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782601,"byte_end":16782645,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782646,"byte_end":16782668,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782669,"byte_end":16782676,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782677,"byte_end":16782699,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782700,"byte_end":16782707,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782708,"byte_end":16782711,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782712,"byte_end":16782760,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782761,"byte_end":16782764,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782765,"byte_end":16782776,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782777,"byte_end":16782803,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782804,"byte_end":16782854,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782855,"byte_end":16782905,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782906,"byte_end":16782956,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782957,"byte_end":16782960,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782961,"byte_end":16782981,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16782982,"byte_end":16783012,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783013,"byte_end":16783043,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783044,"byte_end":16783074,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783075,"byte_end":16783082,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783083,"byte_end":16783086,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783087,"byte_end":16783160,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783161,"byte_end":16783236,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783237,"byte_end":16783309,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783310,"byte_end":16783348,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783349,"byte_end":16783352,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783353,"byte_end":16783427,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783428,"byte_end":16783504,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783505,"byte_end":16783578,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783579,"byte_end":16783607,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783608,"byte_end":16783611,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783612,"byte_end":16783628,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783629,"byte_end":16783632,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783633,"byte_end":16783706,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783707,"byte_end":16783783,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783784,"byte_end":16783858,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783859,"byte_end":16783931,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783932,"byte_end":16783943,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783944,"byte_end":16783947,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783948,"byte_end":16783955,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783956,"byte_end":16783987,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16783988,"byte_end":16784038,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784039,"byte_end":16784080,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784081,"byte_end":16784116,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784117,"byte_end":16784166,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784167,"byte_end":16784202,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784203,"byte_end":16784268,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784269,"byte_end":16784289,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784290,"byte_end":16784312,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784313,"byte_end":16784320,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784321,"byte_end":16784328,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784329,"byte_end":16784332,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784333,"byte_end":16784381,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784382,"byte_end":16784385,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784386,"byte_end":16784397,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784398,"byte_end":16784424,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784425,"byte_end":16784475,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784476,"byte_end":16784526,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784527,"byte_end":16784577,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784578,"byte_end":16784581,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784582,"byte_end":16784602,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784603,"byte_end":16784633,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784634,"byte_end":16784664,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784665,"byte_end":16784695,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784696,"byte_end":16784703,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784704,"byte_end":16784707,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784708,"byte_end":16784781,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784782,"byte_end":16784856,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784857,"byte_end":16784931,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16784932,"byte_end":16785005,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785006,"byte_end":16785082,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785083,"byte_end":16785116,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785117,"byte_end":16785120,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785121,"byte_end":16785137,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785138,"byte_end":16785141,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785142,"byte_end":16785216,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785217,"byte_end":16785284,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785285,"byte_end":16785288,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785289,"byte_end":16785296,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785297,"byte_end":16785328,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785329,"byte_end":16785379,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785380,"byte_end":16785421,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785422,"byte_end":16785457,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785458,"byte_end":16785506,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785507,"byte_end":16785538,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785539,"byte_end":16785586,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785587,"byte_end":16785633,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785634,"byte_end":16785656,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785657,"byte_end":16785664,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785665,"byte_end":16785687,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785688,"byte_end":16785695,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785696,"byte_end":16785699,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785700,"byte_end":16785748,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785749,"byte_end":16785752,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785753,"byte_end":16785764,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785765,"byte_end":16785821,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785822,"byte_end":16785883,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785884,"byte_end":16785945,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16785946,"byte_end":16786007,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786008,"byte_end":16786015,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786016,"byte_end":16786019,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786020,"byte_end":16786094,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786095,"byte_end":16786115,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786116,"byte_end":16786119,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786120,"byte_end":16786134,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786135,"byte_end":16786138,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786139,"byte_end":16786214,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786215,"byte_end":16786287,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786288,"byte_end":16786356,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786357,"byte_end":16786433,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786434,"byte_end":16786475,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786476,"byte_end":16786479,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786480,"byte_end":16786550,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786551,"byte_end":16786569,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786570,"byte_end":16786573,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786574,"byte_end":16786581,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786582,"byte_end":16786614,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786615,"byte_end":16786665,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786666,"byte_end":16786710,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786711,"byte_end":16786724,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786725,"byte_end":16786760,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786761,"byte_end":16786796,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786797,"byte_end":16786820,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786821,"byte_end":16786828,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786829,"byte_end":16786851,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786852,"byte_end":16786859,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786860,"byte_end":16786863,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786864,"byte_end":16786914,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786915,"byte_end":16786918,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786919,"byte_end":16786930,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786931,"byte_end":16786964,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786965,"byte_end":16786998,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16786999,"byte_end":16787032,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787033,"byte_end":16787040,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787041,"byte_end":16787044,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787045,"byte_end":16787114,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787115,"byte_end":16787152,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787153,"byte_end":16787192,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787193,"byte_end":16787238,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787239,"byte_end":16787286,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787287,"byte_end":16787317,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787318,"byte_end":16787351,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787918,"byte_end":16787925,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787600,"byte_end":16787655,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787656,"byte_end":16787659,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787660,"byte_end":16787735,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787736,"byte_end":16787816,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16787817,"byte_end":16787876,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788596,"byte_end":16788621,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":955}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788511,"byte_end":16788584,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788973,"byte_end":16788993,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788642,"byte_end":16788716,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788717,"byte_end":16788720,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788721,"byte_end":16788800,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788801,"byte_end":16788844,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788845,"byte_end":16788848,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788849,"byte_end":16788902,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788903,"byte_end":16788906,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16788907,"byte_end":16788937,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789337,"byte_end":16789340,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789246,"byte_end":16789325,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789567,"byte_end":16789574,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789464,"byte_end":16789539,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789544,"byte_end":16789555,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789796,"byte_end":16789812,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789624,"byte_end":16789665,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789670,"byte_end":16789673,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789678,"byte_end":16789751,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789756,"byte_end":16789784,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16790233,"byte_end":16790253,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789877,"byte_end":16789911,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789916,"byte_end":16789919,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789924,"byte_end":16789994,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789999,"byte_end":16790074,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16790079,"byte_end":16790151,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16790156,"byte_end":16790221,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795042,"byte_end":16795057,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16794966,"byte_end":16795027,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795982,"byte_end":16795985,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795436,"byte_end":16795511,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795516,"byte_end":16795527,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795532,"byte_end":16795535,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795540,"byte_end":16795554,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795559,"byte_end":16795562,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795567,"byte_end":16795574,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795579,"byte_end":16795610,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795615,"byte_end":16795663,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795668,"byte_end":16795671,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795676,"byte_end":16795717,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795722,"byte_end":16795757,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795762,"byte_end":16795793,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795798,"byte_end":16795833,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795838,"byte_end":16795867,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795872,"byte_end":16795892,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795897,"byte_end":16795919,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795924,"byte_end":16795931,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795936,"byte_end":16795958,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795963,"byte_end":16795970,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797170,"byte_end":16797180,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796649,"byte_end":16796698,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796703,"byte_end":16796706,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796711,"byte_end":16796743,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796748,"byte_end":16796751,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796756,"byte_end":16796824,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796829,"byte_end":16796832,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796837,"byte_end":16796851,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796856,"byte_end":16796859,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796864,"byte_end":16796871,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796876,"byte_end":16796907,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796912,"byte_end":16796960,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796965,"byte_end":16796968,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16796973,"byte_end":16797014,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797019,"byte_end":16797054,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797059,"byte_end":16797080,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797085,"byte_end":16797107,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797112,"byte_end":16797119,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797124,"byte_end":16797146,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797151,"byte_end":16797158,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797812,"byte_end":16797825,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797279,"byte_end":16797331,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797336,"byte_end":16797339,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797344,"byte_end":16797382,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797387,"byte_end":16797390,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797395,"byte_end":16797463,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797468,"byte_end":16797471,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797476,"byte_end":16797490,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797495,"byte_end":16797498,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797503,"byte_end":16797510,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797515,"byte_end":16797546,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797551,"byte_end":16797599,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797604,"byte_end":16797607,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797612,"byte_end":16797653,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797658,"byte_end":16797693,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797698,"byte_end":16797722,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797727,"byte_end":16797749,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797754,"byte_end":16797761,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797766,"byte_end":16797788,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797793,"byte_end":16797800,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798458,"byte_end":16798471,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797925,"byte_end":16797977,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797982,"byte_end":16797985,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16797990,"byte_end":16798028,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798033,"byte_end":16798036,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798041,"byte_end":16798109,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798114,"byte_end":16798117,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798122,"byte_end":16798136,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798141,"byte_end":16798144,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798149,"byte_end":16798156,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798161,"byte_end":16798192,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798197,"byte_end":16798245,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798250,"byte_end":16798253,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798258,"byte_end":16798299,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798304,"byte_end":16798339,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798344,"byte_end":16798368,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798373,"byte_end":16798395,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798400,"byte_end":16798407,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798412,"byte_end":16798434,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798439,"byte_end":16798446,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799568,"byte_end":16799584,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798640,"byte_end":16798678,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798683,"byte_end":16798686,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798691,"byte_end":16798763,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798768,"byte_end":16798793,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798798,"byte_end":16798801,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798806,"byte_end":16798878,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798883,"byte_end":16798952,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16798957,"byte_end":16799030,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799035,"byte_end":16799047,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799052,"byte_end":16799055,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799060,"byte_end":16799135,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799140,"byte_end":16799201,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799206,"byte_end":16799209,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799214,"byte_end":16799228,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799233,"byte_end":16799236,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799241,"byte_end":16799248,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799253,"byte_end":16799284,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799289,"byte_end":16799337,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799342,"byte_end":16799345,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799350,"byte_end":16799391,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799396,"byte_end":16799431,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799436,"byte_end":16799478,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799483,"byte_end":16799505,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799510,"byte_end":16799517,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799522,"byte_end":16799544,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799549,"byte_end":16799556,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800683,"byte_end":16800700,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799681,"byte_end":16799751,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799756,"byte_end":16799759,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799764,"byte_end":16799837,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799842,"byte_end":16799862,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799867,"byte_end":16799870,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799875,"byte_end":16799889,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799894,"byte_end":16799897,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799902,"byte_end":16799909,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799914,"byte_end":16799945,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16799950,"byte_end":16799998,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800003,"byte_end":16800006,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800011,"byte_end":16800052,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800057,"byte_end":16800092,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800097,"byte_end":16800132,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800137,"byte_end":16800159,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800164,"byte_end":16800171,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800176,"byte_end":16800198,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800203,"byte_end":16800210,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800215,"byte_end":16800218,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800223,"byte_end":16800297,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800302,"byte_end":16800343,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800348,"byte_end":16800351,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800356,"byte_end":16800375,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800380,"byte_end":16800411,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800416,"byte_end":16800466,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800471,"byte_end":16800512,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800517,"byte_end":16800552,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800557,"byte_end":16800593,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800598,"byte_end":16800620,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800625,"byte_end":16800632,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800637,"byte_end":16800659,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800664,"byte_end":16800671,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801385,"byte_end":16801404,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800821,"byte_end":16800884,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800889,"byte_end":16800892,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800897,"byte_end":16800948,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800953,"byte_end":16800956,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16800961,"byte_end":16801029,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801034,"byte_end":16801037,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801042,"byte_end":16801056,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801061,"byte_end":16801064,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801069,"byte_end":16801076,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801081,"byte_end":16801112,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801117,"byte_end":16801165,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801170,"byte_end":16801173,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801178,"byte_end":16801219,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801224,"byte_end":16801259,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801264,"byte_end":16801295,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801300,"byte_end":16801322,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801327,"byte_end":16801334,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801339,"byte_end":16801361,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801366,"byte_end":16801373,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802063,"byte_end":16802082,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801573,"byte_end":16801639,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801644,"byte_end":16801647,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801652,"byte_end":16801707,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801712,"byte_end":16801715,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801720,"byte_end":16801734,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801739,"byte_end":16801742,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801747,"byte_end":16801754,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801759,"byte_end":16801790,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801795,"byte_end":16801843,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801848,"byte_end":16801851,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801856,"byte_end":16801897,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801902,"byte_end":16801937,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801942,"byte_end":16801973,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16801978,"byte_end":16802000,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802005,"byte_end":16802012,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802017,"byte_end":16802039,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802044,"byte_end":16802051,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802636,"byte_end":16802653,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802185,"byte_end":16802258,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802263,"byte_end":16802281,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802286,"byte_end":16802289,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802294,"byte_end":16802308,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802313,"byte_end":16802316,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802321,"byte_end":16802328,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802333,"byte_end":16802364,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802369,"byte_end":16802417,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802422,"byte_end":16802425,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802430,"byte_end":16802471,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802476,"byte_end":16802511,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802516,"byte_end":16802546,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802551,"byte_end":16802573,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802578,"byte_end":16802585,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802590,"byte_end":16802612,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802617,"byte_end":16802624,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803303,"byte_end":16803311,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802754,"byte_end":16802817,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802822,"byte_end":16802825,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802830,"byte_end":16802891,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802896,"byte_end":16802899,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802904,"byte_end":16802958,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802963,"byte_end":16802966,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802971,"byte_end":16802985,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802990,"byte_end":16802993,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16802998,"byte_end":16803005,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803010,"byte_end":16803041,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803046,"byte_end":16803094,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803099,"byte_end":16803102,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803107,"byte_end":16803148,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803153,"byte_end":16803188,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803193,"byte_end":16803213,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803218,"byte_end":16803240,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803245,"byte_end":16803252,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803257,"byte_end":16803279,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803284,"byte_end":16803291,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803835,"byte_end":16803844,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803409,"byte_end":16803472,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803477,"byte_end":16803480,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803485,"byte_end":16803499,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803504,"byte_end":16803507,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803512,"byte_end":16803519,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803524,"byte_end":16803572,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803577,"byte_end":16803598,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803603,"byte_end":16803638,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803643,"byte_end":16803674,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803679,"byte_end":16803714,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803719,"byte_end":16803748,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803753,"byte_end":16803773,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803778,"byte_end":16803799,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803804,"byte_end":16803811,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803816,"byte_end":16803823,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804504,"byte_end":16804512,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16803996,"byte_end":16804049,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804054,"byte_end":16804057,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804062,"byte_end":16804076,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804081,"byte_end":16804084,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804089,"byte_end":16804096,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804101,"byte_end":16804132,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804137,"byte_end":16804185,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804190,"byte_end":16804193,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804198,"byte_end":16804239,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804244,"byte_end":16804279,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804284,"byte_end":16804315,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804320,"byte_end":16804355,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804360,"byte_end":16804389,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804394,"byte_end":16804414,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804419,"byte_end":16804441,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804446,"byte_end":16804453,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804458,"byte_end":16804480,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804485,"byte_end":16804492,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805089,"byte_end":16805098,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804676,"byte_end":16804730,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804735,"byte_end":16804738,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804743,"byte_end":16804757,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804762,"byte_end":16804765,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804770,"byte_end":16804777,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804782,"byte_end":16804814,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804819,"byte_end":16804869,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804874,"byte_end":16804918,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804923,"byte_end":16804958,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16804963,"byte_end":16804998,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805003,"byte_end":16805026,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805031,"byte_end":16805038,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805043,"byte_end":16805065,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805070,"byte_end":16805077,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805711,"byte_end":16805721,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805259,"byte_end":16805308,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805313,"byte_end":16805316,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805321,"byte_end":16805335,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805340,"byte_end":16805343,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805348,"byte_end":16805355,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805360,"byte_end":16805405,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805410,"byte_end":16805460,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805465,"byte_end":16805521,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805526,"byte_end":16805539,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805544,"byte_end":16805579,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805584,"byte_end":16805619,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805624,"byte_end":16805648,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805653,"byte_end":16805660,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805665,"byte_end":16805687,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16805692,"byte_end":16805699,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807100,"byte_end":16807110,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16806857,"byte_end":16806944,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16806945,"byte_end":16806948,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16806949,"byte_end":16806987,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16806988,"byte_end":16807026,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808210,"byte_end":16808213,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807791,"byte_end":16807851,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807856,"byte_end":16807859,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807864,"byte_end":16807874,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807879,"byte_end":16807882,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807887,"byte_end":16807959,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807964,"byte_end":16808037,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808042,"byte_end":16808109,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808114,"byte_end":16808117,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808122,"byte_end":16808198,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809344,"byte_end":16809363,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808371,"byte_end":16808431,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808436,"byte_end":16808439,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808444,"byte_end":16808507,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808512,"byte_end":16808590,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808595,"byte_end":16808662,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808667,"byte_end":16808739,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808744,"byte_end":16808814,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808819,"byte_end":16808842,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808847,"byte_end":16808850,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808855,"byte_end":16808865,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808870,"byte_end":16808873,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808878,"byte_end":16808953,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16808958,"byte_end":16809031,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809036,"byte_end":16809112,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809117,"byte_end":16809190,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809195,"byte_end":16809265,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809270,"byte_end":16809273,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809278,"byte_end":16809332,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809929,"byte_end":16809939,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809491,"byte_end":16809541,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809546,"byte_end":16809549,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809554,"byte_end":16809561,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809566,"byte_end":16809585,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809590,"byte_end":16809628,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809633,"byte_end":16809636,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809641,"byte_end":16809675,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809680,"byte_end":16809727,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809732,"byte_end":16809739,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809744,"byte_end":16809751,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809756,"byte_end":16809794,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809799,"byte_end":16809802,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809807,"byte_end":16809860,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809865,"byte_end":16809905,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16809910,"byte_end":16809917,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814265,"byte_end":16814286,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814219,"byte_end":16814260,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814322,"byte_end":16814324,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814292,"byte_end":16814317,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814197,"byte_end":16814212,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1249}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814114,"byte_end":16814170,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816246,"byte_end":16816263,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815060,"byte_end":16815201,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815202,"byte_end":16815205,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815206,"byte_end":16815244,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815245,"byte_end":16815283,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815284,"byte_end":16815287,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815288,"byte_end":16815301,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815302,"byte_end":16815369,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815370,"byte_end":16815373,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815374,"byte_end":16815407,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815408,"byte_end":16815437,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815438,"byte_end":16815441,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815442,"byte_end":16815449,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815450,"byte_end":16815506,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815507,"byte_end":16815541,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815542,"byte_end":16815545,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815546,"byte_end":16815551,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815552,"byte_end":16815599,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815600,"byte_end":16815653,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815654,"byte_end":16815731,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815732,"byte_end":16815767,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815768,"byte_end":16815789,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815790,"byte_end":16815840,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815841,"byte_end":16815904,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815905,"byte_end":16815968,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16815969,"byte_end":16816032,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816033,"byte_end":16816089,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816090,"byte_end":16816139,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816140,"byte_end":16816152,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816153,"byte_end":16816160,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816161,"byte_end":16816168,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16816169,"byte_end":16816172,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817598,"byte_end":16817601,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817156,"byte_end":16817224,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817229,"byte_end":16817232,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817237,"byte_end":16817247,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817252,"byte_end":16817255,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817260,"byte_end":16817339,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817344,"byte_end":16817418,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817423,"byte_end":16817490,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817495,"byte_end":16817498,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817503,"byte_end":16817586,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818912,"byte_end":16818931,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817881,"byte_end":16817949,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817954,"byte_end":16817957,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817962,"byte_end":16818032,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818037,"byte_end":16818123,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818128,"byte_end":16818198,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818203,"byte_end":16818280,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818285,"byte_end":16818355,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818360,"byte_end":16818383,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818388,"byte_end":16818391,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818396,"byte_end":16818406,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818411,"byte_end":16818414,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818419,"byte_end":16818501,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818506,"byte_end":16818579,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818584,"byte_end":16818661,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818666,"byte_end":16818739,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818744,"byte_end":16818819,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818824,"byte_end":16818827,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16818832,"byte_end":16818900,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819719,"byte_end":16819729,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819188,"byte_end":16819239,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819244,"byte_end":16819247,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819252,"byte_end":16819259,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819264,"byte_end":16819283,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819288,"byte_end":16819333,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819338,"byte_end":16819341,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819346,"byte_end":16819418,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819423,"byte_end":16819470,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819475,"byte_end":16819482,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819487,"byte_end":16819494,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819499,"byte_end":16819544,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819549,"byte_end":16819552,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819557,"byte_end":16819650,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819655,"byte_end":16819695,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819700,"byte_end":16819707,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823825,"byte_end":16823847,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823778,"byte_end":16823820,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823883,"byte_end":16823885,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823853,"byte_end":16823878,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823749,"byte_end":16823771,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1281}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823665,"byte_end":16823722,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1328},{"krate":0,"index":1367},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1438}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\cfg.rs","byte_start":6068,"byte_end":6090,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824454,"byte_end":16824487,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824488,"byte_end":16824491,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824492,"byte_end":16824573,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824574,"byte_end":16824638,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824639,"byte_end":16824642,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824643,"byte_end":16824709,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824710,"byte_end":16824784,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824785,"byte_end":16824828,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824829,"byte_end":16824832,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824833,"byte_end":16824896,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\mod.rs","byte_start":16824897,"byte_end":16824936,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826307,"byte_end":16826315,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825384,"byte_end":16825462,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825463,"byte_end":16825466,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825467,"byte_end":16825496,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825497,"byte_end":16825500,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825501,"byte_end":16825514,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825515,"byte_end":16825518,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825519,"byte_end":16825526,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825527,"byte_end":16825560,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825561,"byte_end":16825592,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825593,"byte_end":16825619,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825620,"byte_end":16825669,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825670,"byte_end":16825690,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825691,"byte_end":16825737,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825738,"byte_end":16825741,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825742,"byte_end":16825820,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825821,"byte_end":16825834,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825835,"byte_end":16825939,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825940,"byte_end":16825943,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825944,"byte_end":16825978,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16825979,"byte_end":16826001,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826002,"byte_end":16826005,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826006,"byte_end":16826016,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826017,"byte_end":16826036,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826037,"byte_end":16826090,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826091,"byte_end":16826094,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826095,"byte_end":16826114,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826115,"byte_end":16826133,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826134,"byte_end":16826143,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826144,"byte_end":16826149,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826150,"byte_end":16826153,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826154,"byte_end":16826198,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826199,"byte_end":16826223,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826224,"byte_end":16826264,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826265,"byte_end":16826277,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826278,"byte_end":16826285,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826286,"byte_end":16826293,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828201,"byte_end":16828213,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828722,"byte_end":16828725,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828515,"byte_end":16828576,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828581,"byte_end":16828617,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828622,"byte_end":16828625,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828630,"byte_end":16828669,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828674,"byte_end":16828710,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829160,"byte_end":16829173,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"pub fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828899,"byte_end":16828960,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828965,"byte_end":16829001,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829006,"byte_end":16829055,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829060,"byte_end":16829063,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829068,"byte_end":16829107,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829112,"byte_end":16829148,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832181,"byte_end":16832193,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832810,"byte_end":16832813,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832392,"byte_end":16832472,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832477,"byte_end":16832480,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832485,"byte_end":16832561,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832566,"byte_end":16832637,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832642,"byte_end":16832687,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832692,"byte_end":16832695,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832700,"byte_end":16832735,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832740,"byte_end":16832763,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832768,"byte_end":16832798,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833341,"byte_end":16833362,"line_start":98,"line_end":98,"column_start":12,"column_end":33},"name":"into_inner_with_chunk","qualname":"<StreamReader<S, B>>::into_inner_with_chunk","value":"pub fn into_inner_with_chunk(Self) -> (S, Option<B>)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `StreamReader`, returning a Tuple consisting\n of the underlying stream and an Option of the interal buffer,\n which is Some in case the buffer contains elements.\n","sig":null,"attributes":[{"value":"/ Consumes this `StreamReader`, returning a Tuple consisting","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833137,"byte_end":16833199,"line_start":95,"line_end":95,"column_start":5,"column_end":67}},{"value":"/ of the underlying stream and an Option of the interal buffer,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833204,"byte_end":16833269,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ which is Some in case the buffer contains elements.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833274,"byte_end":16833329,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833696,"byte_end":16833703,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833559,"byte_end":16833605,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833610,"byte_end":16833613,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833618,"byte_end":16833684,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833895,"byte_end":16833902,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833750,"byte_end":16833804,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833809,"byte_end":16833812,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833817,"byte_end":16833883,"line_start":117,"line_end":117,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834113,"byte_end":16834124,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833961,"byte_end":16834022,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834027,"byte_end":16834030,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834035,"byte_end":16834101,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834547,"byte_end":16834557,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834204,"byte_end":16834267,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834272,"byte_end":16834275,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834280,"byte_end":16834343,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/ If you additionally want access to the internal buffer use","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834348,"byte_end":16834410,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/ [`into_inner_with_chunk`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834415,"byte_end":16834445,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834450,"byte_end":16834453,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`into_inner_with_chunk`]: crate::io::StreamReader::into_inner_with_chunk","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834458,"byte_end":16834535,"line_start":135,"line_end":135,"column_start":5,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":317}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mod.rs","byte_start":6853,"byte_end":6883,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14322,"byte_end":14331,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1442}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14145,"byte_end":14209,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14210,"byte_end":14293,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14594,"byte_end":14600,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14407,"byte_end":14481,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14486,"byte_end":14556,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14561,"byte_end":14582,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8733,"byte_end":8750,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7511,"byte_end":7588,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7589,"byte_end":7599,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7600,"byte_end":7603,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7604,"byte_end":7669,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7670,"byte_end":7744,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7745,"byte_end":7748,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7749,"byte_end":7832,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7833,"byte_end":7836,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7837,"byte_end":7851,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7852,"byte_end":7855,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7856,"byte_end":7869,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7870,"byte_end":7892,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7893,"byte_end":7937,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7938,"byte_end":7941,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7942,"byte_end":7960,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7961,"byte_end":7982,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":7983,"byte_end":8028,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8029,"byte_end":8070,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8071,"byte_end":8074,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8075,"byte_end":8126,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8127,"byte_end":8190,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8191,"byte_end":8212,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8213,"byte_end":8262,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8263,"byte_end":8309,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8310,"byte_end":8331,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8332,"byte_end":8349,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8350,"byte_end":8431,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8432,"byte_end":8454,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8455,"byte_end":8472,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8473,"byte_end":8486,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8487,"byte_end":8498,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8499,"byte_end":8502,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8503,"byte_end":8536,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8537,"byte_end":8612,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8613,"byte_end":8640,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8657,"byte_end":8707,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8708,"byte_end":8713,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8714,"byte_end":8721,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":8977,"byte_end":9002,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":12991796,"byte_end":12991805,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9986,"byte_end":9989,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9911,"byte_end":9974,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11388,"byte_end":11399,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10121,"byte_end":10192,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10197,"byte_end":10230,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10235,"byte_end":10238,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10243,"byte_end":10314,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10319,"byte_end":10351,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10356,"byte_end":10359,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10364,"byte_end":10378,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10383,"byte_end":10386,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10391,"byte_end":10404,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10409,"byte_end":10431,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10436,"byte_end":10480,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10485,"byte_end":10488,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10493,"byte_end":10511,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10516,"byte_end":10537,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10542,"byte_end":10587,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10592,"byte_end":10638,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10643,"byte_end":10646,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10651,"byte_end":10702,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10707,"byte_end":10770,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10775,"byte_end":10796,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10801,"byte_end":10849,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10854,"byte_end":10900,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10905,"byte_end":10926,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10931,"byte_end":10948,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":10953,"byte_end":11034,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11039,"byte_end":11061,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11066,"byte_end":11083,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11088,"byte_end":11101,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11106,"byte_end":11117,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11122,"byte_end":11125,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11130,"byte_end":11163,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11168,"byte_end":11243,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11248,"byte_end":11275,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11280,"byte_end":11291,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11296,"byte_end":11299,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11304,"byte_end":11354,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11359,"byte_end":11364,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11369,"byte_end":11376,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12122,"byte_end":12128,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11534,"byte_end":11606,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11611,"byte_end":11631,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11636,"byte_end":11639,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11644,"byte_end":11711,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11716,"byte_end":11719,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11724,"byte_end":11797,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11802,"byte_end":11877,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11882,"byte_end":11956,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":11961,"byte_end":12033,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12038,"byte_end":12110,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12260,"byte_end":12272,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12189,"byte_end":12248,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12631,"byte_end":12640,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12346,"byte_end":12420,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12425,"byte_end":12428,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12433,"byte_end":12507,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12512,"byte_end":12543,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12548,"byte_end":12551,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12556,"byte_end":12575,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12580,"byte_end":12583,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12588,"byte_end":12619,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12984,"byte_end":12994,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12821,"byte_end":12862,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12867,"byte_end":12870,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12875,"byte_end":12947,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":12952,"byte_end":12972,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29397,"byte_end":29410,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29302,"byte_end":29368,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29689,"byte_end":29699,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29458,"byte_end":29496,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29501,"byte_end":29504,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29509,"byte_end":29603,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29608,"byte_end":29677,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":30219,"byte_end":30229,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":30081,"byte_end":30138,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":30139,"byte_end":30142,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":30143,"byte_end":30190,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31133,"byte_end":31136,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31090,"byte_end":31121,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":32120,"byte_end":32132,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31459,"byte_end":31513,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31518,"byte_end":31521,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31526,"byte_end":31611,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31616,"byte_end":31632,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31637,"byte_end":31640,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31645,"byte_end":31739,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31744,"byte_end":31830,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31835,"byte_end":31906,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31911,"byte_end":31986,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31991,"byte_end":31994,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31999,"byte_end":32011,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":32016,"byte_end":32019,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":32024,"byte_end":32108,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":34137,"byte_end":34146,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33677,"byte_end":33710,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33715,"byte_end":33718,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33723,"byte_end":33809,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33814,"byte_end":33849,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33854,"byte_end":33857,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33862,"byte_end":33874,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33879,"byte_end":33882,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33887,"byte_end":33971,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33976,"byte_end":33979,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":33984,"byte_end":33996,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":34001,"byte_end":34004,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":34009,"byte_end":34105,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":34110,"byte_end":34125,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35165,"byte_end":35174,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35019,"byte_end":35065,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35070,"byte_end":35073,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35078,"byte_end":35153,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35496,"byte_end":35503,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35272,"byte_end":35335,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35340,"byte_end":35343,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35348,"byte_end":35444,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35449,"byte_end":35484,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36301,"byte_end":36306,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35575,"byte_end":35598,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35603,"byte_end":35606,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35611,"byte_end":35705,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35710,"byte_end":35803,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35808,"byte_end":35811,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35816,"byte_end":35910,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":35915,"byte_end":36010,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36015,"byte_end":36111,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36116,"byte_end":36171,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36176,"byte_end":36179,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36184,"byte_end":36239,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36244,"byte_end":36289,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":37240,"byte_end":37250,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36944,"byte_end":36992,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":36997,"byte_end":37000,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":37005,"byte_end":37089,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":37094,"byte_end":37189,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":37194,"byte_end":37228,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40468,"byte_end":40481,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40337,"byte_end":40410,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40411,"byte_end":40414,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40415,"byte_end":40456,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40684,"byte_end":40687,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40639,"byte_end":40672,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40851,"byte_end":40856,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40814,"byte_end":40839,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40962,"byte_end":40973,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40908,"byte_end":40950,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41088,"byte_end":41098,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41043,"byte_end":41076,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41832,"byte_end":41844,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41159,"byte_end":41207,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41212,"byte_end":41215,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41220,"byte_end":41261,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41266,"byte_end":41269,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41274,"byte_end":41336,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41341,"byte_end":41401,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41406,"byte_end":41466,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41471,"byte_end":41474,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41479,"byte_end":41554,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41559,"byte_end":41627,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41632,"byte_end":41708,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":41786,"byte_end":41820,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43272,"byte_end":43289,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":42988,"byte_end":43040,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43045,"byte_end":43048,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43053,"byte_end":43129,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43134,"byte_end":43168,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43173,"byte_end":43176,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43181,"byte_end":43260,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43749,"byte_end":43760,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43362,"byte_end":43404,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43409,"byte_end":43412,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43417,"byte_end":43490,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43495,"byte_end":43535,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43540,"byte_end":43543,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43548,"byte_end":43618,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43623,"byte_end":43657,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43662,"byte_end":43665,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43670,"byte_end":43737,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":44908,"byte_end":44925,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":44703,"byte_end":44765,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":44766,"byte_end":44769,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":44770,"byte_end":44837,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":44838,"byte_end":44896,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45120,"byte_end":45123,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45037,"byte_end":45108,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45588,"byte_end":45591,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45373,"byte_end":45425,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45430,"byte_end":45433,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45438,"byte_end":45510,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45515,"byte_end":45576,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":46029,"byte_end":46036,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45788,"byte_end":45840,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45845,"byte_end":45848,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45853,"byte_end":45926,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45931,"byte_end":46001,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":46006,"byte_end":46017,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":47866,"byte_end":47873,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":47802,"byte_end":47854,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48159,"byte_end":48163,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48104,"byte_end":48147,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":1512},{"krate":0,"index":1521},{"krate":0,"index":1525},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":384}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49304,"byte_end":49339,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51286,"byte_end":51290,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51299,"byte_end":51304,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51267,"byte_end":51273,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1518}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49516,"byte_end":49622,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49623,"byte_end":49626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49627,"byte_end":49717,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49718,"byte_end":49721,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49722,"byte_end":49757,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49758,"byte_end":49761,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49762,"byte_end":49775,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49776,"byte_end":49779,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49780,"byte_end":49817,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49818,"byte_end":49821,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49822,"byte_end":49841,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49842,"byte_end":49884,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49885,"byte_end":49935,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49936,"byte_end":49987,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":49988,"byte_end":50006,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50007,"byte_end":50028,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50029,"byte_end":50071,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50072,"byte_end":50105,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50106,"byte_end":50122,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50123,"byte_end":50217,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50218,"byte_end":50228,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50229,"byte_end":50232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50233,"byte_end":50280,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50281,"byte_end":50286,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50287,"byte_end":50294,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50295,"byte_end":50298,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50499,"byte_end":50502,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50503,"byte_end":50589,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50590,"byte_end":50600,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50601,"byte_end":50604,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50605,"byte_end":50612,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50613,"byte_end":50648,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50649,"byte_end":50691,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50692,"byte_end":50742,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50743,"byte_end":50794,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50795,"byte_end":50798,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50799,"byte_end":50817,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50818,"byte_end":50839,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50840,"byte_end":50882,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50883,"byte_end":50930,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50931,"byte_end":50947,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50948,"byte_end":50997,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":50998,"byte_end":51008,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51009,"byte_end":51012,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51013,"byte_end":51046,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51047,"byte_end":51087,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51088,"byte_end":51120,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51121,"byte_end":51126,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51127,"byte_end":51134,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51135,"byte_end":51157,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2417,"byte_end":2430,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\nB: BufMut>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1188,"byte_end":1273,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1278,"byte_end":1281,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1286,"byte_end":1312,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1317,"byte_end":1320,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1325,"byte_end":1338,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1343,"byte_end":1346,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1351,"byte_end":1358,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1363,"byte_end":1396,"line_start":75,"line_end":75,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1401,"byte_end":1432,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1437,"byte_end":1463,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1468,"byte_end":1522,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1527,"byte_end":1560,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1565,"byte_end":1587,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1592,"byte_end":1612,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1617,"byte_end":1663,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1668,"byte_end":1671,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1676,"byte_end":1754,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1759,"byte_end":1772,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1777,"byte_end":1881,"line_start":86,"line_end":86,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1886,"byte_end":1889,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1894,"byte_end":1928,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1933,"byte_end":1955,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1968,"byte_end":1978,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":1983,"byte_end":2002,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2007,"byte_end":2093,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2098,"byte_end":2101,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2106,"byte_end":2125,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2130,"byte_end":2148,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2153,"byte_end":2162,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2167,"byte_end":2172,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2177,"byte_end":2180,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2185,"byte_end":2229,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2234,"byte_end":2258,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2263,"byte_end":2303,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2308,"byte_end":2320,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2325,"byte_end":2332,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":2337,"byte_end":2344,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4718,"byte_end":4732,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\nB: Buf>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3346,"byte_end":3414,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3419,"byte_end":3478,"line_start":138,"line_end":138,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3483,"byte_end":3486,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3491,"byte_end":3568,"line_start":140,"line_end":140,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3573,"byte_end":3593,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3598,"byte_end":3601,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3606,"byte_end":3620,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3625,"byte_end":3628,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3633,"byte_end":3704,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3709,"byte_end":3721,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3726,"byte_end":3729,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3734,"byte_end":3747,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3752,"byte_end":3791,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3796,"byte_end":3814,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3819,"byte_end":3843,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3848,"byte_end":3851,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3856,"byte_end":3875,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3880,"byte_end":3904,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3909,"byte_end":3931,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3936,"byte_end":3969,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3974,"byte_end":3977,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":3982,"byte_end":4000,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4005,"byte_end":4044,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4049,"byte_end":4103,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4108,"byte_end":4160,"line_start":161,"line_end":161,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4165,"byte_end":4168,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4173,"byte_end":4243,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4248,"byte_end":4268,"line_start":164,"line_end":164,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4273,"byte_end":4308,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4313,"byte_end":4396,"line_start":166,"line_end":166,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4401,"byte_end":4410,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4415,"byte_end":4418,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4423,"byte_end":4437,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4442,"byte_end":4447,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4452,"byte_end":4459,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4464,"byte_end":4467,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4472,"byte_end":4495,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4500,"byte_end":4541,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4546,"byte_end":4575,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":4580,"byte_end":4645,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727208,"byte_end":16727218,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727369,"byte_end":16727379,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727706,"byte_end":16727716,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727940,"byte_end":16727950,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738187,"byte_end":16738196,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738428,"byte_end":16738438,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738589,"byte_end":16738598,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738953,"byte_end":16738963,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739209,"byte_end":16739217,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739314,"byte_end":16739322,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739433,"byte_end":16739441,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739541,"byte_end":16739549,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739659,"byte_end":16739669,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16747956,"byte_end":16747966,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16750801,"byte_end":16750807,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754663,"byte_end":16754669,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16761060,"byte_end":16761066,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16761382,"byte_end":16761388,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762103,"byte_end":16762109,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16763149,"byte_end":16763160,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764087,"byte_end":16764097,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765026,"byte_end":16765036,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767866,"byte_end":16767876,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16768189,"byte_end":16768199,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16768925,"byte_end":16768935,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16769914,"byte_end":16769925,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770281,"byte_end":16770292,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16773137,"byte_end":16773148,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16773912,"byte_end":16773923,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16774164,"byte_end":16774175,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789219,"byte_end":16789239,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16792573,"byte_end":16792593,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16793479,"byte_end":16793499,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16794840,"byte_end":16794860,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795422,"byte_end":16795429,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806204,"byte_end":16806211,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806337,"byte_end":16806362,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806520,"byte_end":16806545,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806680,"byte_end":16806705,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807774,"byte_end":16807784,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16810326,"byte_end":16810336,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16813712,"byte_end":16813722,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814045,"byte_end":16814055,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814362,"byte_end":16814377,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814659,"byte_end":16814674,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814791,"byte_end":16814806,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817132,"byte_end":16817149,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819798,"byte_end":16819815,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823107,"byte_end":16823124,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823488,"byte_end":16823505,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823923,"byte_end":16823945,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16824274,"byte_end":16824296,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16824427,"byte_end":16824449,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826544,"byte_end":16826553,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828493,"byte_end":16828505,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829392,"byte_end":16829404,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832284,"byte_end":16832296,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833534,"byte_end":16833546,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834627,"byte_end":16834639,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16835400,"byte_end":16835412,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14391,"byte_end":14400,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14760,"byte_end":14769,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17219,"byte_end":17227,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9201,"byte_end":9218,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9443,"byte_end":9460,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9651,"byte_end":9668,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9780,"byte_end":9797,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9887,"byte_end":9904,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":13142,"byte_end":13167,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":13339,"byte_end":13364,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29435,"byte_end":29448,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29770,"byte_end":29783,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29943,"byte_end":29956,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31070,"byte_end":31080,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":38721,"byte_end":38731,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":39461,"byte_end":39471,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40619,"byte_end":40632,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43844,"byte_end":43857,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":44071,"byte_end":44084,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":44202,"byte_end":44215,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":44427,"byte_end":44440,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45006,"byte_end":45023,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48270,"byte_end":48287,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48585,"byte_end":48602,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48824,"byte_end":48841,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48941,"byte_end":48958,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48987,"byte_end":49004,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":49152,"byte_end":49169,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51910,"byte_end":51916,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":52159,"byte_end":52165,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":52438,"byte_end":52444,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":52772,"byte_end":52778,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":53132,"byte_end":53138,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":53690,"byte_end":53696,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":439}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\mod.rs","byte_start":16725620,"byte_end":16725636,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":897}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":764,"byte_end":766,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1286}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":320}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727208,"byte_end":16727218,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727369,"byte_end":16727379,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":492}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727706,"byte_end":16727716,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\bytes_codec.rs","byte_start":16727940,"byte_end":16727950,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738187,"byte_end":16738196,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738428,"byte_end":16738438,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738589,"byte_end":16738598,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16738953,"byte_end":16738963,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739209,"byte_end":16739217,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2623}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739314,"byte_end":16739322,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2626}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739433,"byte_end":16739441,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2623}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739541,"byte_end":16739549,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2626}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16739659,"byte_end":16739669,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1916},"to":{"krate":28,"index":96}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_impl.rs","byte_start":16747956,"byte_end":16747966,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1916},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16750801,"byte_end":16750807,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16754663,"byte_end":16754669,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16761060,"byte_end":16761066,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1704},"to":{"krate":28,"index":96}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16761382,"byte_end":16761388,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1704},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16762103,"byte_end":16762109,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed.rs","byte_start":16763149,"byte_end":16763160,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16764087,"byte_end":16764097,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16765026,"byte_end":16765036,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16767866,"byte_end":16767876,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1663},"to":{"krate":28,"index":96}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16768189,"byte_end":16768199,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1663},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_read.rs","byte_start":16768925,"byte_end":16768935,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16769914,"byte_end":16769925,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16770281,"byte_end":16770292,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16773137,"byte_end":16773148,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1622},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16773912,"byte_end":16773923,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1622},"to":{"krate":28,"index":96}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\framed_write.rs","byte_start":16774164,"byte_end":16774175,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16789219,"byte_end":16789239,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16792573,"byte_end":16792593,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1206},"to":{"krate":0,"index":492}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16793479,"byte_end":16793499,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1206},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16794840,"byte_end":16794860,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1206},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16795422,"byte_end":16795429,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806204,"byte_end":16806211,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806337,"byte_end":16806362,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806520,"byte_end":16806545,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\length_delimited.rs","byte_start":16806680,"byte_end":16806705,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":954},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16807774,"byte_end":16807784,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16810326,"byte_end":16810336,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":492}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16813712,"byte_end":16813722,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814045,"byte_end":16814055,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814362,"byte_end":16814377,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814659,"byte_end":16814674,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\lines_codec.rs","byte_start":16814791,"byte_end":16814806,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1246},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16817132,"byte_end":16817149,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16819798,"byte_end":16819815,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1254},"to":{"krate":0,"index":492}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823107,"byte_end":16823124,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1254},"to":{"krate":0,"index":509}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823488,"byte_end":16823505,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16823923,"byte_end":16823945,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16824274,"byte_end":16824296,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\codec\\any_delimiter_codec.rs","byte_start":16824427,"byte_end":16824449,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1278},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\read_buf.rs","byte_start":16826544,"byte_end":16826553,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16828493,"byte_end":16828505,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\reader_stream.rs","byte_start":16829392,"byte_end":16829404,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1578},"to":{"krate":28,"index":96}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16832284,"byte_end":16832296,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16833534,"byte_end":16833546,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16834627,"byte_end":16834639,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1529},"to":{"krate":16,"index":229}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\io\\stream_reader.rs","byte_start":16835400,"byte_end":16835412,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1529},"to":{"krate":16,"index":187}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14391,"byte_end":14400,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\guard.rs","byte_start":14760,"byte_end":14769,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17219,"byte_end":17227,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9201,"byte_end":9218,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9443,"byte_end":9460,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9651,"byte_end":9668,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9780,"byte_end":9797,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":9887,"byte_end":9904,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":13142,"byte_end":13167,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\cancellation_token.rs","byte_start":13339,"byte_end":13364,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29435,"byte_end":29448,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29770,"byte_end":29783,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":29943,"byte_end":29956,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1482},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":31070,"byte_end":31080,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":38721,"byte_end":38731,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\mpsc.rs","byte_start":39461,"byte_end":39471,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1504},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":40619,"byte_end":40632,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":43844,"byte_end":43857,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":226},"to":{"krate":28,"index":96}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":44071,"byte_end":44084,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":44202,"byte_end":44215,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\poll_semaphore.rs","byte_start":44427,"byte_end":44440,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":45006,"byte_end":45023,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48270,"byte_end":48287,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48585,"byte_end":48602,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48824,"byte_end":48841,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48941,"byte_end":48958,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3065}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":48987,"byte_end":49004,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\sync\\reusable_box.rs","byte_start":49152,"byte_end":49169,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":51910,"byte_end":51916,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1512},"to":{"krate":2,"index":12967}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":52159,"byte_end":52165,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1512},"to":{"krate":16,"index":229}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":52438,"byte_end":52444,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1512},"to":{"krate":16,"index":187}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":52772,"byte_end":52778,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1512},"to":{"krate":16,"index":268}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":53132,"byte_end":53138,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1512},"to":{"krate":16,"index":308}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.2\\src\\either.rs","byte_start":53690,"byte_end":53696,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1512},"to":{"krate":28,"index":96}}]}