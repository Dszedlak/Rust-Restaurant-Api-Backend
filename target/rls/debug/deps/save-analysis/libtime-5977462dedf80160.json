{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9","program":"C:\\Users\\DAVID\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","time","--edition=2018","C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"local-offset\"","--cfg","feature=\"macros\"","--cfg","feature=\"parsing\"","--cfg","feature=\"std\"","--cfg","feature=\"time-macros\"","-C","metadata=5977462dedf80160","-C","extra-filename=-5977462dedf80160","--out-dir","c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","--extern","itoa=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libitoa-445a770547df482a.rmeta","--extern","time_macros=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\time_macros-78c86b916022867c.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\DAVID\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libtime-5977462dedf80160.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[5496872511124503178,0]},"crate_root":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src","external_crates":[{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","num":14,"id":{"name":"time_macros","disambiguator":[15619233697277470154,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","num":15,"id":{"name":"itoa","disambiguator":[1208910432738536241,0]}}],"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82316,"byte_end":82330,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82467,"byte_end":82473,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82538,"byte_end":82557,"line_start":28,"line_end":28,"column_start":31,"column_end":50},"alias_span":null,"name":"IndeterminateOffset","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82538,"byte_end":82557,"line_start":28,"line_end":28,"column_start":31,"column_end":50},"alias_span":null,"name":"IndeterminateOffset","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82676,"byte_end":82700,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82786,"byte_end":82791,"line_start":33,"line_end":33,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82853,"byte_end":82873,"line_start":35,"line_end":35,"column_start":33,"column_end":53},"alias_span":null,"name":"ParseFromDescription","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82928,"byte_end":82941,"line_start":37,"line_end":37,"column_start":26,"column_end":39},"alias_span":null,"name":"TryFromParsed","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115043,"byte_end":115052,"line_start":19,"line_end":19,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115101,"byte_end":115106,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","byte_start":149973,"byte_end":149984,"line_start":7,"line_end":7,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":792}},{"kind":"Use","ref_id":{"krate":14,"index":846},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":182069,"byte_end":182073,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"date","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":14,"index":850},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":182640,"byte_end":182648,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"alias_span":null,"name":"datetime","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":14,"index":619},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":183651,"byte_end":183669,"line_start":56,"line_end":56,"column_start":22,"column_end":40},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":14,"index":854},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":184809,"byte_end":184815,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"alias_span":null,"name":"offset","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":14,"index":858},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":186155,"byte_end":186159,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":235974,"byte_end":235982,"line_start":9,"line_end":9,"column_start":25,"column_end":33},"alias_span":null,"name":"Parsable","value":"","parent":{"krate":0,"index":1316}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236006,"byte_end":236012,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1316}},{"kind":"Use","ref_id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10491,"byte_end":10495,"line_start":317,"line_end":317,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2440},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10522,"byte_end":10530,"line_start":318,"line_end":318,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10554,"byte_end":10559,"line_start":319,"line_end":319,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10640,"byte_end":10645,"line_start":322,"line_end":322,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10680,"byte_end":10694,"line_start":323,"line_end":323,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10732,"byte_end":10749,"line_start":324,"line_end":324,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10772,"byte_end":10776,"line_start":325,"line_end":325,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10805,"byte_end":10814,"line_start":326,"line_end":326,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10840,"byte_end":10847,"line_start":327,"line_end":327,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":145},{"krate":0,"index":332},{"krate":0,"index":584},{"krate":0,"index":650},{"krate":0,"index":792},{"krate":0,"index":1002},{"krate":0,"index":1091},{"krate":0,"index":1107},{"krate":0,"index":1138},{"krate":0,"index":1316},{"krate":0,"index":1999},{"krate":0,"index":2125},{"krate":0,"index":2172},{"krate":0,"index":2262},{"krate":0,"index":2317},{"krate":0,"index":2333},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   If you are using this feature, **please leave a comment**","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1510,"byte_end":1573,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/   [on this discussion](https://github.com/time-rs/time/discussions/306) with your use case. If","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1574,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/   there is not sufficient demand for this feature, it will be dropped in a future release.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1673,"byte_end":1767,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1768,"byte_end":1771,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1772,"byte_end":1785,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1786,"byte_end":1789,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1790,"byte_end":1876,"line_start":48,"line_end":48,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1877,"byte_end":1880,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1881,"byte_end":1969,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1970,"byte_end":1973,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1974,"byte_end":2066,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2067,"byte_end":2161,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2162,"byte_end":2253,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2254,"byte_end":2257,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2258,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2359,"byte_end":2377,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2378,"byte_end":2381,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2382,"byte_end":2472,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2473,"byte_end":2476,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2477,"byte_end":2565,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2566,"byte_end":2634,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2639,"byte_end":2651,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2652,"byte_end":2655,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2656,"byte_end":2721,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2722,"byte_end":2725,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2726,"byte_end":2775,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2776,"byte_end":2779,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2780,"byte_end":2876,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2877,"byte_end":2880,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2881,"byte_end":2979,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2980,"byte_end":3075,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3076,"byte_end":3173,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3174,"byte_end":3274,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3275,"byte_end":3374,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3375,"byte_end":3472,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3473,"byte_end":3568,"line_start":78,"line_end":78,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3569,"byte_end":3629,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"deny(anonymous_parameters, clippy :: all, const_err,\nillegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\npath_statements, patterns_in_fns_without_body, rust_2018_idioms,\ntrivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_code,\nunsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3926,"byte_end":4288,"line_start":88,"line_end":103,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":4289,"byte_end":4789,"line_start":104,"line_end":122,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":4790,"byte_end":4828,"line_start":123,"line_end":123,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12232,"byte_end":12236,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2393}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11863,"byte_end":11908,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11909,"byte_end":11912,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11913,"byte_end":12012,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12013,"byte_end":12109,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12110,"byte_end":12159,"line_start":34,"line_end":34,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12961,"byte_end":12964,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12834,"byte_end":12863,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12868,"byte_end":12871,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12876,"byte_end":12946,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13155,"byte_end":13158,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13028,"byte_end":13057,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13062,"byte_end":13065,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13070,"byte_end":13140,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13428,"byte_end":13457,"line_start":69,"line_end":69,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"pub const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13271,"byte_end":13357,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13362,"byte_end":13391,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14059,"byte_end":14077,"line_start":87,"line_end":87,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"pub const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13578,"byte_end":13639,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13644,"byte_end":13647,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13652,"byte_end":13663,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13668,"byte_end":13698,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13703,"byte_end":13774,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13779,"byte_end":13852,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13857,"byte_end":13864,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13869,"byte_end":13872,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13877,"byte_end":13888,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13893,"byte_end":13923,"line_start":84,"line_end":84,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13928,"byte_end":14029,"line_start":85,"line_end":85,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14034,"byte_end":14041,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15268,"byte_end":15285,"line_start":120,"line_end":120,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"pub const fn from_ordinal_date(i32, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14849,"byte_end":14917,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14922,"byte_end":14925,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14930,"byte_end":14941,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14946,"byte_end":14967,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14972,"byte_end":15026,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15031,"byte_end":15087,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15092,"byte_end":15099,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15104,"byte_end":15107,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15112,"byte_end":15123,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15128,"byte_end":15149,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15154,"byte_end":15238,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15243,"byte_end":15250,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":16115,"byte_end":16133,"line_start":139,"line_end":139,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"pub const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15570,"byte_end":15638,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15643,"byte_end":15646,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15651,"byte_end":15662,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15667,"byte_end":15702,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15707,"byte_end":15770,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15775,"byte_end":15839,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15844,"byte_end":15908,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15913,"byte_end":15920,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15925,"byte_end":15928,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15933,"byte_end":15944,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15949,"byte_end":15984,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15989,"byte_end":16085,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":16090,"byte_end":16097,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":18008,"byte_end":18023,"line_start":186,"line_end":186,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"pub const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17308,"byte_end":17348,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17353,"byte_end":17356,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17361,"byte_end":17455,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17460,"byte_end":17556,"line_start":176,"line_end":176,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17561,"byte_end":17564,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17569,"byte_end":17580,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17585,"byte_end":17622,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17627,"byte_end":17696,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17701,"byte_end":17777,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17782,"byte_end":17858,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17863,"byte_end":17939,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17944,"byte_end":17951,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20040,"byte_end":20044,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19755,"byte_end":19784,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19789,"byte_end":19792,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19797,"byte_end":19808,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19813,"byte_end":19842,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19847,"byte_end":19898,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19903,"byte_end":19954,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19959,"byte_end":20010,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20015,"byte_end":20022,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20345,"byte_end":20350,"line_start":250,"line_end":250,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20095,"byte_end":20113,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20118,"byte_end":20121,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20126,"byte_end":20137,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20142,"byte_end":20180,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20185,"byte_end":20247,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20252,"byte_end":20315,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20320,"byte_end":20327,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20701,"byte_end":20704,"line_start":263,"line_end":263,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20406,"byte_end":20435,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20440,"byte_end":20443,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20448,"byte_end":20508,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20513,"byte_end":20516,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20521,"byte_end":20532,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20537,"byte_end":20566,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20571,"byte_end":20618,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20623,"byte_end":20671,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20676,"byte_end":20683,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22949,"byte_end":22956,"line_start":317,"line_end":317,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22616,"byte_end":22644,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22649,"byte_end":22652,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22657,"byte_end":22747,"line_start":310,"line_end":310,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22752,"byte_end":22755,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22760,"byte_end":22771,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22776,"byte_end":22805,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22810,"byte_end":22861,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22866,"byte_end":22919,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22924,"byte_end":22931,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23909,"byte_end":23917,"line_start":344,"line_end":344,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23432,"byte_end":23460,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23465,"byte_end":23468,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23473,"byte_end":23533,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23538,"byte_end":23541,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23546,"byte_end":23557,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23562,"byte_end":23591,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23596,"byte_end":23648,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23653,"byte_end":23706,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23711,"byte_end":23763,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23768,"byte_end":23821,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23826,"byte_end":23879,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23884,"byte_end":23891,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24464,"byte_end":24481,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23974,"byte_end":24038,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24043,"byte_end":24046,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24051,"byte_end":24111,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24116,"byte_end":24119,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24124,"byte_end":24135,"line_start":352,"line_end":352,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24140,"byte_end":24169,"line_start":353,"line_end":353,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24174,"byte_end":24235,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24240,"byte_end":24301,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24306,"byte_end":24368,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24373,"byte_end":24434,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24439,"byte_end":24446,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25094,"byte_end":25111,"line_start":374,"line_end":374,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24604,"byte_end":24668,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24673,"byte_end":24676,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24681,"byte_end":24741,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24746,"byte_end":24749,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24754,"byte_end":24765,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24770,"byte_end":24799,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24804,"byte_end":24865,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24870,"byte_end":24931,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24936,"byte_end":24998,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25003,"byte_end":25064,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25069,"byte_end":25076,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25487,"byte_end":25503,"line_start":387,"line_end":387,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25234,"byte_end":25267,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25272,"byte_end":25275,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25280,"byte_end":25291,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25296,"byte_end":25334,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25339,"byte_end":25354,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25359,"byte_end":25408,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25413,"byte_end":25446,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25451,"byte_end":25457,"line_start":385,"line_end":385,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25462,"byte_end":25469,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25822,"byte_end":25837,"line_start":398,"line_end":398,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25622,"byte_end":25662,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25667,"byte_end":25670,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25675,"byte_end":25686,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25691,"byte_end":25720,"line_start":395,"line_end":395,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25725,"byte_end":25792,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25797,"byte_end":25804,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26545,"byte_end":26561,"line_start":418,"line_end":418,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25909,"byte_end":25961,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25966,"byte_end":25969,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25974,"byte_end":25985,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25990,"byte_end":26033,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26038,"byte_end":26115,"line_start":406,"line_end":406,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26120,"byte_end":26197,"line_start":407,"line_end":407,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26202,"byte_end":26217,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26222,"byte_end":26271,"line_start":409,"line_end":409,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26276,"byte_end":26304,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26309,"byte_end":26315,"line_start":411,"line_end":411,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26320,"byte_end":26335,"line_start":412,"line_end":412,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26340,"byte_end":26389,"line_start":413,"line_end":413,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26394,"byte_end":26422,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26427,"byte_end":26433,"line_start":415,"line_end":415,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26438,"byte_end":26515,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26520,"byte_end":26527,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27833,"byte_end":27840,"line_start":446,"line_end":446,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26970,"byte_end":26990,"line_start":429,"line_end":429,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26995,"byte_end":26998,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27003,"byte_end":27014,"line_start":431,"line_end":431,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27019,"byte_end":27062,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27067,"byte_end":27124,"line_start":433,"line_end":433,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27129,"byte_end":27185,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27190,"byte_end":27246,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27251,"byte_end":27307,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27312,"byte_end":27371,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27376,"byte_end":27434,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27439,"byte_end":27495,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27500,"byte_end":27558,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27563,"byte_end":27619,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27624,"byte_end":27681,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27686,"byte_end":27742,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27747,"byte_end":27803,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27808,"byte_end":27815,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28724,"byte_end":28732,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"pub const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28198,"byte_end":28229,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28234,"byte_end":28237,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28242,"byte_end":28253,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28258,"byte_end":28295,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28300,"byte_end":28315,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28320,"byte_end":28361,"line_start":463,"line_end":463,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28366,"byte_end":28401,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28406,"byte_end":28412,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28417,"byte_end":28432,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28437,"byte_end":28478,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28483,"byte_end":28518,"line_start":468,"line_end":468,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28523,"byte_end":28529,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28534,"byte_end":28549,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28554,"byte_end":28595,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28600,"byte_end":28635,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28640,"byte_end":28646,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28651,"byte_end":28694,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28699,"byte_end":28706,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29692,"byte_end":29704,"line_start":508,"line_end":508,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"pub const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29146,"byte_end":29181,"line_start":490,"line_end":490,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29186,"byte_end":29189,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29194,"byte_end":29205,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29210,"byte_end":29247,"line_start":493,"line_end":493,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29252,"byte_end":29267,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29272,"byte_end":29317,"line_start":495,"line_end":495,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29322,"byte_end":29357,"line_start":496,"line_end":496,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29362,"byte_end":29368,"line_start":497,"line_end":497,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29373,"byte_end":29388,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29393,"byte_end":29438,"line_start":499,"line_end":499,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29443,"byte_end":29478,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29483,"byte_end":29489,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29494,"byte_end":29509,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29514,"byte_end":29559,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29564,"byte_end":29599,"line_start":504,"line_end":504,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29604,"byte_end":29610,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29615,"byte_end":29662,"line_start":506,"line_end":506,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29667,"byte_end":29674,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30699,"byte_end":30712,"line_start":535,"line_end":535,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30094,"byte_end":30130,"line_start":523,"line_end":523,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30135,"byte_end":30138,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30143,"byte_end":30237,"line_start":525,"line_end":525,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30242,"byte_end":30338,"line_start":526,"line_end":526,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30343,"byte_end":30346,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30351,"byte_end":30362,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30367,"byte_end":30396,"line_start":529,"line_end":529,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30401,"byte_end":30459,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30464,"byte_end":30529,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30534,"byte_end":30599,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30604,"byte_end":30669,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30674,"byte_end":30681,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32055,"byte_end":32066,"line_start":575,"line_end":575,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31015,"byte_end":31088,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31093,"byte_end":31096,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31101,"byte_end":31112,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31117,"byte_end":31178,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31183,"byte_end":31237,"line_start":550,"line_end":550,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31242,"byte_end":31299,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31304,"byte_end":31319,"line_start":552,"line_end":552,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31324,"byte_end":31376,"line_start":553,"line_end":553,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31381,"byte_end":31416,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31421,"byte_end":31427,"line_start":555,"line_end":555,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31432,"byte_end":31439,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31444,"byte_end":31447,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31452,"byte_end":31462,"line_start":558,"line_end":558,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31467,"byte_end":31470,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31475,"byte_end":31528,"line_start":560,"line_end":560,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31533,"byte_end":31536,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31541,"byte_end":31552,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31557,"byte_end":31618,"line_start":563,"line_end":563,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31623,"byte_end":31690,"line_start":564,"line_end":564,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31695,"byte_end":31765,"line_start":565,"line_end":565,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31770,"byte_end":31785,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31790,"byte_end":31844,"line_start":567,"line_end":567,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31849,"byte_end":31884,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31889,"byte_end":31895,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31900,"byte_end":31915,"line_start":570,"line_end":570,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31920,"byte_end":31974,"line_start":571,"line_end":571,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31979,"byte_end":32014,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32019,"byte_end":32025,"line_start":573,"line_end":573,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32030,"byte_end":32037,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33533,"byte_end":33544,"line_start":618,"line_end":618,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32501,"byte_end":32574,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32579,"byte_end":32582,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32587,"byte_end":32594,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32599,"byte_end":32660,"line_start":592,"line_end":592,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32665,"byte_end":32722,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32727,"byte_end":32781,"line_start":594,"line_end":594,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32786,"byte_end":32801,"line_start":595,"line_end":595,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32806,"byte_end":32858,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32863,"byte_end":32898,"line_start":597,"line_end":597,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32903,"byte_end":32909,"line_start":598,"line_end":598,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32914,"byte_end":32921,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32926,"byte_end":32929,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32934,"byte_end":32944,"line_start":601,"line_end":601,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32949,"byte_end":32952,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32957,"byte_end":33010,"line_start":603,"line_end":603,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33015,"byte_end":33018,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33023,"byte_end":33030,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33035,"byte_end":33096,"line_start":606,"line_end":606,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33101,"byte_end":33171,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33176,"byte_end":33243,"line_start":608,"line_end":608,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33248,"byte_end":33263,"line_start":609,"line_end":609,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33268,"byte_end":33322,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33327,"byte_end":33362,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33367,"byte_end":33373,"line_start":612,"line_end":612,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33378,"byte_end":33393,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33398,"byte_end":33452,"line_start":614,"line_end":614,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33457,"byte_end":33492,"line_start":615,"line_end":615,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33497,"byte_end":33503,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33508,"byte_end":33515,"line_start":617,"line_end":617,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34935,"byte_end":34949,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34053,"byte_end":34114,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34119,"byte_end":34122,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34127,"byte_end":34138,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34143,"byte_end":34204,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34209,"byte_end":34271,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34276,"byte_end":34341,"line_start":639,"line_end":639,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34346,"byte_end":34361,"line_start":640,"line_end":640,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34366,"byte_end":34421,"line_start":641,"line_end":641,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34426,"byte_end":34455,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34460,"byte_end":34466,"line_start":643,"line_end":643,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34471,"byte_end":34478,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34483,"byte_end":34486,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34491,"byte_end":34501,"line_start":646,"line_end":646,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34506,"byte_end":34509,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34514,"byte_end":34567,"line_start":648,"line_end":648,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34572,"byte_end":34575,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34580,"byte_end":34591,"line_start":650,"line_end":650,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34596,"byte_end":34651,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34656,"byte_end":34671,"line_start":652,"line_end":652,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34676,"byte_end":34733,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34738,"byte_end":34767,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34772,"byte_end":34778,"line_start":655,"line_end":655,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34783,"byte_end":34798,"line_start":656,"line_end":656,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34803,"byte_end":34860,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34865,"byte_end":34894,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34899,"byte_end":34905,"line_start":659,"line_end":659,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34910,"byte_end":34917,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36067,"byte_end":36081,"line_start":698,"line_end":698,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35193,"byte_end":35254,"line_start":671,"line_end":671,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35259,"byte_end":35262,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35267,"byte_end":35274,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35279,"byte_end":35340,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35345,"byte_end":35410,"line_start":675,"line_end":675,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35415,"byte_end":35477,"line_start":676,"line_end":676,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35482,"byte_end":35497,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35502,"byte_end":35557,"line_start":678,"line_end":678,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35562,"byte_end":35591,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35596,"byte_end":35602,"line_start":680,"line_end":680,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35607,"byte_end":35614,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35619,"byte_end":35622,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35627,"byte_end":35637,"line_start":683,"line_end":683,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35642,"byte_end":35645,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35650,"byte_end":35703,"line_start":685,"line_end":685,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35708,"byte_end":35711,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35716,"byte_end":35723,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35728,"byte_end":35783,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35788,"byte_end":35803,"line_start":689,"line_end":689,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35808,"byte_end":35865,"line_start":690,"line_end":690,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35870,"byte_end":35899,"line_start":691,"line_end":691,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35904,"byte_end":35910,"line_start":692,"line_end":692,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35915,"byte_end":35930,"line_start":693,"line_end":693,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35935,"byte_end":35992,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35997,"byte_end":36026,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36031,"byte_end":36037,"line_start":696,"line_end":696,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36042,"byte_end":36049,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36955,"byte_end":36967,"line_start":722,"line_end":722,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36389,"byte_end":36447,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36452,"byte_end":36455,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36460,"byte_end":36471,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36476,"byte_end":36505,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36510,"byte_end":36525,"line_start":714,"line_end":714,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36530,"byte_end":36579,"line_start":715,"line_end":715,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36584,"byte_end":36617,"line_start":716,"line_end":716,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36622,"byte_end":36628,"line_start":717,"line_end":717,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36633,"byte_end":36743,"line_start":718,"line_end":718,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36748,"byte_end":36856,"line_start":719,"line_end":719,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36861,"byte_end":36868,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36873,"byte_end":36937,"line_start":721,"line_end":721,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38836,"byte_end":38849,"line_start":775,"line_end":775,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38312,"byte_end":38346,"line_start":759,"line_end":759,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38351,"byte_end":38354,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38359,"byte_end":38370,"line_start":761,"line_end":761,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38375,"byte_end":38404,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38409,"byte_end":38431,"line_start":763,"line_end":763,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38436,"byte_end":38451,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38456,"byte_end":38516,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38521,"byte_end":38554,"line_start":766,"line_end":766,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38559,"byte_end":38565,"line_start":767,"line_end":767,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38570,"byte_end":38582,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38587,"byte_end":38616,"line_start":769,"line_end":769,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38621,"byte_end":38664,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38669,"byte_end":38690,"line_start":771,"line_end":771,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38695,"byte_end":38737,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38742,"byte_end":38749,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38754,"byte_end":38818,"line_start":774,"line_end":774,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39524,"byte_end":39535,"line_start":792,"line_end":792,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39027,"byte_end":39060,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39065,"byte_end":39068,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39073,"byte_end":39084,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39089,"byte_end":39118,"line_start":783,"line_end":783,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39123,"byte_end":39138,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39143,"byte_end":39188,"line_start":785,"line_end":785,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39193,"byte_end":39226,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39231,"byte_end":39237,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39242,"byte_end":39324,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39329,"byte_end":39425,"line_start":789,"line_end":789,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39430,"byte_end":39437,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39442,"byte_end":39506,"line_start":791,"line_end":791,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40459,"byte_end":40467,"line_start":818,"line_end":818,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"pub const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40166,"byte_end":40260,"line_start":811,"line_end":811,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40265,"byte_end":40281,"line_start":812,"line_end":812,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40286,"byte_end":40289,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40294,"byte_end":40305,"line_start":814,"line_end":814,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40310,"byte_end":40351,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40356,"byte_end":40429,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40434,"byte_end":40441,"line_start":817,"line_end":817,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40877,"byte_end":40886,"line_start":831,"line_end":831,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"pub const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40561,"byte_end":40646,"line_start":822,"line_end":822,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40651,"byte_end":40654,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40659,"byte_end":40670,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40675,"byte_end":40722,"line_start":825,"line_end":825,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40727,"byte_end":40742,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40747,"byte_end":40796,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40801,"byte_end":40836,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40841,"byte_end":40847,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40852,"byte_end":40859,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41296,"byte_end":41304,"line_start":842,"line_end":842,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"pub const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40982,"byte_end":41074,"line_start":835,"line_end":835,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41079,"byte_end":41082,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41087,"byte_end":41098,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41103,"byte_end":41132,"line_start":838,"line_end":838,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41137,"byte_end":41198,"line_start":839,"line_end":839,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41203,"byte_end":41266,"line_start":840,"line_end":840,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41271,"byte_end":41278,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41907,"byte_end":41921,"line_start":861,"line_end":861,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"pub const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41575,"byte_end":41667,"line_start":854,"line_end":854,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41672,"byte_end":41675,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41680,"byte_end":41691,"line_start":856,"line_end":856,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41696,"byte_end":41725,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41730,"byte_end":41800,"line_start":858,"line_end":858,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41805,"byte_end":41877,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41882,"byte_end":41889,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42569,"byte_end":42583,"line_start":881,"line_end":881,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"pub const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42237,"byte_end":42329,"line_start":874,"line_end":874,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42334,"byte_end":42337,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42342,"byte_end":42353,"line_start":876,"line_end":876,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42358,"byte_end":42387,"line_start":877,"line_end":877,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42392,"byte_end":42462,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42467,"byte_end":42539,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42544,"byte_end":42551,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43229,"byte_end":43242,"line_start":901,"line_end":901,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"pub const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42899,"byte_end":42991,"line_start":894,"line_end":894,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42996,"byte_end":42999,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43004,"byte_end":43015,"line_start":896,"line_end":896,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43020,"byte_end":43049,"line_start":897,"line_end":897,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43054,"byte_end":43123,"line_start":898,"line_end":898,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43128,"byte_end":43199,"line_start":899,"line_end":899,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43204,"byte_end":43211,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43758,"byte_end":43769,"line_start":920,"line_end":920,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43657,"byte_end":43746,"line_start":919,"line_end":919,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44353,"byte_end":44359,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43978,"byte_end":44067,"line_start":928,"line_end":928,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44072,"byte_end":44075,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44080,"byte_end":44091,"line_start":930,"line_end":930,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44096,"byte_end":44147,"line_start":931,"line_end":931,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44152,"byte_end":44220,"line_start":932,"line_end":932,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44225,"byte_end":44294,"line_start":933,"line_end":933,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44299,"byte_end":44329,"line_start":934,"line_end":934,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44334,"byte_end":44341,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44945,"byte_end":44950,"line_start":952,"line_end":952,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Date` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Date` from the input using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44538,"byte_end":44598,"line_start":943,"line_end":943,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44603,"byte_end":44647,"line_start":944,"line_end":944,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44652,"byte_end":44655,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44660,"byte_end":44671,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date, Date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44676,"byte_end":44733,"line_start":947,"line_end":947,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44738,"byte_end":44806,"line_start":948,"line_end":948,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Date::parse(\"2020-01-02\", &format)?, date!(2020 - 01 - 02));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44811,"byte_end":44886,"line_start":949,"line_end":949,"column_start":5,"column_end":80}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44891,"byte_end":44921,"line_start":950,"line_end":950,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44926,"byte_end":44933,"line_start":951,"line_end":951,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2440},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48141,"byte_end":48149,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47803,"byte_end":47848,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47849,"byte_end":47852,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47853,"byte_end":47950,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47951,"byte_end":47967,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47968,"byte_end":47971,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47972,"byte_end":48059,"line_start":34,"line_end":34,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48924,"byte_end":48928,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48736,"byte_end":48768,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48773,"byte_end":48776,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48781,"byte_end":48792,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48797,"byte_end":48848,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48853,"byte_end":48897,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48902,"byte_end":48909,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49162,"byte_end":49172,"line_start":70,"line_end":70,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48960,"byte_end":48996,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49001,"byte_end":49004,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49009,"byte_end":49020,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49025,"byte_end":49076,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49081,"byte_end":49135,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49140,"byte_end":49147,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49413,"byte_end":49424,"line_start":78,"line_end":78,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49208,"byte_end":49245,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49250,"byte_end":49253,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49258,"byte_end":49269,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49274,"byte_end":49325,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49330,"byte_end":49386,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49391,"byte_end":49398,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49666,"byte_end":49677,"line_start":86,"line_end":86,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49461,"byte_end":49498,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49503,"byte_end":49506,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49511,"byte_end":49522,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49527,"byte_end":49578,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49583,"byte_end":49639,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49644,"byte_end":49651,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49904,"byte_end":49910,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49714,"byte_end":49746,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49751,"byte_end":49754,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49759,"byte_end":49770,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49775,"byte_end":49826,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49831,"byte_end":49877,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49882,"byte_end":49889,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50132,"byte_end":50138,"line_start":102,"line_end":102,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49942,"byte_end":49974,"line_start":96,"line_end":96,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49979,"byte_end":49982,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49987,"byte_end":49998,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50003,"byte_end":50054,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50059,"byte_end":50105,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50110,"byte_end":50117,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50354,"byte_end":50358,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50170,"byte_end":50200,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50205,"byte_end":50208,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50213,"byte_end":50224,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50229,"byte_end":50280,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50285,"byte_end":50327,"line_start":108,"line_end":108,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50332,"byte_end":50339,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50569,"byte_end":50572,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50388,"byte_end":50417,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50422,"byte_end":50425,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50430,"byte_end":50441,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50446,"byte_end":50497,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50502,"byte_end":50542,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50547,"byte_end":50554,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50785,"byte_end":50789,"line_start":126,"line_end":126,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50601,"byte_end":50631,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50636,"byte_end":50639,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50644,"byte_end":50655,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50660,"byte_end":50711,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50716,"byte_end":50758,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50763,"byte_end":50770,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50929,"byte_end":50932,"line_start":129,"line_end":129,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50819,"byte_end":50914,"line_start":128,"line_end":128,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51101,"byte_end":51104,"line_start":132,"line_end":132,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50991,"byte_end":51086,"line_start":131,"line_end":131,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51437,"byte_end":51444,"line_start":143,"line_end":143,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"pub const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51214,"byte_end":51254,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51259,"byte_end":51262,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51267,"byte_end":51278,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51283,"byte_end":51322,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51327,"byte_end":51362,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51367,"byte_end":51407,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51412,"byte_end":51419,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51794,"byte_end":51805,"line_start":155,"line_end":155,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51523,"byte_end":51559,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51564,"byte_end":51567,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51572,"byte_end":51583,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51588,"byte_end":51627,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51632,"byte_end":51674,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51679,"byte_end":51719,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51724,"byte_end":51764,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51769,"byte_end":51776,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52153,"byte_end":52164,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51882,"byte_end":51918,"line_start":159,"line_end":159,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51923,"byte_end":51926,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51931,"byte_end":51942,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51947,"byte_end":51986,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51991,"byte_end":52030,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52035,"byte_end":52075,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52080,"byte_end":52123,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52128,"byte_end":52135,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52676,"byte_end":52679,"line_start":183,"line_end":183,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"pub const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52287,"byte_end":52330,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52335,"byte_end":52338,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52343,"byte_end":52419,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52424,"byte_end":52427,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52432,"byte_end":52443,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52448,"byte_end":52487,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52492,"byte_end":52539,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52544,"byte_end":52591,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52596,"byte_end":52646,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52651,"byte_end":52658,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53987,"byte_end":53990,"line_start":215,"line_end":215,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"pub const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53537,"byte_end":53628,"line_start":206,"line_end":206,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53633,"byte_end":53699,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53704,"byte_end":53707,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53712,"byte_end":53723,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53728,"byte_end":53779,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53784,"byte_end":53833,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53838,"byte_end":53891,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53896,"byte_end":53957,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53962,"byte_end":53969,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54726,"byte_end":54731,"line_start":237,"line_end":237,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"pub const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54438,"byte_end":54511,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54516,"byte_end":54557,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54562,"byte_end":54565,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54570,"byte_end":54581,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54586,"byte_end":54637,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54642,"byte_end":54696,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54701,"byte_end":54708,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55087,"byte_end":55091,"line_start":248,"line_end":248,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"pub const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54804,"byte_end":54876,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54881,"byte_end":54920,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54925,"byte_end":54928,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54933,"byte_end":54944,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54949,"byte_end":55000,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55005,"byte_end":55057,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55062,"byte_end":55069,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55445,"byte_end":55450,"line_start":259,"line_end":259,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"pub const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55161,"byte_end":55234,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55239,"byte_end":55278,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55283,"byte_end":55286,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55291,"byte_end":55302,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55307,"byte_end":55358,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55363,"byte_end":55415,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55420,"byte_end":55427,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55805,"byte_end":55812,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"pub const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55521,"byte_end":55596,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55601,"byte_end":55639,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55644,"byte_end":55647,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55652,"byte_end":55663,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55668,"byte_end":55719,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55724,"byte_end":55775,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55780,"byte_end":55787,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56119,"byte_end":56126,"line_start":280,"line_end":280,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"pub const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55884,"byte_end":55945,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55950,"byte_end":55953,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55958,"byte_end":55969,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55974,"byte_end":56025,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56030,"byte_end":56089,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56094,"byte_end":56101,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56521,"byte_end":56532,"line_start":291,"line_end":291,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"pub fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56202,"byte_end":56289,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56294,"byte_end":56297,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56302,"byte_end":56313,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56318,"byte_end":56369,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56374,"byte_end":56432,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56437,"byte_end":56497,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56502,"byte_end":56509,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56971,"byte_end":56982,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"pub fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56650,"byte_end":56737,"line_start":295,"line_end":295,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56742,"byte_end":56745,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56750,"byte_end":56761,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56766,"byte_end":56817,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56822,"byte_end":56880,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56885,"byte_end":56947,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56952,"byte_end":56959,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57418,"byte_end":57430,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"pub const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57100,"byte_end":57166,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57171,"byte_end":57174,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57179,"byte_end":57190,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57195,"byte_end":57246,"line_start":309,"line_end":309,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57251,"byte_end":57315,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57320,"byte_end":57388,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57393,"byte_end":57400,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57915,"byte_end":57927,"line_start":327,"line_end":327,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"pub const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57599,"byte_end":57665,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57670,"byte_end":57673,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57678,"byte_end":57689,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57694,"byte_end":57745,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57750,"byte_end":57813,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57818,"byte_end":57885,"line_start":325,"line_end":325,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57890,"byte_end":57897,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58423,"byte_end":58434,"line_start":341,"line_end":341,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"pub const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58100,"byte_end":58165,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58170,"byte_end":58173,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58178,"byte_end":58189,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58194,"byte_end":58245,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58250,"byte_end":58317,"line_start":338,"line_end":338,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58322,"byte_end":58393,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58398,"byte_end":58405,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59433,"byte_end":59444,"line_start":370,"line_end":370,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"pub const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59088,"byte_end":59138,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59143,"byte_end":59146,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59151,"byte_end":59162,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59167,"byte_end":59206,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59211,"byte_end":59254,"line_start":365,"line_end":365,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59259,"byte_end":59306,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59311,"byte_end":59353,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59358,"byte_end":59403,"line_start":368,"line_end":368,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59408,"byte_end":59415,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59852,"byte_end":59862,"line_start":383,"line_end":383,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"pub const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59510,"byte_end":59559,"line_start":374,"line_end":374,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59564,"byte_end":59567,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59572,"byte_end":59583,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59588,"byte_end":59627,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59632,"byte_end":59673,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59678,"byte_end":59723,"line_start":379,"line_end":379,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59728,"byte_end":59771,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59776,"byte_end":59822,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59827,"byte_end":59834,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60280,"byte_end":60291,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"pub const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59927,"byte_end":59977,"line_start":387,"line_end":387,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59982,"byte_end":59985,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59990,"byte_end":60001,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60006,"byte_end":60045,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60050,"byte_end":60093,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60098,"byte_end":60145,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60150,"byte_end":60196,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60201,"byte_end":60250,"line_start":394,"line_end":394,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60255,"byte_end":60262,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60722,"byte_end":60735,"line_start":409,"line_end":409,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60355,"byte_end":60407,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60412,"byte_end":60415,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60420,"byte_end":60431,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60436,"byte_end":60475,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60480,"byte_end":60527,"line_start":404,"line_end":404,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60532,"byte_end":60583,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60588,"byte_end":60636,"line_start":406,"line_end":406,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60641,"byte_end":60692,"line_start":407,"line_end":407,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60697,"byte_end":60704,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61164,"byte_end":61177,"line_start":422,"line_end":422,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60796,"byte_end":60848,"line_start":413,"line_end":413,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60853,"byte_end":60856,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60861,"byte_end":60872,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60877,"byte_end":60916,"line_start":416,"line_end":416,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60921,"byte_end":60968,"line_start":417,"line_end":417,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60973,"byte_end":61024,"line_start":418,"line_end":418,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61029,"byte_end":61077,"line_start":419,"line_end":419,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61082,"byte_end":61134,"line_start":420,"line_end":420,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61139,"byte_end":61146,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61492,"byte_end":61506,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"pub fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61225,"byte_end":61282,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61287,"byte_end":61290,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61295,"byte_end":61306,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61311,"byte_end":61350,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61355,"byte_end":61407,"line_start":430,"line_end":430,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61412,"byte_end":61468,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61473,"byte_end":61480,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61871,"byte_end":61885,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"pub fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61604,"byte_end":61661,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61666,"byte_end":61669,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61674,"byte_end":61685,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61690,"byte_end":61729,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61734,"byte_end":61786,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61791,"byte_end":61847,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61852,"byte_end":61859,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62392,"byte_end":62410,"line_start":457,"line_end":457,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"pub const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61983,"byte_end":62040,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62045,"byte_end":62048,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62053,"byte_end":62064,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62069,"byte_end":62108,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62113,"byte_end":62169,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62174,"byte_end":62234,"line_start":453,"line_end":453,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62239,"byte_end":62296,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62301,"byte_end":62362,"line_start":455,"line_end":455,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62367,"byte_end":62374,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62933,"byte_end":62952,"line_start":471,"line_end":471,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"pub const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62514,"byte_end":62582,"line_start":461,"line_end":461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62587,"byte_end":62590,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62595,"byte_end":62635,"line_start":463,"line_end":463,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62640,"byte_end":62643,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62648,"byte_end":62659,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62664,"byte_end":62703,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62708,"byte_end":62765,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62770,"byte_end":62831,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62836,"byte_end":62843,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63442,"byte_end":63460,"line_start":484,"line_end":484,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"pub const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63023,"byte_end":63080,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63085,"byte_end":63088,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63093,"byte_end":63104,"line_start":477,"line_end":477,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63109,"byte_end":63148,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63153,"byte_end":63214,"line_start":479,"line_end":479,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63219,"byte_end":63284,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63289,"byte_end":63346,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63351,"byte_end":63412,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63417,"byte_end":63424,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63925,"byte_end":63944,"line_start":497,"line_end":497,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"pub const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63564,"byte_end":63632,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63637,"byte_end":63640,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63645,"byte_end":63693,"line_start":490,"line_end":490,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63698,"byte_end":63701,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63706,"byte_end":63717,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63722,"byte_end":63761,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63766,"byte_end":63826,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63831,"byte_end":63895,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63900,"byte_end":63907,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64410,"byte_end":64427,"line_start":510,"line_end":510,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"pub const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64004,"byte_end":64054,"line_start":501,"line_end":501,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64059,"byte_end":64062,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64067,"byte_end":64078,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64083,"byte_end":64122,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64127,"byte_end":64187,"line_start":505,"line_end":505,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64192,"byte_end":64256,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64261,"byte_end":64316,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64321,"byte_end":64380,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64385,"byte_end":64392,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64934,"byte_end":64952,"line_start":523,"line_end":523,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"pub const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64527,"byte_end":64594,"line_start":514,"line_end":514,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64599,"byte_end":64602,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64607,"byte_end":64690,"line_start":516,"line_end":516,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64695,"byte_end":64698,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64703,"byte_end":64714,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64719,"byte_end":64758,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64763,"byte_end":64829,"line_start":520,"line_end":520,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64834,"byte_end":64904,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64909,"byte_end":64916,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65469,"byte_end":65480,"line_start":537,"line_end":537,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"pub const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65063,"byte_end":65131,"line_start":529,"line_end":529,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65136,"byte_end":65139,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65144,"byte_end":65155,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65160,"byte_end":65211,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65216,"byte_end":65289,"line_start":533,"line_end":533,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65294,"byte_end":65359,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65364,"byte_end":65439,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65444,"byte_end":65451,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66519,"byte_end":66530,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"pub const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66110,"byte_end":66178,"line_start":552,"line_end":552,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66183,"byte_end":66186,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66191,"byte_end":66202,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66207,"byte_end":66258,"line_start":555,"line_end":555,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66263,"byte_end":66338,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66343,"byte_end":66408,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66413,"byte_end":66489,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66494,"byte_end":66501,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67657,"byte_end":67668,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"pub const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67160,"byte_end":67228,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67233,"byte_end":67236,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67241,"byte_end":67252,"line_start":577,"line_end":577,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67257,"byte_end":67308,"line_start":578,"line_end":578,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67313,"byte_end":67376,"line_start":579,"line_end":579,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67381,"byte_end":67448,"line_start":580,"line_end":580,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67453,"byte_end":67515,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67520,"byte_end":67571,"line_start":582,"line_end":582,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67576,"byte_end":67627,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67632,"byte_end":67639,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68546,"byte_end":68557,"line_start":605,"line_end":605,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"pub const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68164,"byte_end":68254,"line_start":597,"line_end":597,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68259,"byte_end":68262,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68267,"byte_end":68278,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68283,"byte_end":68322,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68327,"byte_end":68390,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68395,"byte_end":68462,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68467,"byte_end":68516,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68521,"byte_end":68528,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69587,"byte_end":69601,"line_start":628,"line_end":628,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"pub const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69059,"byte_end":69121,"line_start":616,"line_end":616,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69126,"byte_end":69129,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69134,"byte_end":69145,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69150,"byte_end":69201,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69206,"byte_end":69276,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69281,"byte_end":69358,"line_start":621,"line_end":621,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69363,"byte_end":69378,"line_start":622,"line_end":622,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69383,"byte_end":69440,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69445,"byte_end":69466,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69471,"byte_end":69477,"line_start":625,"line_end":625,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69482,"byte_end":69557,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69562,"byte_end":69569,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":71069,"byte_end":71083,"line_start":667,"line_end":667,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"pub const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70541,"byte_end":70603,"line_start":655,"line_end":655,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70608,"byte_end":70611,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70616,"byte_end":70627,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70632,"byte_end":70683,"line_start":658,"line_end":658,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70688,"byte_end":70760,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70765,"byte_end":70842,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70847,"byte_end":70862,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70867,"byte_end":70924,"line_start":662,"line_end":662,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70929,"byte_end":70950,"line_start":663,"line_end":663,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70955,"byte_end":70961,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70966,"byte_end":71039,"line_start":665,"line_end":665,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":71044,"byte_end":71051,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72670,"byte_end":72684,"line_start":706,"line_end":706,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"pub const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72023,"byte_end":72085,"line_start":694,"line_end":694,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72090,"byte_end":72093,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72098,"byte_end":72109,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72114,"byte_end":72165,"line_start":697,"line_end":697,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72170,"byte_end":72230,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72235,"byte_end":72299,"line_start":699,"line_end":699,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72304,"byte_end":72366,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72371,"byte_end":72434,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72439,"byte_end":72502,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72507,"byte_end":72571,"line_start":703,"line_end":703,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72576,"byte_end":72640,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72645,"byte_end":72652,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73750,"byte_end":73757,"line_start":733,"line_end":733,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"pub fn time_fn<T, impl FnOnce() -> T: FnOnce() -> T>(impl FnOnce() -> T)\n-> (Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73559,"byte_end":73649,"line_start":730,"line_end":730,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73654,"byte_end":73710,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73715,"byte_end":73738,"line_start":732,"line_end":732,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":354},{"krate":0,"index":372},{"krate":0,"index":387},{"krate":0,"index":414},{"krate":0,"index":432},{"krate":0,"index":454},{"krate":0,"index":469},{"krate":0,"index":505},{"krate":0,"index":523},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":2720},{"krate":0,"index":2750},{"krate":0,"index":580},{"krate":0,"index":582}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":81764,"byte_end":81826,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86415,"byte_end":86429,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86146,"byte_end":86240,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86241,"byte_end":86253,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86951,"byte_end":86955,"line_start":28,"line_end":28,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"pub const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86867,"byte_end":86933,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87199,"byte_end":87213,"line_start":34,"line_end":34,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"pub const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87009,"byte_end":87096,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87101,"byte_end":87181,"line_start":33,"line_end":33,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89042,"byte_end":89057,"line_start":11,"line_end":11,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":88869,"byte_end":88966,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":88967,"byte_end":88985,"line_start":9,"line_end":9,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90024,"byte_end":90040,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":89825,"byte_end":89920,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":89921,"byte_end":89967,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91122,"byte_end":91149,"line_start":17,"line_end":17,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91004,"byte_end":91095,"line_start":15,"line_end":15,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91100,"byte_end":91117,"line_start":16,"line_end":16,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91324,"byte_end":91340,"line_start":21,"line_end":21,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91155,"byte_end":91242,"line_start":18,"line_end":18,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91247,"byte_end":91250,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91255,"byte_end":91319,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91421,"byte_end":91426,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91360,"byte_end":91416,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90991,"byte_end":90997,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"pub enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2610}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90807,"byte_end":90845,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90846,"byte_end":90863,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90864,"byte_end":90902,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":93834,"byte_end":93853,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"IndeterminateOffset","qualname":"::error::indeterminate_offset::IndeterminateOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" The system's UTC offset could not be determined at the given datetime.\n","sig":null,"attributes":[{"value":"/ The system's UTC offset could not be determined at the given datetime.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":93639,"byte_end":93713,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95173,"byte_end":95195,"line_start":19,"line_end":19,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":2628},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95086,"byte_end":95146,"line_start":17,"line_end":17,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95151,"byte_end":95168,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95349,"byte_end":95369,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":2628},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95288,"byte_end":95322,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95327,"byte_end":95344,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95597,"byte_end":95612,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":2628},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95542,"byte_end":95570,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95575,"byte_end":95592,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95834,"byte_end":95854,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":2628},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95775,"byte_end":95807,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95812,"byte_end":95829,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95055,"byte_end":95079,"line_start":16,"line_end":16,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"pub enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n            index: usize,\n        },\n    InvalidComponentName {\n            name: String,\n            index: usize,\n        },\n    InvalidModifier {\n            value: String,\n            index: usize,\n        },\n    MissingComponentName {\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2634},{"krate":0,"index":2637}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94816,"byte_end":94866,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94989,"byte_end":95006,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97836,"byte_end":97850,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97653,"byte_end":97750,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97751,"byte_end":97779,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2664},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98972,"byte_end":98985,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::parse::Parse::TryFromParsed","value":"Parse::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98920,"byte_end":98967,"line_start":14,"line_end":14,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99058,"byte_end":99078,"line_start":17,"line_end":17,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::parse::Parse::ParseFromDescription","value":"Parse::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99006,"byte_end":99053,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99202,"byte_end":99230,"line_start":20,"line_end":20,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::parse::Parse::UnexpectedTrailingCharacters","value":"Parse::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2663},"children":[],"decl_id":null,"docs":" The input should have ended, but there were characters remaining.\n","sig":null,"attributes":[{"value":"/ The input should have ended, but there were characters remaining.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99106,"byte_end":99175,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99180,"byte_end":99197,"line_start":19,"line_end":19,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98908,"byte_end":98913,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Parse","qualname":"::error::parse::Parse","value":"pub enum Parse {\n    TryFromParsed(TryFromParsed),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n}","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670}],"decl_id":null,"docs":" An error that occurred at some stage of parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred at some stage of parsing.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98689,"byte_end":98741,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"allow(variant_size_differences)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98801,"byte_end":98835,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98836,"byte_end":98853,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102415,"byte_end":102429,"line_start":15,"line_end":15,"column_start":5,"column_end":19},"name":"InvalidLiteral","qualname":"::error::parse_from_description::ParseFromDescription::InvalidLiteral","value":"ParseFromDescription::InvalidLiteral","parent":{"krate":0,"index":2684},"children":[],"decl_id":null,"docs":" A string literal was not what was expected.\n","sig":null,"attributes":[{"value":"/ A string literal was not what was expected.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102341,"byte_end":102388,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102393,"byte_end":102410,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102478,"byte_end":102494,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent","value":"ParseFromDescription::InvalidComponent(&'static str)","parent":{"krate":0,"index":2684},"children":[],"decl_id":null,"docs":" A dynamic component was not valid.\n","sig":null,"attributes":[{"value":"/ A dynamic component was not valid.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102435,"byte_end":102473,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102314,"byte_end":102334,"line_start":12,"line_end":12,"column_start":10,"column_end":30},"name":"ParseFromDescription","qualname":"::error::parse_from_description::ParseFromDescription","value":"pub enum ParseFromDescription {\n    InvalidLiteral,\n    InvalidComponent(&'static str),\n}","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2687}],"decl_id":null,"docs":" An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.\n","sig":null,"attributes":[{"value":"/ An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102082,"byte_end":102182,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102242,"byte_end":102259,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104053,"byte_end":104076,"line_start":15,"line_end":15,"column_start":5,"column_end":28},"name":"InsufficientInformation","qualname":"::error::try_from_parsed::TryFromParsed::InsufficientInformation","value":"TryFromParsed::InsufficientInformation","parent":{"krate":0,"index":2702},"children":[],"decl_id":null,"docs":" The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the\n type.\n","sig":null,"attributes":[{"value":"/ The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103940,"byte_end":104034,"line_start":13,"line_end":13,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104039,"byte_end":104048,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104146,"byte_end":104160,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange","value":"TryFromParsed::ComponentRange(error::ComponentRange)","parent":{"krate":0,"index":2702},"children":[],"decl_id":null,"docs":" Some component contained an invalid value for the type.\n","sig":null,"attributes":[{"value":"/ Some component contained an invalid value for the type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104082,"byte_end":104141,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103920,"byte_end":103933,"line_start":12,"line_end":12,"column_start":10,"column_end":23},"name":"TryFromParsed","qualname":"::error::try_from_parsed::TryFromParsed","value":"pub enum TryFromParsed {\n    InsufficientInformation,\n    ComponentRange(error::ComponentRange),\n}","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2705}],"decl_id":null,"docs":" An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.\n","sig":null,"attributes":[{"value":"/ An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103692,"byte_end":103788,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103789,"byte_end":103806,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83399,"byte_end":83414,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83437,"byte_end":83451,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83510,"byte_end":83529,"line_start":51,"line_end":51,"column_start":5,"column_end":24},"name":"IndeterminateOffset","qualname":"::error::Error::IndeterminateOffset","value":"Error::IndeterminateOffset(IndeterminateOffset)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83473,"byte_end":83505,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83591,"byte_end":83597,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83556,"byte_end":83586,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83643,"byte_end":83663,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::Error::ParseFromDescription","value":"Error::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83611,"byte_end":83638,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83745,"byte_end":83773,"line_start":58,"line_end":58,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::Error::UnexpectedTrailingCharacters","value":"Error::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83691,"byte_end":83718,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83723,"byte_end":83740,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83811,"byte_end":83824,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::Error::TryFromParsed","value":"Error::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83779,"byte_end":83806,"line_start":59,"line_end":59,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83930,"byte_end":83954,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n\"alloc\"))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83845,"byte_end":83925,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83986,"byte_end":84002,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84026,"byte_end":84040,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83387,"byte_end":83392,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    IndeterminateOffset(IndeterminateOffset),\n    Format(Format),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n    TryFromParsed(TryFromParsed),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2747}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82944,"byte_end":83021,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83022,"byte_end":83025,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83026,"byte_end":83119,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83120,"byte_end":83212,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83213,"byte_end":83277,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83278,"byte_end":83325,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83343,"byte_end":83360,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":605},{"krate":0,"index":614},{"krate":0,"index":623},{"krate":0,"index":632},{"krate":0,"index":641}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105838,"byte_end":105859,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106072,"byte_end":106078,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105998,"byte_end":106057,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107877,"byte_end":107894,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106195,"byte_end":106242,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106243,"byte_end":106246,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106247,"byte_end":106261,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106262,"byte_end":106265,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106266,"byte_end":106306,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106307,"byte_end":106310,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106311,"byte_end":106322,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106323,"byte_end":106374,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106375,"byte_end":106433,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106434,"byte_end":106494,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106495,"byte_end":106555,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106556,"byte_end":106606,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106607,"byte_end":106657,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106658,"byte_end":106704,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106705,"byte_end":106749,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106750,"byte_end":106796,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106797,"byte_end":106804,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106805,"byte_end":106808,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106809,"byte_end":106842,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106843,"byte_end":106846,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106847,"byte_end":106858,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106859,"byte_end":106910,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106911,"byte_end":106973,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106974,"byte_end":107038,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107039,"byte_end":107103,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107104,"byte_end":107158,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107159,"byte_end":107213,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107214,"byte_end":107264,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107265,"byte_end":107313,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107314,"byte_end":107364,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107365,"byte_end":107372,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107373,"byte_end":107376,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107377,"byte_end":107450,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107451,"byte_end":107454,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107455,"byte_end":107466,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107467,"byte_end":107506,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107507,"byte_end":107578,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107579,"byte_end":107650,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107651,"byte_end":107658,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107659,"byte_end":107662,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107663,"byte_end":107754,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107755,"byte_end":107852,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107853,"byte_end":107866,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107982,"byte_end":107993,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"pub fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107917,"byte_end":107974,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108083,"byte_end":108095,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"pub fn microseconds(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108017,"byte_end":108075,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108185,"byte_end":108197,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"pub fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108119,"byte_end":108177,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108282,"byte_end":108289,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"pub fn seconds(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108221,"byte_end":108274,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108374,"byte_end":108381,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"pub fn minutes(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108313,"byte_end":108366,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108464,"byte_end":108469,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"pub fn hours(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108405,"byte_end":108456,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108551,"byte_end":108555,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"pub fn days(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108493,"byte_end":108543,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108638,"byte_end":108643,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"pub fn weeks(Self) -> Duration","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":108579,"byte_end":108630,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111532,"byte_end":111552,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110213,"byte_end":110271,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110272,"byte_end":110275,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110276,"byte_end":110290,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110291,"byte_end":110294,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110295,"byte_end":110346,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110347,"byte_end":110350,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110351,"byte_end":110362,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110363,"byte_end":110405,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110406,"byte_end":110437,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110438,"byte_end":110499,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110500,"byte_end":110563,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110564,"byte_end":110627,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110628,"byte_end":110684,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110685,"byte_end":110746,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110747,"byte_end":110809,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110810,"byte_end":110872,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110873,"byte_end":110937,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110938,"byte_end":110945,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110946,"byte_end":110949,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110950,"byte_end":111034,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111035,"byte_end":111038,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111039,"byte_end":111050,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111051,"byte_end":111093,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111094,"byte_end":111109,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111110,"byte_end":111159,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111160,"byte_end":111192,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111193,"byte_end":111199,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111200,"byte_end":111215,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111216,"byte_end":111265,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111266,"byte_end":111298,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111299,"byte_end":111305,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111306,"byte_end":111313,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111314,"byte_end":111317,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111318,"byte_end":111409,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111410,"byte_end":111507,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111508,"byte_end":111521,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111651,"byte_end":111666,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"pub fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111575,"byte_end":111643,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111770,"byte_end":111786,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"pub fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111693,"byte_end":111762,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111890,"byte_end":111906,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"pub fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111813,"byte_end":111882,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112005,"byte_end":112016,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"pub fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111933,"byte_end":111997,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112115,"byte_end":112126,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"pub fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112043,"byte_end":112107,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112223,"byte_end":112232,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"pub fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112153,"byte_end":112215,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112328,"byte_end":112336,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"pub fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112259,"byte_end":112320,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112433,"byte_end":112442,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"pub fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":112363,"byte_end":112425,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":697},{"krate":0,"index":715},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":3260},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9696,"byte_end":9752,"line_start":286,"line_end":286,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114422,"byte_end":114482,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114483,"byte_end":114486,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114487,"byte_end":114576,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114577,"byte_end":114657,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114658,"byte_end":114731,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114732,"byte_end":114811,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121074,"byte_end":121077,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121048,"byte_end":121069,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121125,"byte_end":121130,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121098,"byte_end":121120,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121186,"byte_end":121193,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121153,"byte_end":121181,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121243,"byte_end":121250,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121218,"byte_end":121238,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121305,"byte_end":121315,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121275,"byte_end":121300,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121369,"byte_end":121373,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121343,"byte_end":121364,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121420,"byte_end":121424,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121395,"byte_end":121415,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121478,"byte_end":121484,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121446,"byte_end":121473,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121540,"byte_end":121546,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121508,"byte_end":121535,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121604,"byte_end":121610,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121570,"byte_end":121599,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121671,"byte_end":121680,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121634,"byte_end":121666,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121739,"byte_end":121749,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121707,"byte_end":121734,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121827,"byte_end":121839,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121777,"byte_end":121822,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121921,"byte_end":121933,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121869,"byte_end":121916,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121032,"byte_end":121041,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"pub enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120912,"byte_end":120959,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120960,"byte_end":120977,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2926},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2954},{"krate":0,"index":2959},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3210},{"krate":0,"index":3223},{"krate":0,"index":3225},{"krate":0,"index":713}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127110,"byte_end":127147,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127467,"byte_end":127470,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":2808}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127371,"byte_end":127392,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127393,"byte_end":127410,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127530,"byte_end":127537,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2807},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127477,"byte_end":127521,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127738,"byte_end":127747,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127674,"byte_end":127733,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127811,"byte_end":127815,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127753,"byte_end":127806,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127876,"byte_end":127881,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127821,"byte_end":127871,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127658,"byte_end":127667,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"pub enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127551,"byte_end":127585,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127586,"byte_end":127603,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127983,"byte_end":127988,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127886,"byte_end":127908,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127909,"byte_end":127926,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128048,"byte_end":128055,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127995,"byte_end":128039,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128126,"byte_end":128130,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128070,"byte_end":128117,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128201,"byte_end":128215,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128147,"byte_end":128192,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128329,"byte_end":128336,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":2856}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128226,"byte_end":128254,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128255,"byte_end":128272,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128396,"byte_end":128403,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2855},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128343,"byte_end":128387,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128612,"byte_end":128617,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128560,"byte_end":128607,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128677,"byte_end":128681,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128623,"byte_end":128672,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128847,"byte_end":128853,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128687,"byte_end":128760,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128765,"byte_end":128768,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128773,"byte_end":128842,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129019,"byte_end":129025,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128859,"byte_end":128932,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128937,"byte_end":128940,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128945,"byte_end":129014,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128542,"byte_end":128553,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"pub enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128417,"byte_end":128469,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128470,"byte_end":128487,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129125,"byte_end":129132,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129030,"byte_end":129050,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129051,"byte_end":129068,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129195,"byte_end":129199,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129139,"byte_end":129186,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2891},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129303,"byte_end":129314,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129218,"byte_end":129294,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129380,"byte_end":129394,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129326,"byte_end":129371,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129599,"byte_end":129602,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129547,"byte_end":129594,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129672,"byte_end":129678,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129608,"byte_end":129667,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129748,"byte_end":129754,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129684,"byte_end":129743,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129526,"byte_end":129540,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"pub enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2910}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129405,"byte_end":129453,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129454,"byte_end":129471,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129859,"byte_end":129869,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129759,"byte_end":129784,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129785,"byte_end":129802,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129929,"byte_end":129936,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129876,"byte_end":129920,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130007,"byte_end":130011,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129951,"byte_end":129998,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130201,"byte_end":130205,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130165,"byte_end":130196,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130257,"byte_end":130264,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130211,"byte_end":130252,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2938},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130150,"byte_end":130158,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"pub enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2941}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130032,"byte_end":130077,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130078,"byte_end":130095,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130365,"byte_end":130369,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130269,"byte_end":130290,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130291,"byte_end":130308,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2955},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130429,"byte_end":130436,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130376,"byte_end":130420,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130507,"byte_end":130511,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130451,"byte_end":130498,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130616,"byte_end":130630,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130527,"byte_end":130607,"line_start":122,"line_end":122,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130740,"byte_end":130757,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130642,"byte_end":130731,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130917,"byte_end":130921,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2973}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130822,"byte_end":130842,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130843,"byte_end":130860,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130981,"byte_end":130988,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130928,"byte_end":130972,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131066,"byte_end":131082,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131003,"byte_end":131057,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131195,"byte_end":131201,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":2987}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131093,"byte_end":131120,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131121,"byte_end":131138,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131261,"byte_end":131268,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131208,"byte_end":131252,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131384,"byte_end":131390,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131282,"byte_end":131309,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131310,"byte_end":131327,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131447,"byte_end":131459,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131397,"byte_end":131438,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131625,"byte_end":131639,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131471,"byte_end":131516,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131521,"byte_end":131524,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131529,"byte_end":131616,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131754,"byte_end":131760,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":3016}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131650,"byte_end":131679,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131680,"byte_end":131697,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131820,"byte_end":131827,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131767,"byte_end":131811,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3030},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132026,"byte_end":132029,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131999,"byte_end":132021,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132063,"byte_end":132066,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132035,"byte_end":132058,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132102,"byte_end":132107,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132072,"byte_end":132097,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132142,"byte_end":132146,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132113,"byte_end":132137,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132181,"byte_end":132185,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132152,"byte_end":132176,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132219,"byte_end":132222,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132191,"byte_end":132214,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132258,"byte_end":132263,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132228,"byte_end":132253,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132299,"byte_end":132304,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132269,"byte_end":132294,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3046},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132339,"byte_end":132343,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132310,"byte_end":132334,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132481,"byte_end":132490,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132349,"byte_end":132444,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132449,"byte_end":132476,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131977,"byte_end":131992,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"pub enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3038},{"krate":0,"index":3040},{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3046},{"krate":0,"index":3048}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131841,"byte_end":131904,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131905,"byte_end":131922,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132602,"byte_end":132611,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":3062}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132495,"byte_end":132527,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132528,"byte_end":132545,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132676,"byte_end":132682,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":3061},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132618,"byte_end":132667,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132862,"byte_end":132872,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132760,"byte_end":132787,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132788,"byte_end":132805,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3076},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132943,"byte_end":132960,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132879,"byte_end":132934,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133025,"byte_end":133032,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132972,"byte_end":133016,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133166,"byte_end":133178,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":3091}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133046,"byte_end":133091,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133092,"byte_end":133109,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133238,"byte_end":133245,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3090},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133185,"byte_end":133229,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133381,"byte_end":133393,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":3105}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133259,"byte_end":133306,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133307,"byte_end":133324,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133453,"byte_end":133460,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3104},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133400,"byte_end":133444,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133696,"byte_end":133701,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":3118},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133637,"byte_end":133691,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133765,"byte_end":133769,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":3118},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133707,"byte_end":133760,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133889,"byte_end":133893,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":3118},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133775,"byte_end":133864,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133869,"byte_end":133884,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133623,"byte_end":133630,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"pub enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133504,"byte_end":133550,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":133551,"byte_end":133568,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":149530,"byte_end":149535,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"pub fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":149269,"byte_end":149327,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":149328,"byte_end":149331,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":149332,"byte_end":149394,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":149395,"byte_end":149465,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115698,"byte_end":115708,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3258}],"decl_id":null,"docs":" Well-known formats, typically RFCs.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically RFCs.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115650,"byte_end":115689,"line_start":39,"line_end":39,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116542,"byte_end":116549,"line_start":63,"line_end":63,"column_start":16,"column_end":23},"name":"Rfc3339","qualname":"::format_description::well_known::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115715,"byte_end":115803,"line_start":41,"line_end":41,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115808,"byte_end":115811,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115816,"byte_end":115859,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115864,"byte_end":115867,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115872,"byte_end":115883,"line_start":45,"line_end":45,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115888,"byte_end":115980,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115985,"byte_end":116000,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116005,"byte_end":116073,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116078,"byte_end":116126,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116131,"byte_end":116137,"line_start":50,"line_end":50,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116142,"byte_end":116172,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116177,"byte_end":116184,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116189,"byte_end":116192,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116197,"byte_end":116208,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116213,"byte_end":116289,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116294,"byte_end":116309,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116314,"byte_end":116381,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116386,"byte_end":116419,"line_start":58,"line_end":58,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116424,"byte_end":116430,"line_start":59,"line_end":59,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116435,"byte_end":116465,"line_start":60,"line_end":60,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116470,"byte_end":116477,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117411,"byte_end":117418,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"name":"Rfc2822","qualname":"::format_description::well_known::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116556,"byte_end":116644,"line_start":65,"line_end":65,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116649,"byte_end":116652,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116657,"byte_end":116701,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116706,"byte_end":116709,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116714,"byte_end":116728,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116733,"byte_end":116744,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116749,"byte_end":116841,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116846,"byte_end":116861,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116866,"byte_end":116940,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116945,"byte_end":116990,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116995,"byte_end":117001,"line_start":75,"line_end":75,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117006,"byte_end":117036,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117041,"byte_end":117048,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117053,"byte_end":117056,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117061,"byte_end":117072,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117077,"byte_end":117153,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117158,"byte_end":117173,"line_start":81,"line_end":81,"column_start":5,"column_end":20}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117178,"byte_end":117242,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117247,"byte_end":117288,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117293,"byte_end":117299,"line_start":84,"line_end":84,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117304,"byte_end":117334,"line_start":85,"line_end":85,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117339,"byte_end":117346,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117809,"byte_end":117816,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":3260},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117616,"byte_end":117651,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117656,"byte_end":117659,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117664,"byte_end":117754,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117759,"byte_end":117804,"line_start":99,"line_end":99,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117895,"byte_end":117904,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":3260},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117832,"byte_end":117890,"line_start":101,"line_end":101,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118030,"byte_end":118038,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":3260},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117921,"byte_end":118004,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118009,"byte_end":118025,"line_start":104,"line_end":104,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118301,"byte_end":118309,"line_start":110,"line_end":110,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::FormatItem::Optional","value":"FormatItem::Optional(&'a Self)","parent":{"krate":0,"index":3260},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be\n no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118056,"byte_end":118151,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ no effect on the resulting `struct`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118156,"byte_end":118196,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118201,"byte_end":118204,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118209,"byte_end":118296,"line_start":109,"line_end":109,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118544,"byte_end":118549,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::FormatItem::First","value":"FormatItem::First(&'a [Self])","parent":{"krate":0,"index":3260},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118325,"byte_end":118416,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118421,"byte_end":118508,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118513,"byte_end":118539,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3260},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117595,"byte_end":117605,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"pub enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3265},{"krate":0,"index":3268},{"krate":0,"index":3271},{"krate":0,"index":3274}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117423,"byte_end":117484,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117485,"byte_end":117502,"line_start":92,"line_end":92,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":943},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9781,"byte_end":9811,"line_start":288,"line_end":288,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","byte_start":149868,"byte_end":149901,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165391,"byte_end":165402,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165299,"byte_end":165332,"line_start":13,"line_end":13,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165953,"byte_end":165959,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":851}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165776,"byte_end":165872,"line_start":27,"line_end":27,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166066,"byte_end":166077,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"pub fn format_into<impl io::Write: io::Write>(&Self, &mut impl io::Write,\nOption<Date>, Option<Time>, Option<UtcOffset>) -> Result<usize, error::Format>","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165970,"byte_end":166054,"line_start":30,"line_end":30,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166349,"byte_end":166355,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"pub fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166294,"byte_end":166337,"line_start":39,"line_end":39,"column_start":9,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175116,"byte_end":175123,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173942,"byte_end":174042,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174043,"byte_end":174046,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174047,"byte_end":174146,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174147,"byte_end":174242,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174243,"byte_end":174253,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174254,"byte_end":174257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174258,"byte_end":174356,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174357,"byte_end":174455,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174456,"byte_end":174553,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174554,"byte_end":174577,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174578,"byte_end":174581,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174582,"byte_end":174679,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174680,"byte_end":174779,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174780,"byte_end":174825,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174826,"byte_end":174829,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174830,"byte_end":174929,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174930,"byte_end":174960,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175016,"byte_end":175036,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175124,"byte_end":175138,"line_start":32,"line_end":32,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175354,"byte_end":175357,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175187,"byte_end":175235,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175240,"byte_end":175243,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175248,"byte_end":175259,"line_start":38,"line_end":38,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175264,"byte_end":175288,"line_start":39,"line_end":39,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175293,"byte_end":175330,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175335,"byte_end":175342,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175869,"byte_end":175876,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175413,"byte_end":175508,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175513,"byte_end":175576,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175581,"byte_end":175584,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175589,"byte_end":175600,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175605,"byte_end":175679,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175684,"byte_end":175706,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175711,"byte_end":175744,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175749,"byte_end":175789,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175794,"byte_end":175845,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175850,"byte_end":175857,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176495,"byte_end":176506,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175997,"byte_end":176087,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176092,"byte_end":176183,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176188,"byte_end":176202,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176207,"byte_end":176210,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176215,"byte_end":176226,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176231,"byte_end":176281,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176286,"byte_end":176315,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176320,"byte_end":176390,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176395,"byte_end":176471,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176476,"byte_end":176483,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177358,"byte_end":177369,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176860,"byte_end":176950,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176955,"byte_end":177046,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177051,"byte_end":177065,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177070,"byte_end":177073,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177078,"byte_end":177089,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177094,"byte_end":177144,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177149,"byte_end":177178,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177183,"byte_end":177253,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177258,"byte_end":177334,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177339,"byte_end":177346,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177965,"byte_end":177975,"line_start":112,"line_end":112,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"pub const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177759,"byte_end":177803,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177808,"byte_end":177811,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177816,"byte_end":177827,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177832,"byte_end":177856,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177861,"byte_end":177890,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177895,"byte_end":177935,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177940,"byte_end":177947,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104}],"decl_id":null,"docs":" Macros to construct statically known values.\n","sig":null,"attributes":[{"value":"cfg(feature = \"macros\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9869,"byte_end":9895,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"/ Macros to construct statically known values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":181353,"byte_end":181401,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186513,"byte_end":186520,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186530,"byte_end":186538,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186548,"byte_end":186553,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186563,"byte_end":186568,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186578,"byte_end":186581,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186591,"byte_end":186595,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186605,"byte_end":186609,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186619,"byte_end":186625,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186635,"byte_end":186644,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186654,"byte_end":186661,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186672,"byte_end":186680,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186691,"byte_end":186699,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":3325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186501,"byte_end":186506,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"pub enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3344},{"krate":0,"index":3347},{"krate":0,"index":3350},{"krate":0,"index":3353},{"krate":0,"index":3356},{"krate":0,"index":3359}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186345,"byte_end":186368,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186369,"byte_end":186416,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186429,"byte_end":186440,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187656,"byte_end":187664,"line_start":62,"line_end":62,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187484,"byte_end":187511,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187516,"byte_end":187519,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187524,"byte_end":187535,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187540,"byte_end":187562,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187567,"byte_end":187626,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187631,"byte_end":187638,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188251,"byte_end":188255,"line_start":85,"line_end":85,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188087,"byte_end":188110,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188115,"byte_end":188118,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188123,"byte_end":188134,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188139,"byte_end":188161,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188166,"byte_end":188221,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188226,"byte_end":188233,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191522,"byte_end":191536,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3378}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191137,"byte_end":191186,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191187,"byte_end":191190,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191191,"byte_end":191244,"line_start":28,"line_end":28,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192022,"byte_end":192032,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191798,"byte_end":191834,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191839,"byte_end":191842,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191847,"byte_end":191858,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191863,"byte_end":191914,"line_start":44,"line_end":44,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191919,"byte_end":191995,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192000,"byte_end":192007,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192543,"byte_end":192550,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"pub fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192153,"byte_end":192225,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192230,"byte_end":192233,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192238,"byte_end":192249,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192254,"byte_end":192303,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192308,"byte_end":192362,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192367,"byte_end":192432,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192437,"byte_end":192444,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192449,"byte_end":192472,"line_start":59,"line_end":59,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193045,"byte_end":193054,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"now_local","qualname":"<OffsetDateTime>::now_local","value":"pub fn now_local() -> Result<Self, error::IndeterminateOffset>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a new `OffsetDateTime` with the current date and time in the local offset.\n If the offset cannot be determined, an error is returned.","sig":null,"attributes":[{"value":"/ Attempt to create a new `OffsetDateTime` with the current date and time in the local offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192607,"byte_end":192703,"line_start":65,"line_end":65,"column_start":5,"column_end":101}},{"value":"/ If the offset cannot be determined, an error is returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192708,"byte_end":192769,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192774,"byte_end":192777,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192782,"byte_end":192793,"line_start":68,"line_end":68,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192798,"byte_end":192829,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192834,"byte_end":192850,"line_start":70,"line_end":70,"column_start":5,"column_end":21}},{"value":"/ assert!(OffsetDateTime::now_local().is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192855,"byte_end":192904,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192909,"byte_end":192916,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192921,"byte_end":192928,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192933,"byte_end":192965,"line_start":74,"line_end":74,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194031,"byte_end":194040,"line_start":103,"line_end":103,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"pub const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193224,"byte_end":193318,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193323,"byte_end":193326,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193331,"byte_end":193342,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193347,"byte_end":193390,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193395,"byte_end":193410,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193415,"byte_end":193453,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193458,"byte_end":193493,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193498,"byte_end":193518,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193523,"byte_end":193536,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193541,"byte_end":193547,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193552,"byte_end":193555,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193560,"byte_end":193653,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193658,"byte_end":193661,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193666,"byte_end":193716,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193721,"byte_end":193769,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193774,"byte_end":193823,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193828,"byte_end":193880,"line_start":98,"line_end":98,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193885,"byte_end":193918,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193923,"byte_end":193958,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193963,"byte_end":194001,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194006,"byte_end":194013,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195222,"byte_end":195241,"line_start":138,"line_end":138,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"pub const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194205,"byte_end":194296,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194301,"byte_end":194349,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194354,"byte_end":194357,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194362,"byte_end":194373,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194378,"byte_end":194429,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194434,"byte_end":194449,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194454,"byte_end":194501,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194506,"byte_end":194545,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194550,"byte_end":194556,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194561,"byte_end":194576,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194581,"byte_end":194640,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194645,"byte_end":194688,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194693,"byte_end":194699,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194704,"byte_end":194711,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194716,"byte_end":194719,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194724,"byte_end":194813,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194818,"byte_end":194832,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194837,"byte_end":194840,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194845,"byte_end":194856,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194861,"byte_end":194928,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194933,"byte_end":194979,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194984,"byte_end":194999,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195004,"byte_end":195091,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195096,"byte_end":195146,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195151,"byte_end":195157,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195162,"byte_end":195192,"line_start":136,"line_end":136,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195197,"byte_end":195204,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196917,"byte_end":196942,"line_start":179,"line_end":179,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"pub const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196349,"byte_end":196441,"line_start":165,"line_end":165,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196446,"byte_end":196513,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196518,"byte_end":196521,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196526,"byte_end":196537,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196542,"byte_end":196593,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196598,"byte_end":196613,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196618,"byte_end":196671,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196676,"byte_end":196715,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196720,"byte_end":196726,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196731,"byte_end":196746,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196751,"byte_end":196828,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196833,"byte_end":196876,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196881,"byte_end":196887,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196892,"byte_end":196899,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197821,"byte_end":197827,"line_start":204,"line_end":204,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"pub const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197545,"byte_end":197571,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197576,"byte_end":197579,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197584,"byte_end":197595,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197600,"byte_end":197643,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197648,"byte_end":197718,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197723,"byte_end":197791,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197796,"byte_end":197803,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198189,"byte_end":198203,"line_start":215,"line_end":215,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"pub const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197880,"byte_end":197950,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197955,"byte_end":197958,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197963,"byte_end":197974,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197979,"byte_end":198012,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198017,"byte_end":198084,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198089,"byte_end":198159,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198164,"byte_end":198171,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198904,"byte_end":198924,"line_start":234,"line_end":234,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"pub const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198566,"byte_end":198608,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198613,"byte_end":198616,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198621,"byte_end":198632,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198637,"byte_end":198668,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198673,"byte_end":198746,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198751,"byte_end":198766,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198771,"byte_end":198832,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198837,"byte_end":198863,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198868,"byte_end":198874,"line_start":232,"line_end":232,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198879,"byte_end":198886,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199445,"byte_end":199449,"line_start":250,"line_end":250,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199047,"byte_end":199089,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199094,"byte_end":199097,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199102,"byte_end":199113,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199118,"byte_end":199167,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199172,"byte_end":199245,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199250,"byte_end":199265,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199270,"byte_end":199308,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199313,"byte_end":199348,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199353,"byte_end":199373,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199378,"byte_end":199404,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199409,"byte_end":199415,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199420,"byte_end":199427,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200442,"byte_end":200446,"line_start":276,"line_end":276,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200056,"byte_end":200098,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200103,"byte_end":200106,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200111,"byte_end":200122,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200127,"byte_end":200176,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200181,"byte_end":200248,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200253,"byte_end":200268,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200273,"byte_end":200311,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200316,"byte_end":200351,"line_start":271,"line_end":271,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200356,"byte_end":200376,"line_start":272,"line_end":272,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200381,"byte_end":200401,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200406,"byte_end":200412,"line_start":274,"line_end":274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200417,"byte_end":200424,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201487,"byte_end":201491,"line_start":306,"line_end":306,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201047,"byte_end":201097,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201102,"byte_end":201105,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201110,"byte_end":201121,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201126,"byte_end":201169,"line_start":296,"line_end":296,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201174,"byte_end":201234,"line_start":297,"line_end":297,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201239,"byte_end":201254,"line_start":298,"line_end":298,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201259,"byte_end":201298,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201303,"byte_end":201338,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201343,"byte_end":201363,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201368,"byte_end":201381,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201386,"byte_end":201392,"line_start":303,"line_end":303,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201397,"byte_end":201457,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201462,"byte_end":201469,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202476,"byte_end":202481,"line_start":333,"line_end":333,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202051,"byte_end":202102,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202107,"byte_end":202110,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202115,"byte_end":202126,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202131,"byte_end":202153,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202158,"byte_end":202201,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202206,"byte_end":202277,"line_start":325,"line_end":325,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202282,"byte_end":202297,"line_start":326,"line_end":326,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202302,"byte_end":202341,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202346,"byte_end":202381,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202386,"byte_end":202407,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202412,"byte_end":202435,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202440,"byte_end":202446,"line_start":331,"line_end":331,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202451,"byte_end":202458,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202977,"byte_end":202980,"line_start":351,"line_end":351,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202538,"byte_end":202587,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202592,"byte_end":202595,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202600,"byte_end":202660,"line_start":339,"line_end":339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202665,"byte_end":202668,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202673,"byte_end":202684,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202689,"byte_end":202732,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202737,"byte_end":202793,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202798,"byte_end":202813,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202818,"byte_end":202857,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202862,"byte_end":202897,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202902,"byte_end":202921,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202926,"byte_end":202936,"line_start":348,"line_end":348,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202941,"byte_end":202947,"line_start":349,"line_end":349,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202952,"byte_end":202959,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203492,"byte_end":203499,"line_start":369,"line_end":369,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203032,"byte_end":203093,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203098,"byte_end":203101,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203106,"byte_end":203167,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203172,"byte_end":203175,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203180,"byte_end":203191,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203196,"byte_end":203239,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203244,"byte_end":203304,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203309,"byte_end":203324,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203329,"byte_end":203368,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203373,"byte_end":203408,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203413,"byte_end":203436,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203441,"byte_end":203451,"line_start":366,"line_end":366,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203456,"byte_end":203462,"line_start":367,"line_end":367,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203467,"byte_end":203474,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204554,"byte_end":204562,"line_start":394,"line_end":394,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204062,"byte_end":204123,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204128,"byte_end":204131,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204136,"byte_end":204196,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204201,"byte_end":204204,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204209,"byte_end":204220,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204225,"byte_end":204258,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204263,"byte_end":204324,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204329,"byte_end":204390,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204395,"byte_end":204457,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204462,"byte_end":204524,"line_start":392,"line_end":392,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204529,"byte_end":204536,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205149,"byte_end":205166,"line_start":409,"line_end":409,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204619,"byte_end":204683,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204688,"byte_end":204691,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204696,"byte_end":204756,"line_start":400,"line_end":400,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204761,"byte_end":204764,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204769,"byte_end":204780,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204785,"byte_end":204818,"line_start":403,"line_end":403,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204823,"byte_end":204893,"line_start":404,"line_end":404,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204898,"byte_end":204968,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204973,"byte_end":205044,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205049,"byte_end":205119,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205124,"byte_end":205131,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205762,"byte_end":205779,"line_start":424,"line_end":424,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205232,"byte_end":205296,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205301,"byte_end":205304,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205309,"byte_end":205369,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205374,"byte_end":205377,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205382,"byte_end":205393,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205398,"byte_end":205431,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205436,"byte_end":205506,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205511,"byte_end":205581,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205586,"byte_end":205657,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205662,"byte_end":205732,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205737,"byte_end":205744,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206111,"byte_end":206127,"line_start":437,"line_end":437,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205845,"byte_end":205878,"line_start":428,"line_end":428,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205883,"byte_end":205886,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205891,"byte_end":205902,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205907,"byte_end":205949,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205954,"byte_end":205969,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205974,"byte_end":206032,"line_start":433,"line_end":433,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206037,"byte_end":206070,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206075,"byte_end":206081,"line_start":435,"line_end":435,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206086,"byte_end":206093,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206453,"byte_end":206468,"line_start":450,"line_end":450,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206206,"byte_end":206246,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206251,"byte_end":206254,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206259,"byte_end":206270,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206275,"byte_end":206308,"line_start":444,"line_end":444,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206313,"byte_end":206328,"line_start":445,"line_end":445,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206333,"byte_end":206390,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206395,"byte_end":206412,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206417,"byte_end":206423,"line_start":448,"line_end":448,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206428,"byte_end":206435,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207327,"byte_end":207343,"line_start":479,"line_end":479,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206540,"byte_end":206592,"line_start":454,"line_end":454,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206597,"byte_end":206600,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206605,"byte_end":206616,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206621,"byte_end":206668,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206673,"byte_end":206688,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206693,"byte_end":206751,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206756,"byte_end":206782,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206787,"byte_end":206793,"line_start":461,"line_end":461,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206798,"byte_end":206813,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206818,"byte_end":206876,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206881,"byte_end":206907,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206912,"byte_end":206918,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206923,"byte_end":206938,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206943,"byte_end":207001,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207006,"byte_end":207034,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207039,"byte_end":207045,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207050,"byte_end":207065,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207070,"byte_end":207128,"line_start":471,"line_end":471,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207133,"byte_end":207161,"line_start":472,"line_end":472,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207166,"byte_end":207172,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207177,"byte_end":207192,"line_start":474,"line_end":474,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207197,"byte_end":207255,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207260,"byte_end":207286,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207291,"byte_end":207297,"line_start":477,"line_end":477,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207302,"byte_end":207309,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207794,"byte_end":207801,"line_start":491,"line_end":491,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207424,"byte_end":207477,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207482,"byte_end":207485,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207490,"byte_end":207501,"line_start":485,"line_end":485,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207506,"byte_end":207553,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207558,"byte_end":207624,"line_start":487,"line_end":487,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207629,"byte_end":207694,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207699,"byte_end":207764,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207769,"byte_end":207776,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208564,"byte_end":208577,"line_start":507,"line_end":507,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207862,"byte_end":207955,"line_start":495,"line_end":495,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207960,"byte_end":207963,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207968,"byte_end":208062,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208067,"byte_end":208163,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208168,"byte_end":208171,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208176,"byte_end":208187,"line_start":500,"line_end":500,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208192,"byte_end":208225,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208230,"byte_end":208297,"line_start":502,"line_end":502,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208302,"byte_end":208376,"line_start":503,"line_end":503,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208381,"byte_end":208455,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208460,"byte_end":208534,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208539,"byte_end":208546,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208987,"byte_end":208993,"line_start":520,"line_end":520,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"pub const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208698,"byte_end":208741,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208746,"byte_end":208749,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208754,"byte_end":208765,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208770,"byte_end":208803,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208808,"byte_end":208878,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208883,"byte_end":208957,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208962,"byte_end":208969,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209452,"byte_end":209464,"line_start":537,"line_end":537,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"pub const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209058,"byte_end":209114,"line_start":524,"line_end":524,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209119,"byte_end":209122,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209127,"byte_end":209138,"line_start":526,"line_end":526,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209143,"byte_end":209176,"line_start":527,"line_end":527,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209181,"byte_end":209196,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209201,"byte_end":209258,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209263,"byte_end":209283,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209288,"byte_end":209294,"line_start":531,"line_end":531,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209299,"byte_end":209314,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209319,"byte_end":209381,"line_start":533,"line_end":533,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209386,"byte_end":209411,"line_start":534,"line_end":534,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209416,"byte_end":209422,"line_start":535,"line_end":535,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209427,"byte_end":209434,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209942,"byte_end":209954,"line_start":554,"line_end":554,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"pub const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209540,"byte_end":209596,"line_start":541,"line_end":541,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209601,"byte_end":209604,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209609,"byte_end":209620,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209625,"byte_end":209658,"line_start":544,"line_end":544,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209663,"byte_end":209678,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209683,"byte_end":209740,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209745,"byte_end":209765,"line_start":547,"line_end":547,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209770,"byte_end":209776,"line_start":548,"line_end":548,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209781,"byte_end":209796,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209801,"byte_end":209867,"line_start":550,"line_end":550,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209872,"byte_end":209901,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209906,"byte_end":209912,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209917,"byte_end":209924,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210437,"byte_end":210448,"line_start":571,"line_end":571,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"pub const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210030,"byte_end":210085,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210090,"byte_end":210093,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210098,"byte_end":210109,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210114,"byte_end":210147,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210152,"byte_end":210167,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210172,"byte_end":210228,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210233,"byte_end":210253,"line_start":564,"line_end":564,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210258,"byte_end":210264,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210269,"byte_end":210284,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210289,"byte_end":210358,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210363,"byte_end":210396,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210401,"byte_end":210407,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210412,"byte_end":210419,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210962,"byte_end":210966,"line_start":589,"line_end":589,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210523,"byte_end":210567,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210572,"byte_end":210575,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210580,"byte_end":210639,"line_start":577,"line_end":577,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210644,"byte_end":210647,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210652,"byte_end":210663,"line_start":579,"line_end":579,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210668,"byte_end":210711,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210716,"byte_end":210773,"line_start":581,"line_end":581,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210778,"byte_end":210793,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210798,"byte_end":210840,"line_start":583,"line_end":583,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210845,"byte_end":210880,"line_start":584,"line_end":584,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210885,"byte_end":210905,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210910,"byte_end":210921,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210926,"byte_end":210932,"line_start":587,"line_end":587,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210937,"byte_end":210944,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211843,"byte_end":211849,"line_start":613,"line_end":613,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211385,"byte_end":211441,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211446,"byte_end":211449,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211454,"byte_end":211513,"line_start":601,"line_end":601,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211518,"byte_end":211521,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211526,"byte_end":211537,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211542,"byte_end":211585,"line_start":604,"line_end":604,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211590,"byte_end":211649,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211654,"byte_end":211669,"line_start":606,"line_end":606,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211674,"byte_end":211716,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211721,"byte_end":211759,"line_start":608,"line_end":608,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211764,"byte_end":211786,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211791,"byte_end":211802,"line_start":610,"line_end":610,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211807,"byte_end":211813,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211818,"byte_end":211825,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212607,"byte_end":212613,"line_start":635,"line_end":635,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212144,"byte_end":212202,"line_start":621,"line_end":621,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212207,"byte_end":212210,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212215,"byte_end":212274,"line_start":623,"line_end":623,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212279,"byte_end":212282,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212287,"byte_end":212298,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212303,"byte_end":212346,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212351,"byte_end":212410,"line_start":627,"line_end":627,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212415,"byte_end":212430,"line_start":628,"line_end":628,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212435,"byte_end":212477,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212482,"byte_end":212523,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212528,"byte_end":212550,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212555,"byte_end":212566,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212571,"byte_end":212577,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212582,"byte_end":212589,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213288,"byte_end":213299,"line_start":652,"line_end":652,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212909,"byte_end":212973,"line_start":643,"line_end":643,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212978,"byte_end":212981,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212986,"byte_end":213048,"line_start":645,"line_end":645,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213053,"byte_end":213056,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213061,"byte_end":213072,"line_start":647,"line_end":647,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213077,"byte_end":213110,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213115,"byte_end":213179,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213184,"byte_end":213258,"line_start":650,"line_end":650,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213263,"byte_end":213270,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213792,"byte_end":213803,"line_start":668,"line_end":668,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213366,"byte_end":213430,"line_start":656,"line_end":656,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213435,"byte_end":213438,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213443,"byte_end":213509,"line_start":658,"line_end":658,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213514,"byte_end":213517,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213522,"byte_end":213533,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213538,"byte_end":213571,"line_start":661,"line_end":661,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213576,"byte_end":213640,"line_start":662,"line_end":662,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213645,"byte_end":213660,"line_start":663,"line_end":663,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213665,"byte_end":213730,"line_start":664,"line_end":664,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213735,"byte_end":213751,"line_start":665,"line_end":665,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213756,"byte_end":213762,"line_start":666,"line_end":666,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213767,"byte_end":213774,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214305,"byte_end":214315,"line_start":684,"line_end":684,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213870,"byte_end":213933,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213938,"byte_end":213941,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213946,"byte_end":214016,"line_start":674,"line_end":674,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214021,"byte_end":214024,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214029,"byte_end":214040,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214045,"byte_end":214078,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214083,"byte_end":214146,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214151,"byte_end":214166,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214171,"byte_end":214239,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214244,"byte_end":214264,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214269,"byte_end":214275,"line_start":682,"line_end":682,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214280,"byte_end":214287,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215132,"byte_end":215143,"line_start":707,"line_end":707,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214470,"byte_end":214543,"line_start":691,"line_end":691,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214548,"byte_end":214551,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214556,"byte_end":214563,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214568,"byte_end":214615,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214620,"byte_end":214663,"line_start":695,"line_end":695,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214668,"byte_end":214736,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214741,"byte_end":214797,"line_start":697,"line_end":697,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214802,"byte_end":214805,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214810,"byte_end":214878,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214883,"byte_end":214936,"line_start":700,"line_end":700,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214941,"byte_end":214944,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214949,"byte_end":214964,"line_start":702,"line_end":702,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214969,"byte_end":215037,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215042,"byte_end":215091,"line_start":704,"line_end":704,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215096,"byte_end":215102,"line_start":705,"line_end":705,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215107,"byte_end":215114,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216032,"byte_end":216043,"line_start":728,"line_end":728,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215370,"byte_end":215443,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215448,"byte_end":215451,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215456,"byte_end":215463,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215468,"byte_end":215515,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215520,"byte_end":215563,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215568,"byte_end":215636,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215641,"byte_end":215694,"line_start":718,"line_end":718,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215699,"byte_end":215702,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215707,"byte_end":215775,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215780,"byte_end":215836,"line_start":721,"line_end":721,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215841,"byte_end":215844,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215849,"byte_end":215864,"line_start":723,"line_end":723,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215869,"byte_end":215937,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215942,"byte_end":215991,"line_start":725,"line_end":725,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215996,"byte_end":216002,"line_start":726,"line_end":726,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216007,"byte_end":216014,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217057,"byte_end":217071,"line_start":755,"line_end":755,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216344,"byte_end":216405,"line_start":735,"line_end":735,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216410,"byte_end":216413,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216418,"byte_end":216425,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216430,"byte_end":216469,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216474,"byte_end":216507,"line_start":739,"line_end":739,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216512,"byte_end":216527,"line_start":740,"line_end":740,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216532,"byte_end":216606,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216611,"byte_end":216656,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216661,"byte_end":216667,"line_start":743,"line_end":743,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216672,"byte_end":216675,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216680,"byte_end":216695,"line_start":745,"line_end":745,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216700,"byte_end":216787,"line_start":746,"line_end":746,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216792,"byte_end":216853,"line_start":747,"line_end":747,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216858,"byte_end":216864,"line_start":748,"line_end":748,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216869,"byte_end":216872,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216877,"byte_end":216892,"line_start":750,"line_end":750,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216897,"byte_end":216968,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216973,"byte_end":217016,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217021,"byte_end":217027,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217032,"byte_end":217039,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218204,"byte_end":218218,"line_start":789,"line_end":789,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217491,"byte_end":217552,"line_start":769,"line_end":769,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217557,"byte_end":217560,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217565,"byte_end":217572,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217577,"byte_end":217616,"line_start":772,"line_end":772,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217621,"byte_end":217654,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217659,"byte_end":217674,"line_start":774,"line_end":774,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217679,"byte_end":217750,"line_start":775,"line_end":775,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217755,"byte_end":217800,"line_start":776,"line_end":776,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217805,"byte_end":217811,"line_start":777,"line_end":777,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217816,"byte_end":217819,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217824,"byte_end":217839,"line_start":779,"line_end":779,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217844,"byte_end":217934,"line_start":780,"line_end":780,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217939,"byte_end":218000,"line_start":781,"line_end":781,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218005,"byte_end":218011,"line_start":782,"line_end":782,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218016,"byte_end":218019,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218024,"byte_end":218039,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218044,"byte_end":218115,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218120,"byte_end":218163,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218168,"byte_end":218174,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218179,"byte_end":218186,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219512,"byte_end":219524,"line_start":827,"line_end":827,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218780,"byte_end":218866,"line_start":808,"line_end":808,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218871,"byte_end":218900,"line_start":809,"line_end":809,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218905,"byte_end":218908,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218913,"byte_end":218924,"line_start":811,"line_end":811,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218929,"byte_end":218970,"line_start":812,"line_end":812,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218975,"byte_end":218990,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218995,"byte_end":219061,"line_start":814,"line_end":814,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219066,"byte_end":219105,"line_start":815,"line_end":815,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219110,"byte_end":219116,"line_start":816,"line_end":816,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219121,"byte_end":219136,"line_start":817,"line_end":817,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219141,"byte_end":219206,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219211,"byte_end":219248,"line_start":819,"line_end":819,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219253,"byte_end":219259,"line_start":820,"line_end":820,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219264,"byte_end":219279,"line_start":821,"line_end":821,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219284,"byte_end":219349,"line_start":822,"line_end":822,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219354,"byte_end":219392,"line_start":823,"line_end":823,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219397,"byte_end":219403,"line_start":824,"line_end":824,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219408,"byte_end":219415,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219420,"byte_end":219494,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220301,"byte_end":220313,"line_start":849,"line_end":849,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219702,"byte_end":219788,"line_start":834,"line_end":834,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219793,"byte_end":219822,"line_start":835,"line_end":835,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219827,"byte_end":219830,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219835,"byte_end":219846,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219851,"byte_end":219892,"line_start":838,"line_end":838,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219897,"byte_end":219912,"line_start":839,"line_end":839,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219917,"byte_end":219989,"line_start":840,"line_end":840,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219994,"byte_end":220033,"line_start":841,"line_end":841,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220038,"byte_end":220044,"line_start":842,"line_end":842,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220049,"byte_end":220064,"line_start":843,"line_end":843,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220069,"byte_end":220139,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220144,"byte_end":220181,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220186,"byte_end":220192,"line_start":846,"line_end":846,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220197,"byte_end":220204,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220209,"byte_end":220283,"line_start":848,"line_end":848,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221116,"byte_end":221133,"line_start":871,"line_end":871,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"pub const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220491,"byte_end":220578,"line_start":856,"line_end":856,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220583,"byte_end":220615,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220620,"byte_end":220623,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220628,"byte_end":220639,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220644,"byte_end":220677,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220682,"byte_end":220697,"line_start":861,"line_end":861,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220702,"byte_end":220789,"line_start":862,"line_end":862,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220794,"byte_end":220833,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220838,"byte_end":220844,"line_start":864,"line_end":864,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220849,"byte_end":220864,"line_start":865,"line_end":865,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220869,"byte_end":220954,"line_start":866,"line_end":866,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220959,"byte_end":220996,"line_start":867,"line_end":867,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221001,"byte_end":221007,"line_start":868,"line_end":868,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221012,"byte_end":221019,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221024,"byte_end":221098,"line_start":870,"line_end":870,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221632,"byte_end":221646,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"pub const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221236,"byte_end":221306,"line_start":875,"line_end":875,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221311,"byte_end":221314,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221319,"byte_end":221330,"line_start":877,"line_end":877,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221335,"byte_end":221378,"line_start":878,"line_end":878,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221383,"byte_end":221398,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221403,"byte_end":221470,"line_start":880,"line_end":880,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221475,"byte_end":221512,"line_start":881,"line_end":881,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221517,"byte_end":221523,"line_start":882,"line_end":882,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221528,"byte_end":221535,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221540,"byte_end":221614,"line_start":884,"line_end":884,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222298,"byte_end":222310,"line_start":900,"line_end":900,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221741,"byte_end":221799,"line_start":889,"line_end":889,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221804,"byte_end":221807,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221812,"byte_end":221823,"line_start":891,"line_end":891,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221828,"byte_end":221861,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221866,"byte_end":221881,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221886,"byte_end":221949,"line_start":894,"line_end":894,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221954,"byte_end":222001,"line_start":895,"line_end":895,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222006,"byte_end":222012,"line_start":896,"line_end":896,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222017,"byte_end":222141,"line_start":897,"line_end":897,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222146,"byte_end":222268,"line_start":898,"line_end":898,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222273,"byte_end":222280,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223005,"byte_end":223018,"line_start":920,"line_end":920,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222560,"byte_end":222594,"line_start":909,"line_end":909,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222599,"byte_end":222602,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222607,"byte_end":222618,"line_start":911,"line_end":911,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222623,"byte_end":222656,"line_start":912,"line_end":912,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222661,"byte_end":222683,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222688,"byte_end":222703,"line_start":914,"line_end":914,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222708,"byte_end":222782,"line_start":915,"line_end":915,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222787,"byte_end":222834,"line_start":916,"line_end":916,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222839,"byte_end":222845,"line_start":917,"line_end":917,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222850,"byte_end":222975,"line_start":918,"line_end":918,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222980,"byte_end":222987,"line_start":919,"line_end":919,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223762,"byte_end":223773,"line_start":940,"line_end":940,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223273,"byte_end":223306,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223311,"byte_end":223314,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223319,"byte_end":223330,"line_start":931,"line_end":931,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223335,"byte_end":223368,"line_start":932,"line_end":932,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223373,"byte_end":223388,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223393,"byte_end":223452,"line_start":934,"line_end":934,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223457,"byte_end":223504,"line_start":935,"line_end":935,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223509,"byte_end":223515,"line_start":936,"line_end":936,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223520,"byte_end":223617,"line_start":937,"line_end":937,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223622,"byte_end":223732,"line_start":938,"line_end":938,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223737,"byte_end":223744,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224436,"byte_end":224448,"line_start":959,"line_end":959,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224019,"byte_end":224046,"line_start":949,"line_end":949,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224051,"byte_end":224054,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224059,"byte_end":224070,"line_start":951,"line_end":951,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224075,"byte_end":224108,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224113,"byte_end":224128,"line_start":953,"line_end":953,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224133,"byte_end":224208,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224213,"byte_end":224275,"line_start":955,"line_end":955,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224280,"byte_end":224286,"line_start":956,"line_end":956,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224291,"byte_end":224406,"line_start":957,"line_end":957,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224411,"byte_end":224418,"line_start":958,"line_end":958,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225133,"byte_end":225147,"line_start":978,"line_end":978,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224697,"byte_end":224737,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224742,"byte_end":224745,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224750,"byte_end":224761,"line_start":970,"line_end":970,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224766,"byte_end":224799,"line_start":971,"line_end":971,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224804,"byte_end":224819,"line_start":972,"line_end":972,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224824,"byte_end":224901,"line_start":973,"line_end":973,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224906,"byte_end":224968,"line_start":974,"line_end":974,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224973,"byte_end":224979,"line_start":975,"line_end":975,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224984,"byte_end":225103,"line_start":976,"line_end":976,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225108,"byte_end":225115,"line_start":977,"line_end":977,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225840,"byte_end":225854,"line_start":997,"line_end":997,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225402,"byte_end":225444,"line_start":987,"line_end":987,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225449,"byte_end":225452,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225457,"byte_end":225468,"line_start":989,"line_end":989,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225473,"byte_end":225506,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225511,"byte_end":225526,"line_start":991,"line_end":991,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225531,"byte_end":225608,"line_start":992,"line_end":992,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225613,"byte_end":225675,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225680,"byte_end":225686,"line_start":994,"line_end":994,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225691,"byte_end":225810,"line_start":995,"line_end":995,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225815,"byte_end":225822,"line_start":996,"line_end":996,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226565,"byte_end":226584,"line_start":1016,"line_end":1016,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226109,"byte_end":226156,"line_start":1006,"line_end":1006,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226161,"byte_end":226164,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226169,"byte_end":226180,"line_start":1008,"line_end":1008,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226185,"byte_end":226218,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226223,"byte_end":226238,"line_start":1010,"line_end":1010,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226243,"byte_end":226325,"line_start":1011,"line_end":1011,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226330,"byte_end":226384,"line_start":1012,"line_end":1012,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226389,"byte_end":226395,"line_start":1013,"line_end":1013,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226400,"byte_end":226535,"line_start":1014,"line_end":1014,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226540,"byte_end":226547,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227350,"byte_end":227369,"line_start":1038,"line_end":1038,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226878,"byte_end":226925,"line_start":1028,"line_end":1028,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226930,"byte_end":226933,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226938,"byte_end":226949,"line_start":1030,"line_end":1030,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226954,"byte_end":226987,"line_start":1031,"line_end":1031,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226992,"byte_end":227007,"line_start":1032,"line_end":1032,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227012,"byte_end":227098,"line_start":1033,"line_end":1033,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227103,"byte_end":227161,"line_start":1034,"line_end":1034,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227166,"byte_end":227172,"line_start":1035,"line_end":1035,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227177,"byte_end":227320,"line_start":1036,"line_end":1036,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227325,"byte_end":227332,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228147,"byte_end":228165,"line_start":1060,"line_end":1060,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227663,"byte_end":227709,"line_start":1050,"line_end":1050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227714,"byte_end":227717,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227722,"byte_end":227733,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227738,"byte_end":227771,"line_start":1053,"line_end":1053,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227776,"byte_end":227791,"line_start":1054,"line_end":1054,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227796,"byte_end":227885,"line_start":1055,"line_end":1055,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227890,"byte_end":227952,"line_start":1056,"line_end":1056,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227957,"byte_end":227963,"line_start":1057,"line_end":1057,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227968,"byte_end":228117,"line_start":1058,"line_end":1058,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228122,"byte_end":228129,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228664,"byte_end":228675,"line_start":1076,"line_end":1076,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228545,"byte_end":228603,"line_start":1074,"line_end":1074,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228608,"byte_end":228652,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229637,"byte_end":229643,"line_start":1105,"line_end":1105,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229040,"byte_end":229098,"line_start":1090,"line_end":1090,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229103,"byte_end":229147,"line_start":1091,"line_end":1091,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229152,"byte_end":229155,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229160,"byte_end":229171,"line_start":1093,"line_end":1093,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229176,"byte_end":229231,"line_start":1094,"line_end":1094,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229236,"byte_end":229279,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229284,"byte_end":229353,"line_start":1096,"line_end":1096,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229358,"byte_end":229420,"line_start":1097,"line_end":1097,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229425,"byte_end":229432,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229437,"byte_end":229452,"line_start":1099,"line_end":1099,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229457,"byte_end":229523,"line_start":1100,"line_end":1100,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229528,"byte_end":229567,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229572,"byte_end":229578,"line_start":1102,"line_end":1102,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229583,"byte_end":229613,"line_start":1103,"line_end":1103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229618,"byte_end":229625,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230571,"byte_end":230576,"line_start":1128,"line_end":1128,"column_start":12,"column_end":17},"name":"parse","qualname":"<OffsetDateTime>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse an `OffsetDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse an `OffsetDateTime` from the input using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229929,"byte_end":230000,"line_start":1113,"line_end":1113,"column_start":5,"column_end":76}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230005,"byte_end":230049,"line_start":1114,"line_end":1114,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230054,"byte_end":230057,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230062,"byte_end":230073,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230078,"byte_end":230149,"line_start":1117,"line_end":1117,"column_start":5,"column_end":76}},{"value":"/ let format = format_description::parse(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230154,"byte_end":230197,"line_start":1118,"line_end":1118,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230202,"byte_end":230271,"line_start":1119,"line_end":1119,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230276,"byte_end":230338,"line_start":1120,"line_end":1120,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230343,"byte_end":230350,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230355,"byte_end":230370,"line_start":1122,"line_end":1122,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"2020-01-02 03:04:05 +06:07:08\", &format)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230375,"byte_end":230448,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230453,"byte_end":230501,"line_start":1124,"line_end":1124,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230506,"byte_end":230512,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230517,"byte_end":230547,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230552,"byte_end":230559,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsing","qualname":"::parsing","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1439},{"krate":0,"index":1529},{"krate":0,"index":1784},{"krate":0,"index":1965},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":3509},{"krate":0,"index":3515},{"krate":0,"index":1982},{"krate":0,"index":1993},{"krate":0,"index":1996}],"decl_id":null,"docs":" Parsing for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9945,"byte_end":9972,"line_start":296,"line_end":296,"column_start":1,"column_end":28}},{"value":"/ Parsing for various types.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":235806,"byte_end":235836,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259392,"byte_end":259400,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"Parsable","qualname":"::parsing::parsable::Parsable","value":"Parsable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be parsed.\n","sig":null,"attributes":[{"value":"/ A type that can be parsed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259303,"byte_end":259333,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259950,"byte_end":259956,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parsing::parsable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598}],"decl_id":null,"docs":" Parse the item using a format description and an input.\n","sig":null,"attributes":[{"value":"/ Parse the item using a format description and an input.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259813,"byte_end":259872,"line_start":28,"line_end":28,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260142,"byte_end":260152,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"parse_into","qualname":"::parsing::parsable::sealed::Sealed::parse_into","value":"pub fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse the item into the provided [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into the provided [`Parsed`] struct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259967,"byte_end":260022,"line_start":31,"line_end":31,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260031,"byte_end":260034,"line_start":32,"line_end":32,"column_start":9,"column_end":12}},{"value":"/ This method can be used to parse a single component without parsing the full value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260043,"byte_end":260130,"line_start":33,"line_end":33,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260522,"byte_end":260527,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"parse","qualname":"::parsing::parsable::sealed::Sealed::parse","value":"pub fn parse(&Self, &[u8]) -> Result<Parsed, error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse the item into a new [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into a new [`Parsed`] struct.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260293,"byte_end":260341,"line_start":40,"line_end":40,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260350,"byte_end":260353,"line_start":41,"line_end":41,"column_start":9,"column_end":12}},{"value":"/ This method can only be used to parse a complete value of a type. If any characters","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260362,"byte_end":260449,"line_start":42,"line_end":42,"column_start":9,"column_end":96}},{"value":"/ remain after parsing, an error will be returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260458,"byte_end":260510,"line_start":43,"line_end":43,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260898,"byte_end":260908,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"parse_date","qualname":"::parsing::parsable::sealed::Sealed::parse_date","value":"pub fn parse_date(&Self, &[u8]) -> Result<Date, error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse a [`Date`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Date`] from the format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260837,"byte_end":260886,"line_start":53,"line_end":53,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261089,"byte_end":261099,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"parse_time","qualname":"::parsing::parsable::sealed::Sealed::parse_time","value":"pub fn parse_time(&Self, &[u8]) -> Result<Time, error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse a [`Time`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Time`] from the format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261028,"byte_end":261077,"line_start":58,"line_end":58,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261285,"byte_end":261297,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"parse_offset","qualname":"::parsing::parsable::sealed::Sealed::parse_offset","value":"pub fn parse_offset(&Self, &[u8]) -> Result<UtcOffset, error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse a [`UtcOffset`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`UtcOffset`] from the format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261219,"byte_end":261273,"line_start":63,"line_end":63,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261496,"byte_end":261511,"line_start":69,"line_end":69,"column_start":12,"column_end":27},"name":"parse_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_date_time","value":"pub fn parse_date_time(&Self, &[u8])\n-> Result<PrimitiveDateTime, error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse a [`PrimitiveDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`PrimitiveDateTime`] from the format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261422,"byte_end":261484,"line_start":68,"line_end":68,"column_start":9,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261715,"byte_end":261737,"line_start":74,"line_end":74,"column_start":12,"column_end":34},"name":"parse_offset_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_offset_date_time","value":"pub fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Parse a [`OffsetDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`OffsetDateTime`] from the format description.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261644,"byte_end":261703,"line_start":73,"line_end":73,"column_start":9,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279717,"byte_end":279723,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::parsing::parsed::Parsed","value":"Parsed {  }","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436}],"decl_id":null,"docs":" All information parsed.","sig":null,"attributes":[{"value":"/ All information parsed.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279391,"byte_end":279418,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279419,"byte_end":279422,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This information is directly used to construct the final values.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279423,"byte_end":279491,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279492,"byte_end":279495,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Most users will not need think about this struct in any way. It is public to allow for manual","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279496,"byte_end":279593,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ control over values, in the instance that the default parser is insufficient.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":279594,"byte_end":279675,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281684,"byte_end":281687,"line_start":73,"line_end":73,"column_start":18,"column_end":21},"name":"new","qualname":"<Parsed>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Parsed` with no information known.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Parsed` with no information known.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281602,"byte_end":281666,"line_start":72,"line_end":72,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282662,"byte_end":282672,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"parse_item","qualname":"<Parsed>::parse_item","value":"pub fn parse_item<'a>(&mut Self, &'a [u8], &FormatItem)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the\n `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282376,"byte_end":282470,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ `Ok` value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282475,"byte_end":282490,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282495,"byte_end":282498,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If a [`FormatItem::Optional`] is passed, parsing will not fail; the input will be returned","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282503,"byte_end":282597,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ as-is if the expected format is not present.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282602,"byte_end":282650,"line_start":103,"line_end":103,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284235,"byte_end":284246,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"parse_items","qualname":"<Parsed>::parse_items","value":"pub fn parse_items<'a>(&mut Self, &'a [u8], &[FormatItem])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as\n the `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283957,"byte_end":284053,"line_start":135,"line_end":135,"column_start":5,"column_end":101}},{"value":"/ the `Ok` value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284058,"byte_end":284077,"line_start":136,"line_end":136,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284082,"byte_end":284085,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This method will fail if any of the contained [`FormatItem`]s fail to parse. `self` will not","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284090,"byte_end":284186,"line_start":138,"line_end":138,"column_start":5,"column_end":101}},{"value":"/ be mutated in this instance.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284191,"byte_end":284223,"line_start":139,"line_end":139,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284775,"byte_end":284788,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"parse_literal","qualname":"<Parsed>::parse_literal","value":"pub fn parse_literal<'a>(&'a [u8], &[u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a literal byte sequence. The remaining input is returned as the `Ok` value.\n","sig":null,"attributes":[{"value":"/ Parse a literal byte sequence. The remaining input is returned as the `Ok` value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284678,"byte_end":284763,"line_start":155,"line_end":155,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":285145,"byte_end":285160,"line_start":167,"line_end":167,"column_start":12,"column_end":27},"name":"parse_component","qualname":"<Parsed>::parse_component","value":"pub fn parse_component<'a>(&mut Self, &'a [u8], Component)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single component, mutating the struct. The remaining input is returned as the `Ok`\n value.\n","sig":null,"attributes":[{"value":"/ Parse a single component, mutating the struct. The remaining input is returned as the `Ok`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":285024,"byte_end":285118,"line_start":165,"line_end":165,"column_start":5,"column_end":99}},{"value":"/ value.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":285123,"byte_end":285133,"line_start":166,"line_end":166,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290163,"byte_end":290167,"line_start":267,"line_end":267,"column_start":9,"column_end":13},"name":"year","qualname":"<Parsed>::year","value":"pub const fn year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290182,"byte_end":290195,"line_start":268,"line_end":268,"column_start":9,"column_end":22},"name":"year_last_two","qualname":"<Parsed>::year_last_two","value":"pub const fn year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290209,"byte_end":290217,"line_start":269,"line_end":269,"column_start":9,"column_end":17},"name":"iso_year","qualname":"<Parsed>::iso_year","value":"pub const fn iso_year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290232,"byte_end":290249,"line_start":270,"line_end":270,"column_start":9,"column_end":26},"name":"iso_year_last_two","qualname":"<Parsed>::iso_year_last_two","value":"pub const fn iso_year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290263,"byte_end":290268,"line_start":271,"line_end":271,"column_start":9,"column_end":14},"name":"month","qualname":"<Parsed>::month","value":"pub const fn month(&Self) -> Option<Month>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290285,"byte_end":290303,"line_start":272,"line_end":272,"column_start":9,"column_end":27},"name":"sunday_week_number","qualname":"<Parsed>::sunday_week_number","value":"pub const fn sunday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290317,"byte_end":290335,"line_start":273,"line_end":273,"column_start":9,"column_end":27},"name":"monday_week_number","qualname":"<Parsed>::monday_week_number","value":"pub const fn monday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290349,"byte_end":290364,"line_start":274,"line_end":274,"column_start":9,"column_end":24},"name":"iso_week_number","qualname":"<Parsed>::iso_week_number","value":"pub const fn iso_week_number(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290385,"byte_end":290392,"line_start":275,"line_end":275,"column_start":9,"column_end":16},"name":"weekday","qualname":"<Parsed>::weekday","value":"pub const fn weekday(&Self) -> Option<Weekday>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290411,"byte_end":290418,"line_start":276,"line_end":276,"column_start":9,"column_end":16},"name":"ordinal","qualname":"<Parsed>::ordinal","value":"pub const fn ordinal(&Self) -> Option<NonZeroU16>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290440,"byte_end":290443,"line_start":277,"line_end":277,"column_start":9,"column_end":12},"name":"day","qualname":"<Parsed>::day","value":"pub const fn day(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290464,"byte_end":290471,"line_start":278,"line_end":278,"column_start":9,"column_end":16},"name":"hour_24","qualname":"<Parsed>::hour_24","value":"pub const fn hour_24(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290485,"byte_end":290492,"line_start":279,"line_end":279,"column_start":9,"column_end":16},"name":"hour_12","qualname":"<Parsed>::hour_12","value":"pub const fn hour_12(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290513,"byte_end":290526,"line_start":280,"line_end":280,"column_start":9,"column_end":22},"name":"hour_12_is_pm","qualname":"<Parsed>::hour_12_is_pm","value":"pub const fn hour_12_is_pm(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290542,"byte_end":290548,"line_start":281,"line_end":281,"column_start":9,"column_end":15},"name":"minute","qualname":"<Parsed>::minute","value":"pub const fn minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290562,"byte_end":290568,"line_start":282,"line_end":282,"column_start":9,"column_end":15},"name":"second","qualname":"<Parsed>::second","value":"pub const fn second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3458},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290582,"byte_end":290591,"line_start":283,"line_end":283,"column_start":9,"column_end":18},"name":"subsecond","qualname":"<Parsed>::subsecond","value":"pub const fn subsecond(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290606,"byte_end":290617,"line_start":284,"line_end":284,"column_start":9,"column_end":20},"name":"offset_hour","qualname":"<Parsed>::offset_hour","value":"pub const fn offset_hour(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289980,"byte_end":290011,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290792,"byte_end":290805,"line_start":289,"line_end":289,"column_start":18,"column_end":31},"name":"offset_minute","qualname":"<Parsed>::offset_minute","value":"pub const fn offset_minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset minute.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290634,"byte_end":290685,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_minute_signed()` instead\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290690,"byte_end":290774,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290971,"byte_end":290991,"line_start":294,"line_end":294,"column_start":18,"column_end":38},"name":"offset_minute_signed","qualname":"<Parsed>::offset_minute_signed","value":"pub const fn offset_minute_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset minute as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset minute as an `i8`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290913,"byte_end":290953,"line_start":293,"line_end":293,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291211,"byte_end":291224,"line_start":300,"line_end":300,"column_start":18,"column_end":31},"name":"offset_second","qualname":"<Parsed>::offset_second","value":"pub const fn offset_second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset second.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291053,"byte_end":291104,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_second_signed()` instead\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291109,"byte_end":291193,"line_start":299,"line_end":299,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291390,"byte_end":291410,"line_start":305,"line_end":305,"column_start":18,"column_end":38},"name":"offset_second_signed","qualname":"<Parsed>::offset_second_signed","value":"pub const fn offset_second_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset second as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset second as an `i8`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291332,"byte_end":291372,"line_start":304,"line_end":304,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292300,"byte_end":292308,"line_start":334,"line_end":334,"column_start":9,"column_end":17},"name":"set_year","qualname":"<Parsed>::set_year","value":"pub fn set_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292328,"byte_end":292345,"line_start":335,"line_end":335,"column_start":9,"column_end":26},"name":"set_year_last_two","qualname":"<Parsed>::set_year_last_two","value":"pub fn set_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292373,"byte_end":292385,"line_start":336,"line_end":336,"column_start":9,"column_end":21},"name":"set_iso_year","qualname":"<Parsed>::set_iso_year","value":"pub fn set_iso_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292409,"byte_end":292430,"line_start":337,"line_end":337,"column_start":9,"column_end":30},"name":"set_iso_year_last_two","qualname":"<Parsed>::set_iso_year_last_two","value":"pub fn set_iso_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292462,"byte_end":292471,"line_start":338,"line_end":338,"column_start":9,"column_end":18},"name":"set_month","qualname":"<Parsed>::set_month","value":"pub fn set_month(&mut Self, Month) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292494,"byte_end":292516,"line_start":339,"line_end":339,"column_start":9,"column_end":31},"name":"set_sunday_week_number","qualname":"<Parsed>::set_sunday_week_number","value":"pub fn set_sunday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292549,"byte_end":292571,"line_start":340,"line_end":340,"column_start":9,"column_end":31},"name":"set_monday_week_number","qualname":"<Parsed>::set_monday_week_number","value":"pub fn set_monday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292604,"byte_end":292623,"line_start":341,"line_end":341,"column_start":9,"column_end":28},"name":"set_iso_week_number","qualname":"<Parsed>::set_iso_week_number","value":"pub fn set_iso_week_number(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292660,"byte_end":292671,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"pub fn set_weekday(&mut Self, Weekday) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292698,"byte_end":292709,"line_start":343,"line_end":343,"column_start":9,"column_end":20},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"pub fn set_ordinal(&mut Self, NonZeroU16) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292739,"byte_end":292746,"line_start":344,"line_end":344,"column_start":9,"column_end":16},"name":"set_day","qualname":"<Parsed>::set_day","value":"pub fn set_day(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292771,"byte_end":292782,"line_start":345,"line_end":345,"column_start":9,"column_end":20},"name":"set_hour_24","qualname":"<Parsed>::set_hour_24","value":"pub fn set_hour_24(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292804,"byte_end":292815,"line_start":346,"line_end":346,"column_start":9,"column_end":20},"name":"set_hour_12","qualname":"<Parsed>::set_hour_12","value":"pub fn set_hour_12(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292844,"byte_end":292861,"line_start":347,"line_end":347,"column_start":9,"column_end":26},"name":"set_hour_12_is_pm","qualname":"<Parsed>::set_hour_12_is_pm","value":"pub fn set_hour_12_is_pm(&mut Self, bool) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292891,"byte_end":292901,"line_start":348,"line_end":348,"column_start":9,"column_end":19},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"pub fn set_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292922,"byte_end":292932,"line_start":349,"line_end":349,"column_start":9,"column_end":19},"name":"set_second","qualname":"<Parsed>::set_second","value":"pub fn set_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292953,"byte_end":292966,"line_start":350,"line_end":350,"column_start":9,"column_end":22},"name":"set_subsecond","qualname":"<Parsed>::set_subsecond","value":"pub fn set_subsecond(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292991,"byte_end":293006,"line_start":351,"line_end":351,"column_start":9,"column_end":24},"name":"set_offset_hour","qualname":"<Parsed>::set_offset_hour","value":"pub fn set_offset_hour(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291883,"byte_end":291911,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293190,"byte_end":293207,"line_start":359,"line_end":359,"column_start":12,"column_end":29},"name":"set_offset_minute","qualname":"<Parsed>::set_offset_minute","value":"pub fn set_offset_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293035,"byte_end":293063,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_minute_signed()` instead\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293068,"byte_end":293178,"line_start":355,"line_end":358,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293440,"byte_end":293464,"line_start":368,"line_end":368,"column_start":12,"column_end":36},"name":"set_offset_minute_signed","qualname":"<Parsed>::set_offset_minute_signed","value":"pub fn set_offset_minute_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293390,"byte_end":293428,"line_start":367,"line_end":367,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293728,"byte_end":293745,"line_start":378,"line_end":378,"column_start":12,"column_end":29},"name":"set_offset_second","qualname":"<Parsed>::set_offset_second","value":"pub fn set_offset_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293573,"byte_end":293601,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_second_signed()` instead\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293606,"byte_end":293716,"line_start":374,"line_end":377,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293978,"byte_end":294002,"line_start":387,"line_end":387,"column_start":12,"column_end":36},"name":"set_offset_second_signed","qualname":"<Parsed>::set_offset_second_signed","value":"pub fn set_offset_second_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293928,"byte_end":293966,"line_start":386,"line_end":386,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294980,"byte_end":294989,"line_start":417,"line_end":417,"column_start":9,"column_end":18},"name":"with_year","qualname":"<Parsed>::with_year","value":"pub const fn with_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295009,"byte_end":295027,"line_start":418,"line_end":418,"column_start":9,"column_end":27},"name":"with_year_last_two","qualname":"<Parsed>::with_year_last_two","value":"pub const fn with_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295055,"byte_end":295068,"line_start":419,"line_end":419,"column_start":9,"column_end":22},"name":"with_iso_year","qualname":"<Parsed>::with_iso_year","value":"pub const fn with_iso_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295092,"byte_end":295114,"line_start":420,"line_end":420,"column_start":9,"column_end":31},"name":"with_iso_year_last_two","qualname":"<Parsed>::with_iso_year_last_two","value":"pub const fn with_iso_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295146,"byte_end":295156,"line_start":421,"line_end":421,"column_start":9,"column_end":19},"name":"with_month","qualname":"<Parsed>::with_month","value":"pub const fn with_month(Self, Month) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295179,"byte_end":295202,"line_start":422,"line_end":422,"column_start":9,"column_end":32},"name":"with_sunday_week_number","qualname":"<Parsed>::with_sunday_week_number","value":"pub const fn with_sunday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295235,"byte_end":295258,"line_start":423,"line_end":423,"column_start":9,"column_end":32},"name":"with_monday_week_number","qualname":"<Parsed>::with_monday_week_number","value":"pub const fn with_monday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295291,"byte_end":295311,"line_start":424,"line_end":424,"column_start":9,"column_end":29},"name":"with_iso_week_number","qualname":"<Parsed>::with_iso_week_number","value":"pub const fn with_iso_week_number(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295348,"byte_end":295360,"line_start":425,"line_end":425,"column_start":9,"column_end":21},"name":"with_weekday","qualname":"<Parsed>::with_weekday","value":"pub const fn with_weekday(Self, Weekday) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295387,"byte_end":295399,"line_start":426,"line_end":426,"column_start":9,"column_end":21},"name":"with_ordinal","qualname":"<Parsed>::with_ordinal","value":"pub const fn with_ordinal(Self, NonZeroU16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295429,"byte_end":295437,"line_start":427,"line_end":427,"column_start":9,"column_end":17},"name":"with_day","qualname":"<Parsed>::with_day","value":"pub const fn with_day(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295462,"byte_end":295474,"line_start":428,"line_end":428,"column_start":9,"column_end":21},"name":"with_hour_24","qualname":"<Parsed>::with_hour_24","value":"pub const fn with_hour_24(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295496,"byte_end":295508,"line_start":429,"line_end":429,"column_start":9,"column_end":21},"name":"with_hour_12","qualname":"<Parsed>::with_hour_12","value":"pub const fn with_hour_12(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295537,"byte_end":295555,"line_start":430,"line_end":430,"column_start":9,"column_end":27},"name":"with_hour_12_is_pm","qualname":"<Parsed>::with_hour_12_is_pm","value":"pub const fn with_hour_12_is_pm(Self, bool) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295585,"byte_end":295596,"line_start":431,"line_end":431,"column_start":9,"column_end":20},"name":"with_minute","qualname":"<Parsed>::with_minute","value":"pub const fn with_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295617,"byte_end":295628,"line_start":432,"line_end":432,"column_start":9,"column_end":20},"name":"with_second","qualname":"<Parsed>::with_second","value":"pub const fn with_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295649,"byte_end":295663,"line_start":433,"line_end":433,"column_start":9,"column_end":23},"name":"with_subsecond","qualname":"<Parsed>::with_subsecond","value":"pub const fn with_subsecond(Self, u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295688,"byte_end":295704,"line_start":434,"line_end":434,"column_start":9,"column_end":25},"name":"with_offset_hour","qualname":"<Parsed>::with_offset_hour","value":"pub const fn with_offset_hour(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294515,"byte_end":294561,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295913,"byte_end":295931,"line_start":442,"line_end":442,"column_start":18,"column_end":36},"name":"with_offset_minute","qualname":"<Parsed>::with_offset_minute","value":"pub const fn with_offset_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295733,"byte_end":295779,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_minute_signed()` instead\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295784,"byte_end":295895,"line_start":438,"line_end":441,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296186,"byte_end":296211,"line_start":451,"line_end":451,"column_start":18,"column_end":43},"name":"with_offset_minute_signed","qualname":"<Parsed>::with_offset_minute_signed","value":"pub const fn with_offset_minute_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296112,"byte_end":296168,"line_start":450,"line_end":450,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296503,"byte_end":296521,"line_start":461,"line_end":461,"column_start":18,"column_end":36},"name":"with_offset_second","qualname":"<Parsed>::with_offset_second","value":"pub const fn with_offset_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296323,"byte_end":296369,"line_start":456,"line_end":456,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_second_signed()` instead\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296374,"byte_end":296485,"line_start":457,"line_end":460,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296776,"byte_end":296801,"line_start":470,"line_end":470,"column_start":18,"column_end":43},"name":"with_offset_second_signed","qualname":"<Parsed>::with_offset_second_signed","value":"pub const fn with_offset_second_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component and return `self`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296702,"byte_end":296758,"line_start":469,"line_end":469,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304639,"byte_end":304656,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":3520},{"krate":0,"index":3521}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304532,"byte_end":304559,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305427,"byte_end":305430,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304849,"byte_end":304919,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304924,"byte_end":304927,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304932,"byte_end":305009,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305014,"byte_end":305017,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305022,"byte_end":305100,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305105,"byte_end":305184,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305189,"byte_end":305192,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305197,"byte_end":305208,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305213,"byte_end":305267,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305272,"byte_end":305321,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305326,"byte_end":305400,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305405,"byte_end":305412,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306088,"byte_end":306091,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305477,"byte_end":305546,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305551,"byte_end":305554,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305559,"byte_end":305636,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305641,"byte_end":305644,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305649,"byte_end":305736,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305741,"byte_end":305829,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305834,"byte_end":305837,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305842,"byte_end":305853,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305858,"byte_end":305912,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305917,"byte_end":305966,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305971,"byte_end":306061,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306066,"byte_end":306073,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306481,"byte_end":306484,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"pub const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306138,"byte_end":306215,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306220,"byte_end":306223,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306228,"byte_end":306239,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306244,"byte_end":306312,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306317,"byte_end":306332,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306337,"byte_end":306400,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306405,"byte_end":306440,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306445,"byte_end":306451,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306456,"byte_end":306463,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306823,"byte_end":306827,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306591,"byte_end":306649,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306654,"byte_end":306657,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306662,"byte_end":306673,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306678,"byte_end":306719,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306724,"byte_end":306793,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306798,"byte_end":306805,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307087,"byte_end":307091,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306873,"byte_end":306931,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306936,"byte_end":306939,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306944,"byte_end":306955,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306960,"byte_end":307001,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307006,"byte_end":307069,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307504,"byte_end":307508,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307200,"byte_end":307229,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307234,"byte_end":307237,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307242,"byte_end":307253,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307258,"byte_end":307291,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307296,"byte_end":307352,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307357,"byte_end":307413,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307418,"byte_end":307474,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307479,"byte_end":307486,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307836,"byte_end":307841,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307560,"byte_end":307590,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307595,"byte_end":307598,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307603,"byte_end":307614,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307619,"byte_end":307661,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307666,"byte_end":307733,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307738,"byte_end":307806,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307811,"byte_end":307818,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308204,"byte_end":308207,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307896,"byte_end":307924,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307929,"byte_end":307932,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307937,"byte_end":307997,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308002,"byte_end":308005,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308010,"byte_end":308021,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308026,"byte_end":308059,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308064,"byte_end":308116,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308121,"byte_end":308174,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308179,"byte_end":308186,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308604,"byte_end":308611,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308257,"byte_end":308285,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308290,"byte_end":308293,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308298,"byte_end":308388,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308393,"byte_end":308396,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308401,"byte_end":308412,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308417,"byte_end":308450,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308455,"byte_end":308511,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308516,"byte_end":308574,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308579,"byte_end":308586,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309172,"byte_end":309180,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308666,"byte_end":308694,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308699,"byte_end":308702,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308707,"byte_end":308767,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308772,"byte_end":308775,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308780,"byte_end":308791,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308796,"byte_end":308829,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308834,"byte_end":308891,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308896,"byte_end":308954,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308959,"byte_end":309016,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309021,"byte_end":309079,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309084,"byte_end":309142,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309147,"byte_end":309154,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309749,"byte_end":309766,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309235,"byte_end":309299,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309304,"byte_end":309307,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309312,"byte_end":309372,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309377,"byte_end":309380,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309385,"byte_end":309396,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309401,"byte_end":309434,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309439,"byte_end":309505,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309510,"byte_end":309576,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309581,"byte_end":309648,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309653,"byte_end":309719,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309724,"byte_end":309731,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310344,"byte_end":310361,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309830,"byte_end":309894,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309899,"byte_end":309902,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309907,"byte_end":309967,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309972,"byte_end":309975,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309980,"byte_end":309991,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309996,"byte_end":310029,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310034,"byte_end":310100,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310105,"byte_end":310171,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310176,"byte_end":310243,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310248,"byte_end":310314,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310319,"byte_end":310326,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310687,"byte_end":310703,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310425,"byte_end":310458,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310463,"byte_end":310466,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310471,"byte_end":310482,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310487,"byte_end":310529,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310534,"byte_end":310549,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310554,"byte_end":310608,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310613,"byte_end":310646,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310651,"byte_end":310657,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310662,"byte_end":310669,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310989,"byte_end":311004,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310780,"byte_end":310820,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310825,"byte_end":310828,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310833,"byte_end":310844,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310849,"byte_end":310882,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310887,"byte_end":310959,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310964,"byte_end":310971,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311841,"byte_end":311857,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311074,"byte_end":311126,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311131,"byte_end":311134,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311139,"byte_end":311150,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311155,"byte_end":311202,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311207,"byte_end":311222,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311227,"byte_end":311281,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311286,"byte_end":311312,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311317,"byte_end":311323,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311328,"byte_end":311343,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311348,"byte_end":311402,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311407,"byte_end":311433,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311438,"byte_end":311444,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311449,"byte_end":311464,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311469,"byte_end":311523,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311528,"byte_end":311556,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311561,"byte_end":311567,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311572,"byte_end":311587,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311592,"byte_end":311646,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311651,"byte_end":311679,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311684,"byte_end":311690,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311695,"byte_end":311710,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311715,"byte_end":311769,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311774,"byte_end":311800,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311805,"byte_end":311811,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311816,"byte_end":311823,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312863,"byte_end":312870,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311936,"byte_end":311956,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311961,"byte_end":311964,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311969,"byte_end":311980,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311985,"byte_end":312032,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312037,"byte_end":312099,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312104,"byte_end":312165,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312170,"byte_end":312231,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312236,"byte_end":312297,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312302,"byte_end":312366,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312371,"byte_end":312434,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312439,"byte_end":312500,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312505,"byte_end":312568,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312573,"byte_end":312634,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312639,"byte_end":312701,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312706,"byte_end":312767,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312772,"byte_end":312833,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312838,"byte_end":312845,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313615,"byte_end":313628,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312929,"byte_end":313022,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313027,"byte_end":313030,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313035,"byte_end":313129,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313134,"byte_end":313230,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313235,"byte_end":313238,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313243,"byte_end":313254,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313259,"byte_end":313292,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313297,"byte_end":313360,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313365,"byte_end":313435,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313440,"byte_end":313510,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313515,"byte_end":313585,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313590,"byte_end":313597,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314028,"byte_end":314034,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313747,"byte_end":313790,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313795,"byte_end":313798,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313803,"byte_end":313814,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313819,"byte_end":313852,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313857,"byte_end":313923,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313928,"byte_end":313998,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314003,"byte_end":314010,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314449,"byte_end":314461,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314097,"byte_end":314153,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314158,"byte_end":314161,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314166,"byte_end":314177,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314182,"byte_end":314215,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314220,"byte_end":314295,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314300,"byte_end":314315,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314320,"byte_end":314378,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314383,"byte_end":314408,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314413,"byte_end":314419,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314424,"byte_end":314431,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314895,"byte_end":314907,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314535,"byte_end":314591,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314596,"byte_end":314599,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314604,"byte_end":314615,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314620,"byte_end":314653,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314658,"byte_end":314733,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314738,"byte_end":314753,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314758,"byte_end":314820,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314825,"byte_end":314854,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314859,"byte_end":314865,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314870,"byte_end":314877,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315346,"byte_end":315357,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314981,"byte_end":315036,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315041,"byte_end":315044,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315049,"byte_end":315060,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315065,"byte_end":315098,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315103,"byte_end":315177,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315182,"byte_end":315197,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315202,"byte_end":315267,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315272,"byte_end":315305,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315310,"byte_end":315316,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315321,"byte_end":315328,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315738,"byte_end":315742,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315430,"byte_end":315453,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315458,"byte_end":315461,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315466,"byte_end":315525,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315530,"byte_end":315533,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315538,"byte_end":315549,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315554,"byte_end":315587,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315592,"byte_end":315645,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315650,"byte_end":315708,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315713,"byte_end":315720,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316117,"byte_end":316123,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315793,"byte_end":315828,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315833,"byte_end":315836,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315841,"byte_end":315900,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315905,"byte_end":315908,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315913,"byte_end":315924,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315929,"byte_end":315962,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315967,"byte_end":316022,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316027,"byte_end":316087,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316092,"byte_end":316099,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316502,"byte_end":316508,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316176,"byte_end":316213,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316218,"byte_end":316221,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316226,"byte_end":316285,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316290,"byte_end":316293,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316298,"byte_end":316309,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316314,"byte_end":316347,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316352,"byte_end":316407,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316412,"byte_end":316472,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316477,"byte_end":316484,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316911,"byte_end":316922,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316561,"byte_end":316604,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316609,"byte_end":316612,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316617,"byte_end":316679,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316684,"byte_end":316687,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316692,"byte_end":316703,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316708,"byte_end":316741,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316746,"byte_end":316806,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316811,"byte_end":316881,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316886,"byte_end":316893,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317377,"byte_end":317388,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316981,"byte_end":317024,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317029,"byte_end":317032,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317037,"byte_end":317103,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317108,"byte_end":317111,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317116,"byte_end":317127,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317132,"byte_end":317165,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317170,"byte_end":317230,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317235,"byte_end":317250,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317255,"byte_end":317316,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317321,"byte_end":317336,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317341,"byte_end":317347,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317352,"byte_end":317359,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317853,"byte_end":317863,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317447,"byte_end":317489,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317494,"byte_end":317497,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317502,"byte_end":317572,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317577,"byte_end":317580,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317585,"byte_end":317596,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317601,"byte_end":317634,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317639,"byte_end":317698,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317703,"byte_end":317718,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317723,"byte_end":317787,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317792,"byte_end":317812,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317817,"byte_end":317823,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317828,"byte_end":317835,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318574,"byte_end":318587,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"pub const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317980,"byte_end":318066,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318071,"byte_end":318119,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318124,"byte_end":318127,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318132,"byte_end":318143,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318148,"byte_end":318191,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318196,"byte_end":318211,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318216,"byte_end":318250,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318255,"byte_end":318295,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318300,"byte_end":318330,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318335,"byte_end":318357,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318362,"byte_end":318368,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318373,"byte_end":318388,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318393,"byte_end":318427,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318432,"byte_end":318471,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318476,"byte_end":318506,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318511,"byte_end":318533,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318538,"byte_end":318544,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318549,"byte_end":318556,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319089,"byte_end":319099,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"pub const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318753,"byte_end":318841,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318846,"byte_end":318869,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318874,"byte_end":318877,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318882,"byte_end":318893,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318898,"byte_end":318931,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318936,"byte_end":318951,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318956,"byte_end":319021,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319026,"byte_end":319048,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319053,"byte_end":319059,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319064,"byte_end":319071,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319893,"byte_end":319904,"line_start":473,"line_end":473,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319305,"byte_end":319378,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319383,"byte_end":319386,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319391,"byte_end":319398,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319403,"byte_end":319450,"line_start":460,"line_end":460,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319455,"byte_end":319488,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319493,"byte_end":319533,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319538,"byte_end":319594,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319599,"byte_end":319602,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319607,"byte_end":319647,"line_start":465,"line_end":465,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319652,"byte_end":319705,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319710,"byte_end":319713,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319718,"byte_end":319733,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319738,"byte_end":319802,"line_start":469,"line_end":469,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319807,"byte_end":319852,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319857,"byte_end":319863,"line_start":471,"line_end":471,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319868,"byte_end":319875,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321014,"byte_end":321025,"line_start":503,"line_end":503,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320426,"byte_end":320499,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320504,"byte_end":320507,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320512,"byte_end":320519,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320524,"byte_end":320571,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320576,"byte_end":320609,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320614,"byte_end":320654,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320659,"byte_end":320712,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320717,"byte_end":320720,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320725,"byte_end":320765,"line_start":495,"line_end":495,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320770,"byte_end":320826,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320831,"byte_end":320834,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320839,"byte_end":320854,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320859,"byte_end":320923,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320928,"byte_end":320973,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320978,"byte_end":320984,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320989,"byte_end":320996,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322255,"byte_end":322269,"line_start":539,"line_end":539,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321621,"byte_end":321682,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321687,"byte_end":321690,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321695,"byte_end":321702,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321707,"byte_end":321767,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321772,"byte_end":321805,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321810,"byte_end":321825,"line_start":524,"line_end":524,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321830,"byte_end":321889,"line_start":525,"line_end":525,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321894,"byte_end":321924,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321929,"byte_end":321935,"line_start":527,"line_end":527,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321940,"byte_end":321943,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321948,"byte_end":321963,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321968,"byte_end":322024,"line_start":530,"line_end":530,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322029,"byte_end":322059,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322064,"byte_end":322070,"line_start":532,"line_end":532,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322075,"byte_end":322078,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322083,"byte_end":322098,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322103,"byte_end":322170,"line_start":535,"line_end":535,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322175,"byte_end":322214,"line_start":536,"line_end":536,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322219,"byte_end":322225,"line_start":537,"line_end":537,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322230,"byte_end":322237,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323147,"byte_end":323161,"line_start":569,"line_end":569,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322513,"byte_end":322574,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322579,"byte_end":322582,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322587,"byte_end":322594,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322599,"byte_end":322659,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322664,"byte_end":322697,"line_start":553,"line_end":553,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322702,"byte_end":322717,"line_start":554,"line_end":554,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322722,"byte_end":322778,"line_start":555,"line_end":555,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322783,"byte_end":322813,"line_start":556,"line_end":556,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322818,"byte_end":322824,"line_start":557,"line_end":557,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322829,"byte_end":322832,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322837,"byte_end":322852,"line_start":559,"line_end":559,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322857,"byte_end":322916,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322921,"byte_end":322951,"line_start":561,"line_end":561,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322956,"byte_end":322962,"line_start":562,"line_end":562,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322967,"byte_end":322970,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322975,"byte_end":322990,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322995,"byte_end":323062,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323067,"byte_end":323106,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323111,"byte_end":323117,"line_start":567,"line_end":567,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323122,"byte_end":323129,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323914,"byte_end":323926,"line_start":594,"line_end":594,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323553,"byte_end":323595,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323600,"byte_end":323603,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323608,"byte_end":323619,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323624,"byte_end":323665,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323670,"byte_end":323685,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323690,"byte_end":323752,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323757,"byte_end":323791,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323796,"byte_end":323802,"line_start":591,"line_end":591,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323807,"byte_end":323814,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323819,"byte_end":323896,"line_start":593,"line_end":593,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324368,"byte_end":324380,"line_start":608,"line_end":608,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324000,"byte_end":324042,"line_start":598,"line_end":598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324047,"byte_end":324050,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324055,"byte_end":324066,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324071,"byte_end":324112,"line_start":601,"line_end":601,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324117,"byte_end":324132,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324137,"byte_end":324205,"line_start":603,"line_end":603,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324210,"byte_end":324245,"line_start":604,"line_end":604,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324250,"byte_end":324256,"line_start":605,"line_end":605,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324261,"byte_end":324268,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324273,"byte_end":324350,"line_start":607,"line_end":607,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325077,"byte_end":325089,"line_start":624,"line_end":624,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324454,"byte_end":324512,"line_start":612,"line_end":612,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324517,"byte_end":324520,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324525,"byte_end":324536,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324541,"byte_end":324574,"line_start":615,"line_end":615,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324579,"byte_end":324594,"line_start":616,"line_end":616,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324599,"byte_end":324658,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324663,"byte_end":324706,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324711,"byte_end":324717,"line_start":619,"line_end":619,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324722,"byte_end":324842,"line_start":620,"line_end":620,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324847,"byte_end":324965,"line_start":621,"line_end":621,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324970,"byte_end":324977,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324982,"byte_end":325059,"line_start":623,"line_end":623,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325748,"byte_end":325761,"line_start":640,"line_end":640,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325233,"byte_end":325267,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325272,"byte_end":325275,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325280,"byte_end":325291,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325296,"byte_end":325329,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325334,"byte_end":325356,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325361,"byte_end":325376,"line_start":633,"line_end":633,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325381,"byte_end":325451,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325456,"byte_end":325499,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325504,"byte_end":325510,"line_start":636,"line_end":636,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325515,"byte_end":325636,"line_start":637,"line_end":637,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325641,"byte_end":325648,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325653,"byte_end":325730,"line_start":639,"line_end":639,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326465,"byte_end":326476,"line_start":656,"line_end":656,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325910,"byte_end":325943,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325948,"byte_end":325951,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325956,"byte_end":325967,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325972,"byte_end":326005,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326010,"byte_end":326025,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326030,"byte_end":326085,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326090,"byte_end":326133,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326138,"byte_end":326144,"line_start":651,"line_end":651,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326149,"byte_end":326242,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326247,"byte_end":326353,"line_start":653,"line_end":653,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326358,"byte_end":326365,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326370,"byte_end":326447,"line_start":655,"line_end":655,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327103,"byte_end":327115,"line_start":671,"line_end":671,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326616,"byte_end":326643,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326648,"byte_end":326651,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326656,"byte_end":326667,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326672,"byte_end":326705,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326710,"byte_end":326725,"line_start":664,"line_end":664,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326730,"byte_end":326801,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326806,"byte_end":326864,"line_start":666,"line_end":666,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326869,"byte_end":326875,"line_start":667,"line_end":667,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326880,"byte_end":326991,"line_start":668,"line_end":668,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326996,"byte_end":327003,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327008,"byte_end":327085,"line_start":670,"line_end":670,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327792,"byte_end":327806,"line_start":688,"line_end":688,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327286,"byte_end":327326,"line_start":677,"line_end":677,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327331,"byte_end":327334,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327339,"byte_end":327350,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327355,"byte_end":327388,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327393,"byte_end":327408,"line_start":681,"line_end":681,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327413,"byte_end":327486,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327491,"byte_end":327549,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327554,"byte_end":327560,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327565,"byte_end":327680,"line_start":685,"line_end":685,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327685,"byte_end":327692,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327697,"byte_end":327774,"line_start":687,"line_end":687,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328491,"byte_end":328505,"line_start":705,"line_end":705,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327983,"byte_end":328025,"line_start":694,"line_end":694,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328030,"byte_end":328033,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328038,"byte_end":328049,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328054,"byte_end":328087,"line_start":697,"line_end":697,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328092,"byte_end":328107,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328112,"byte_end":328185,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328190,"byte_end":328248,"line_start":700,"line_end":700,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328253,"byte_end":328259,"line_start":701,"line_end":701,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328264,"byte_end":328379,"line_start":702,"line_end":702,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328384,"byte_end":328391,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328396,"byte_end":328473,"line_start":704,"line_end":704,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329208,"byte_end":329227,"line_start":722,"line_end":722,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328682,"byte_end":328729,"line_start":711,"line_end":711,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328734,"byte_end":328737,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328742,"byte_end":328753,"line_start":713,"line_end":713,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328758,"byte_end":328791,"line_start":714,"line_end":714,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328796,"byte_end":328811,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328816,"byte_end":328894,"line_start":716,"line_end":716,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328899,"byte_end":328949,"line_start":717,"line_end":717,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328954,"byte_end":328960,"line_start":718,"line_end":718,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328965,"byte_end":329096,"line_start":719,"line_end":719,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329101,"byte_end":329108,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329113,"byte_end":329190,"line_start":721,"line_end":721,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329985,"byte_end":330004,"line_start":742,"line_end":742,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329443,"byte_end":329490,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329495,"byte_end":329498,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329503,"byte_end":329514,"line_start":733,"line_end":733,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329519,"byte_end":329552,"line_start":734,"line_end":734,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329557,"byte_end":329572,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329577,"byte_end":329659,"line_start":736,"line_end":736,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329664,"byte_end":329718,"line_start":737,"line_end":737,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329723,"byte_end":329729,"line_start":738,"line_end":738,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329734,"byte_end":329873,"line_start":739,"line_end":739,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329878,"byte_end":329885,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329890,"byte_end":329967,"line_start":741,"line_end":741,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330774,"byte_end":330792,"line_start":762,"line_end":762,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330220,"byte_end":330266,"line_start":751,"line_end":751,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330271,"byte_end":330274,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330279,"byte_end":330290,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330295,"byte_end":330328,"line_start":754,"line_end":754,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330333,"byte_end":330348,"line_start":755,"line_end":755,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330353,"byte_end":330438,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330443,"byte_end":330501,"line_start":757,"line_end":757,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330506,"byte_end":330512,"line_start":758,"line_end":758,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330517,"byte_end":330662,"line_start":759,"line_end":759,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330667,"byte_end":330674,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":330679,"byte_end":330756,"line_start":761,"line_end":761,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332774,"byte_end":332785,"line_start":814,"line_end":814,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332652,"byte_end":332713,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332718,"byte_end":332762,"line_start":813,"line_end":813,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333487,"byte_end":333493,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333010,"byte_end":333071,"line_start":822,"line_end":822,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333076,"byte_end":333120,"line_start":823,"line_end":823,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333125,"byte_end":333128,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333133,"byte_end":333144,"line_start":825,"line_end":825,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333149,"byte_end":333204,"line_start":826,"line_end":826,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333209,"byte_end":333302,"line_start":827,"line_end":827,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333307,"byte_end":333322,"line_start":828,"line_end":828,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333327,"byte_end":333383,"line_start":829,"line_end":829,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333388,"byte_end":333417,"line_start":830,"line_end":830,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333422,"byte_end":333428,"line_start":831,"line_end":831,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333433,"byte_end":333463,"line_start":832,"line_end":832,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333468,"byte_end":333475,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334228,"byte_end":334233,"line_start":853,"line_end":853,"column_start":12,"column_end":17},"name":"parse","qualname":"<PrimitiveDateTime>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `PrimitiveDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `PrimitiveDateTime` from the input using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333701,"byte_end":333774,"line_start":841,"line_end":841,"column_start":5,"column_end":78}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333779,"byte_end":333823,"line_start":842,"line_end":842,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333828,"byte_end":333831,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333836,"byte_end":333847,"line_start":844,"line_end":844,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, PrimitiveDateTime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333852,"byte_end":333926,"line_start":845,"line_end":845,"column_start":5,"column_end":79}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333931,"byte_end":334024,"line_start":846,"line_end":846,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334029,"byte_end":334044,"line_start":847,"line_end":847,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::parse(\"2020-01-02 03:04:05\", &format)?,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334049,"byte_end":334115,"line_start":848,"line_end":848,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-02 03:04:05)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334120,"byte_end":334158,"line_start":849,"line_end":849,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334163,"byte_end":334169,"line_start":850,"line_end":850,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334174,"byte_end":334204,"line_start":851,"line_end":851,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334209,"byte_end":334216,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341801,"byte_end":341805,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341444,"byte_end":341505,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341506,"byte_end":341509,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341510,"byte_end":341607,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341608,"byte_end":341642,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341643,"byte_end":341646,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341647,"byte_end":341728,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342691,"byte_end":342699,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342504,"byte_end":342549,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342554,"byte_end":342557,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342562,"byte_end":342573,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342578,"byte_end":342615,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342620,"byte_end":342664,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342669,"byte_end":342676,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343228,"byte_end":343254,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"pub const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343151,"byte_end":343191,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344008,"byte_end":344016,"line_start":106,"line_end":106,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"pub const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343513,"byte_end":343578,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343583,"byte_end":343586,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343591,"byte_end":343602,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343607,"byte_end":343628,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343633,"byte_end":343678,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343683,"byte_end":343690,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343695,"byte_end":343698,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343703,"byte_end":343714,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343719,"byte_end":343740,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343745,"byte_end":343818,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343823,"byte_end":343898,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343903,"byte_end":343978,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343983,"byte_end":343990,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344968,"byte_end":344982,"line_start":127,"line_end":127,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"pub const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344324,"byte_end":344402,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344407,"byte_end":344410,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344415,"byte_end":344426,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344431,"byte_end":344452,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344457,"byte_end":344511,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344516,"byte_end":344523,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344528,"byte_end":344531,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344536,"byte_end":344547,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344552,"byte_end":344573,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344578,"byte_end":344660,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344665,"byte_end":344749,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344754,"byte_end":344838,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344843,"byte_end":344938,"line_start":125,"line_end":125,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344943,"byte_end":344950,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346144,"byte_end":346158,"line_start":159,"line_end":159,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"pub const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345492,"byte_end":345570,"line_start":145,"line_end":145,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345575,"byte_end":345578,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345583,"byte_end":345594,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345599,"byte_end":345620,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345625,"byte_end":345679,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345684,"byte_end":345691,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345696,"byte_end":345699,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345704,"byte_end":345715,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345720,"byte_end":345741,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345746,"byte_end":345828,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345833,"byte_end":345917,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345922,"byte_end":346006,"line_start":156,"line_end":156,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346011,"byte_end":346114,"line_start":157,"line_end":157,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346119,"byte_end":346126,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347314,"byte_end":347327,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"pub const fn from_hms_nano(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346661,"byte_end":346738,"line_start":177,"line_end":177,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346743,"byte_end":346746,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346751,"byte_end":346762,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346767,"byte_end":346788,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346793,"byte_end":346846,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346851,"byte_end":346858,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346863,"byte_end":346866,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346871,"byte_end":346882,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346887,"byte_end":346908,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346913,"byte_end":346994,"line_start":186,"line_end":186,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346999,"byte_end":347082,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347087,"byte_end":347170,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347175,"byte_end":347284,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347289,"byte_end":347296,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348087,"byte_end":348093,"line_start":215,"line_end":215,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347840,"byte_end":347883,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347888,"byte_end":347891,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347896,"byte_end":347907,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347912,"byte_end":347941,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":347946,"byte_end":347997,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348002,"byte_end":348057,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348062,"byte_end":348069,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348459,"byte_end":348471,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348175,"byte_end":348231,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348236,"byte_end":348239,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348244,"byte_end":348255,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348260,"byte_end":348289,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348294,"byte_end":348354,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348359,"byte_end":348429,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348434,"byte_end":348441,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348981,"byte_end":348993,"line_start":245,"line_end":245,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348655,"byte_end":348711,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348716,"byte_end":348719,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348724,"byte_end":348735,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348740,"byte_end":348769,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348774,"byte_end":348834,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348839,"byte_end":348854,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348859,"byte_end":348906,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348911,"byte_end":348940,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348945,"byte_end":348951,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":348956,"byte_end":348963,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349436,"byte_end":349447,"line_start":259,"line_end":259,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349105,"byte_end":349160,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349165,"byte_end":349168,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349173,"byte_end":349184,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349189,"byte_end":349218,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349223,"byte_end":349282,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349287,"byte_end":349302,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349307,"byte_end":349357,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349362,"byte_end":349395,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349400,"byte_end":349406,"line_start":257,"line_end":257,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349411,"byte_end":349418,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349828,"byte_end":349832,"line_start":272,"line_end":272,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349551,"byte_end":349574,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349579,"byte_end":349582,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349587,"byte_end":349646,"line_start":265,"line_end":265,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349651,"byte_end":349654,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349659,"byte_end":349670,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349675,"byte_end":349704,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349709,"byte_end":349750,"line_start":269,"line_end":269,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349755,"byte_end":349798,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349803,"byte_end":349810,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350169,"byte_end":350175,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349876,"byte_end":349911,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349916,"byte_end":349919,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349924,"byte_end":349983,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349988,"byte_end":349991,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":349996,"byte_end":350007,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350012,"byte_end":350041,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350046,"byte_end":350089,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350094,"byte_end":350139,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350144,"byte_end":350151,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350516,"byte_end":350522,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350221,"byte_end":350258,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350263,"byte_end":350266,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350271,"byte_end":350330,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350335,"byte_end":350338,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350343,"byte_end":350354,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350359,"byte_end":350388,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350393,"byte_end":350436,"line_start":295,"line_end":295,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350441,"byte_end":350486,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350491,"byte_end":350498,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350884,"byte_end":350895,"line_start":311,"line_end":311,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350568,"byte_end":350611,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350616,"byte_end":350619,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350624,"byte_end":350686,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350691,"byte_end":350694,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350699,"byte_end":350710,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350715,"byte_end":350744,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350749,"byte_end":350794,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350799,"byte_end":350854,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350859,"byte_end":350866,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351293,"byte_end":351304,"line_start":324,"line_end":324,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":350965,"byte_end":351008,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351013,"byte_end":351016,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351021,"byte_end":351087,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351092,"byte_end":351095,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351100,"byte_end":351111,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351116,"byte_end":351145,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351150,"byte_end":351195,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351200,"byte_end":351263,"line_start":322,"line_end":322,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351268,"byte_end":351275,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351700,"byte_end":351710,"line_start":337,"line_end":337,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351363,"byte_end":351405,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351410,"byte_end":351413,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351418,"byte_end":351488,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351493,"byte_end":351496,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351501,"byte_end":351512,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351517,"byte_end":351546,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351551,"byte_end":351595,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351600,"byte_end":351670,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351675,"byte_end":351682,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356802,"byte_end":356814,"line_start":464,"line_end":464,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356389,"byte_end":356416,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356421,"byte_end":356424,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356429,"byte_end":356440,"line_start":455,"line_end":455,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356445,"byte_end":356474,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356479,"byte_end":356494,"line_start":457,"line_end":457,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356499,"byte_end":356551,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356556,"byte_end":356595,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356600,"byte_end":356606,"line_start":460,"line_end":460,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356611,"byte_end":356703,"line_start":461,"line_end":461,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356708,"byte_end":356715,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356720,"byte_end":356784,"line_start":463,"line_end":463,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357517,"byte_end":357531,"line_start":485,"line_end":485,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357085,"byte_end":357125,"line_start":474,"line_end":474,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357130,"byte_end":357133,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357138,"byte_end":357149,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357154,"byte_end":357183,"line_start":477,"line_end":477,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357188,"byte_end":357203,"line_start":478,"line_end":478,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357208,"byte_end":357262,"line_start":479,"line_end":479,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357267,"byte_end":357306,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357311,"byte_end":357317,"line_start":481,"line_end":481,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357322,"byte_end":357418,"line_start":482,"line_end":482,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357423,"byte_end":357430,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357435,"byte_end":357499,"line_start":484,"line_end":484,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358240,"byte_end":358254,"line_start":506,"line_end":506,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357806,"byte_end":357848,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357853,"byte_end":357856,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357861,"byte_end":357872,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357877,"byte_end":357906,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357911,"byte_end":357926,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357931,"byte_end":357985,"line_start":500,"line_end":500,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357990,"byte_end":358029,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358034,"byte_end":358040,"line_start":502,"line_end":502,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358045,"byte_end":358141,"line_start":503,"line_end":503,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358146,"byte_end":358153,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358158,"byte_end":358222,"line_start":505,"line_end":505,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358981,"byte_end":359000,"line_start":527,"line_end":527,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358529,"byte_end":358576,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358581,"byte_end":358584,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358589,"byte_end":358600,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358605,"byte_end":358634,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358639,"byte_end":358654,"line_start":520,"line_end":520,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358659,"byte_end":358718,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358723,"byte_end":358754,"line_start":522,"line_end":522,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358759,"byte_end":358765,"line_start":523,"line_end":523,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358770,"byte_end":358882,"line_start":524,"line_end":524,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358887,"byte_end":358894,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358899,"byte_end":358963,"line_start":526,"line_end":526,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359798,"byte_end":359817,"line_start":551,"line_end":551,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359330,"byte_end":359377,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359382,"byte_end":359385,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359390,"byte_end":359401,"line_start":542,"line_end":542,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359406,"byte_end":359435,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359440,"byte_end":359455,"line_start":544,"line_end":544,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359460,"byte_end":359523,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359528,"byte_end":359563,"line_start":546,"line_end":546,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359568,"byte_end":359574,"line_start":547,"line_end":547,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359579,"byte_end":359699,"line_start":548,"line_end":548,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359704,"byte_end":359711,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359716,"byte_end":359780,"line_start":550,"line_end":550,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360619,"byte_end":360637,"line_start":575,"line_end":575,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360139,"byte_end":360185,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360190,"byte_end":360193,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360198,"byte_end":360209,"line_start":566,"line_end":566,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360214,"byte_end":360243,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360248,"byte_end":360263,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360268,"byte_end":360334,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360339,"byte_end":360378,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360383,"byte_end":360389,"line_start":571,"line_end":571,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360394,"byte_end":360520,"line_start":572,"line_end":572,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360525,"byte_end":360532,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360537,"byte_end":360601,"line_start":574,"line_end":574,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361137,"byte_end":361148,"line_start":591,"line_end":591,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361036,"byte_end":361125,"line_start":590,"line_end":590,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361732,"byte_end":361738,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361364,"byte_end":361453,"line_start":599,"line_end":599,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361458,"byte_end":361461,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361466,"byte_end":361477,"line_start":601,"line_end":601,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361482,"byte_end":361533,"line_start":602,"line_end":602,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361538,"byte_end":361610,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361615,"byte_end":361673,"line_start":604,"line_end":604,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361678,"byte_end":361708,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361713,"byte_end":361720,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362347,"byte_end":362352,"line_start":626,"line_end":626,"column_start":12,"column_end":17},"name":"parse","qualname":"<Time>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Time` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Time` from the input using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361947,"byte_end":362007,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362012,"byte_end":362056,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362061,"byte_end":362064,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362069,"byte_end":362080,"line_start":620,"line_end":620,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time, Time};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362085,"byte_end":362142,"line_start":621,"line_end":621,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362147,"byte_end":362219,"line_start":622,"line_end":622,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Time::parse(\"12:00:00\", &format)?, time!(12:00));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362224,"byte_end":362288,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362293,"byte_end":362323,"line_start":624,"line_end":624,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362328,"byte_end":362335,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367398,"byte_end":367407,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3602}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367104,"byte_end":367127,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367128,"byte_end":367131,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367132,"byte_end":367229,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367230,"byte_end":367267,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367819,"byte_end":367822,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367639,"byte_end":367669,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367674,"byte_end":367677,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367682,"byte_end":367693,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367698,"byte_end":367742,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367747,"byte_end":367792,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367797,"byte_end":367804,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368148,"byte_end":368168,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"pub const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367901,"byte_end":367997,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368002,"byte_end":368097,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368102,"byte_end":368111,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368828,"byte_end":368836,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"pub const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368313,"byte_end":368405,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368410,"byte_end":368423,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368428,"byte_end":368431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368436,"byte_end":368530,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368535,"byte_end":368564,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368569,"byte_end":368572,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368577,"byte_end":368588,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368593,"byte_end":368619,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368624,"byte_end":368690,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368695,"byte_end":368763,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368768,"byte_end":368798,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368803,"byte_end":368810,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369794,"byte_end":369812,"line_start":97,"line_end":97,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"pub const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369513,"byte_end":369595,"line_start":90,"line_end":90,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369600,"byte_end":369603,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369608,"byte_end":369619,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369624,"byte_end":369650,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369655,"byte_end":369729,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369734,"byte_end":369764,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":369769,"byte_end":369776,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370560,"byte_end":370566,"line_start":117,"line_end":117,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"pub const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370154,"byte_end":370248,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370253,"byte_end":370349,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370354,"byte_end":370357,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370362,"byte_end":370373,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370378,"byte_end":370409,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370414,"byte_end":370468,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370473,"byte_end":370530,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370535,"byte_end":370542,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370996,"byte_end":371007,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"pub const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370651,"byte_end":370741,"line_start":121,"line_end":121,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370746,"byte_end":370793,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370798,"byte_end":370801,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370806,"byte_end":370817,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370822,"byte_end":370853,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370858,"byte_end":370909,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370914,"byte_end":370966,"line_start":127,"line_end":127,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370971,"byte_end":370978,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371405,"byte_end":371418,"line_start":141,"line_end":141,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371052,"byte_end":371144,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371149,"byte_end":371196,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371201,"byte_end":371204,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371209,"byte_end":371220,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371225,"byte_end":371256,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371261,"byte_end":371315,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371320,"byte_end":371375,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371380,"byte_end":371387,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371865,"byte_end":371882,"line_start":153,"line_end":153,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"pub const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371498,"byte_end":371585,"line_start":145,"line_end":145,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371590,"byte_end":371650,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371655,"byte_end":371658,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371663,"byte_end":371674,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371679,"byte_end":371710,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371715,"byte_end":371772,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371777,"byte_end":371835,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371840,"byte_end":371847,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372418,"byte_end":372431,"line_start":167,"line_end":167,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371929,"byte_end":372021,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372026,"byte_end":372073,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372078,"byte_end":372081,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372086,"byte_end":372097,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372102,"byte_end":372133,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372138,"byte_end":372194,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372199,"byte_end":372256,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372261,"byte_end":372268,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372914,"byte_end":372933,"line_start":179,"line_end":179,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"pub const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372541,"byte_end":372630,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372635,"byte_end":372695,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372700,"byte_end":372703,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372708,"byte_end":372719,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372724,"byte_end":372755,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372760,"byte_end":372819,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372824,"byte_end":372884,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372889,"byte_end":372896,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373299,"byte_end":373305,"line_start":194,"line_end":194,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"pub const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373030,"byte_end":373069,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373074,"byte_end":373077,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373082,"byte_end":373085,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373090,"byte_end":373101,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373106,"byte_end":373137,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373142,"byte_end":373183,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373188,"byte_end":373229,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373234,"byte_end":373269,"line_start":192,"line_end":192,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373274,"byte_end":373281,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373688,"byte_end":373699,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373399,"byte_end":373451,"line_start":198,"line_end":198,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373456,"byte_end":373459,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373464,"byte_end":373475,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373480,"byte_end":373511,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373516,"byte_end":373561,"line_start":202,"line_end":202,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373566,"byte_end":373612,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373617,"byte_end":373658,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373663,"byte_end":373670,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374079,"byte_end":374090,"line_start":218,"line_end":218,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373790,"byte_end":373842,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373847,"byte_end":373850,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373855,"byte_end":373866,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373871,"byte_end":373902,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373907,"byte_end":373953,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":373958,"byte_end":374003,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374008,"byte_end":374049,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374054,"byte_end":374061,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374663,"byte_end":374678,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"local_offset_at","qualname":"<UtcOffset>::local_offset_at","value":"pub fn local_offset_at(OffsetDateTime)\n-> Result<Self, error::IndeterminateOffset>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to obtain the system's UTC offset at a known moment in time. If the offset cannot be\n determined, an error is returned.","sig":null,"attributes":[{"value":"/ Attempt to obtain the system's UTC offset at a known moment in time. If the offset cannot be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374236,"byte_end":374332,"line_start":224,"line_end":224,"column_start":5,"column_end":101}},{"value":"/ determined, an error is returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374337,"byte_end":374374,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374379,"byte_end":374382,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374387,"byte_end":374398,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, OffsetDateTime};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374403,"byte_end":374447,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/ let local_offset = UtcOffset::local_offset_at(OffsetDateTime::UNIX_EPOCH);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374452,"byte_end":374530,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374535,"byte_end":374551,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ assert!(local_offset.is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374556,"byte_end":374590,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374595,"byte_end":374602,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374607,"byte_end":374614,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374619,"byte_end":374651,"line_start":234,"line_end":234,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375200,"byte_end":375220,"line_start":250,"line_end":250,"column_start":12,"column_end":32},"name":"current_local_offset","qualname":"<UtcOffset>::current_local_offset","value":"pub fn current_local_offset() -> Result<Self, error::IndeterminateOffset>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to obtain the system's current UTC offset. If the offset cannot be determined, an\n error is returned.","sig":null,"attributes":[{"value":"/ Attempt to obtain the system's current UTC offset. If the offset cannot be determined, an","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374830,"byte_end":374923,"line_start":239,"line_end":239,"column_start":5,"column_end":98}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374928,"byte_end":374950,"line_start":240,"line_end":240,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374955,"byte_end":374958,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374963,"byte_end":374974,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":374979,"byte_end":375005,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ let local_offset = UtcOffset::current_local_offset();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375010,"byte_end":375067,"line_start":244,"line_end":244,"column_start":5,"column_end":62}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375072,"byte_end":375088,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/ assert!(local_offset.is_ok());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375093,"byte_end":375127,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375132,"byte_end":375139,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375144,"byte_end":375151,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375156,"byte_end":375188,"line_start":249,"line_end":249,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375607,"byte_end":375618,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375501,"byte_end":375595,"line_start":260,"line_end":260,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376219,"byte_end":376225,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375827,"byte_end":375921,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375926,"byte_end":375929,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375934,"byte_end":375945,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375950,"byte_end":376003,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376008,"byte_end":376100,"line_start":273,"line_end":273,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376105,"byte_end":376160,"line_start":274,"line_end":274,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376165,"byte_end":376195,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376200,"byte_end":376207,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376831,"byte_end":376836,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"parse","qualname":"<UtcOffset>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `UtcOffset` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `UtcOffset` from the input using the provided [format","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376409,"byte_end":376474,"line_start":284,"line_end":284,"column_start":5,"column_end":70}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376479,"byte_end":376523,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376528,"byte_end":376531,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376536,"byte_end":376547,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset, UtcOffset};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376552,"byte_end":376616,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ let format = format_description::parse(\"[offset_hour]:[offset_minute]\")?;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376621,"byte_end":376698,"line_start":289,"line_end":289,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(UtcOffset::parse(\"-03:42\", &format)?, offset!(-3:42));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376703,"byte_end":376772,"line_start":290,"line_end":290,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376777,"byte_end":376807,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376812,"byte_end":376819,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":377542,"byte_end":377564,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378059,"byte_end":378077,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"pub const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":377865,"byte_end":377921,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":377922,"byte_end":377925,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":377926,"byte_end":377937,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":377938,"byte_end":377968,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":377969,"byte_end":378037,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378038,"byte_end":378045,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378776,"byte_end":378788,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"pub const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378351,"byte_end":378440,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378441,"byte_end":378534,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378535,"byte_end":378538,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378539,"byte_end":378550,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378551,"byte_end":378586,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378587,"byte_end":378620,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378621,"byte_end":378653,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378654,"byte_end":378686,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378687,"byte_end":378720,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378721,"byte_end":378754,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378755,"byte_end":378762,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379261,"byte_end":379273,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"pub const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378869,"byte_end":378921,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378922,"byte_end":378925,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378926,"byte_end":378982,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378983,"byte_end":378986,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378987,"byte_end":378998,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":378999,"byte_end":379034,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379035,"byte_end":379075,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379076,"byte_end":379116,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379117,"byte_end":379157,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379158,"byte_end":379198,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379199,"byte_end":379239,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379240,"byte_end":379247,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379604,"byte_end":379617,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"pub const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379344,"byte_end":379388,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379389,"byte_end":379392,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379393,"byte_end":379447,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379448,"byte_end":379451,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379452,"byte_end":379463,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379464,"byte_end":379500,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379501,"byte_end":379541,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379542,"byte_end":379582,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":379583,"byte_end":379590,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380576,"byte_end":380582,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380524,"byte_end":380571,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380640,"byte_end":380647,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380588,"byte_end":380635,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380705,"byte_end":380714,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380653,"byte_end":380700,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380772,"byte_end":380780,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380720,"byte_end":380767,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380838,"byte_end":380844,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380786,"byte_end":380833,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380902,"byte_end":380910,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380850,"byte_end":380897,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380968,"byte_end":380974,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380916,"byte_end":380963,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380510,"byte_end":380517,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"pub enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3625},{"krate":0,"index":3627},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3635}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380263,"byte_end":380284,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380285,"byte_end":380288,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380289,"byte_end":380384,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380385,"byte_end":380449,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381176,"byte_end":381184,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380998,"byte_end":381027,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381032,"byte_end":381035,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381040,"byte_end":381051,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381056,"byte_end":381080,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381085,"byte_end":381146,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381151,"byte_end":381158,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381639,"byte_end":381643,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381469,"byte_end":381494,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381499,"byte_end":381502,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381507,"byte_end":381518,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381523,"byte_end":381547,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381552,"byte_end":381609,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381614,"byte_end":381621,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382164,"byte_end":382182,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"pub const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381928,"byte_end":381979,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381984,"byte_end":381987,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":381992,"byte_end":382003,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382008,"byte_end":382032,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382037,"byte_end":382093,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382098,"byte_end":382105,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382446,"byte_end":382464,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"pub const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382251,"byte_end":382302,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382307,"byte_end":382310,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382315,"byte_end":382326,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382331,"byte_end":382355,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382360,"byte_end":382416,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382421,"byte_end":382428,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382734,"byte_end":382757,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"pub const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382533,"byte_end":382585,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382590,"byte_end":382593,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382598,"byte_end":382609,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382614,"byte_end":382638,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382643,"byte_end":382704,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382709,"byte_end":382716,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":383002,"byte_end":383025,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"pub const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382801,"byte_end":382853,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382858,"byte_end":382861,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382866,"byte_end":382877,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382882,"byte_end":382906,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382911,"byte_end":382972,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":382977,"byte_end":382984,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10942,"byte_end":10948,"line_start":330,"line_end":330,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10850,"byte_end":10932,"line_start":329,"line_end":329,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43646,"byte_end":43650,"line_start":918,"line_end":918,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44527,"byte_end":44531,"line_start":942,"line_end":942,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91464,"byte_end":91470,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92048,"byte_end":92054,"line_start":43,"line_end":43,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92158,"byte_end":92163,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92449,"byte_end":92455,"line_start":61,"line_end":61,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92789,"byte_end":92794,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92970,"byte_end":92976,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":93878,"byte_end":93897,"line_start":13,"line_end":13,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":94094,"byte_end":94113,"line_start":20,"line_end":20,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":94224,"byte_end":94229,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":94414,"byte_end":94433,"line_start":30,"line_end":30,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96130,"byte_end":96135,"line_start":51,"line_end":51,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96407,"byte_end":96431,"line_start":61,"line_end":61,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96719,"byte_end":96743,"line_start":72,"line_end":72,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":97553,"byte_end":97577,"line_start":95,"line_end":95,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97875,"byte_end":97889,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":98066,"byte_end":98080,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":98122,"byte_end":98127,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":98247,"byte_end":98261,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99257,"byte_end":99262,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99627,"byte_end":99632,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99997,"byte_end":100002,"line_start":45,"line_end":45,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100172,"byte_end":100185,"line_start":52,"line_end":52,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100521,"byte_end":100526,"line_start":64,"line_end":64,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100710,"byte_end":100730,"line_start":71,"line_end":71,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":101065,"byte_end":101070,"line_start":83,"line_end":83,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":101471,"byte_end":101476,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102535,"byte_end":102555,"line_start":20,"line_end":20,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102932,"byte_end":102952,"line_start":32,"line_end":32,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":103059,"byte_end":103064,"line_start":35,"line_end":35,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":103265,"byte_end":103285,"line_start":42,"line_end":42,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104210,"byte_end":104223,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104588,"byte_end":104601,"line_start":31,"line_end":31,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104732,"byte_end":104746,"line_start":37,"line_end":37,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":105055,"byte_end":105068,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":105378,"byte_end":105383,"line_start":59,"line_end":59,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":105570,"byte_end":105583,"line_start":66,"line_end":66,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":122744,"byte_end":122758,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":140212,"byte_end":140221,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118612,"byte_end":118622,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119154,"byte_end":119164,"line_start":130,"line_end":130,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119292,"byte_end":119301,"line_start":136,"line_end":136,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119608,"byte_end":119618,"line_start":147,"line_end":147,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":120073,"byte_end":120083,"line_start":164,"line_end":164,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":120255,"byte_end":120264,"line_start":170,"line_end":170,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":120383,"byte_end":120393,"line_start":176,"line_end":176,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165443,"byte_end":165453,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165523,"byte_end":165530,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165555,"byte_end":165562,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165597,"byte_end":165598,"line_start":20,"line_end":20,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166755,"byte_end":166765,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":167966,"byte_end":167967,"line_start":91,"line_end":91,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":168362,"byte_end":168369,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":170326,"byte_end":170333,"line_start":157,"line_end":157,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175147,"byte_end":175154,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178071,"byte_end":178078,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178178,"byte_end":178188,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178271,"byte_end":178278,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178814,"byte_end":178821,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178965,"byte_end":178975,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179120,"byte_end":179127,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179457,"byte_end":179467,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179622,"byte_end":179629,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179870,"byte_end":179877,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180207,"byte_end":180217,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180372,"byte_end":180379,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180628,"byte_end":180635,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180743,"byte_end":180753,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180863,"byte_end":180870,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":181009,"byte_end":181019,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":181154,"byte_end":181161,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":181255,"byte_end":181262,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186714,"byte_end":186719,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188698,"byte_end":188703,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":189227,"byte_end":189232,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":189957,"byte_end":189962,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191777,"byte_end":191791,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218759,"byte_end":218773,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228524,"byte_end":228538,"line_start":1073,"line_end":1073,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229908,"byte_end":229922,"line_start":1112,"line_end":1112,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231370,"byte_end":231384,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231604,"byte_end":231618,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231737,"byte_end":231751,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231864,"byte_end":231878,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231997,"byte_end":232011,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232270,"byte_end":232284,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232602,"byte_end":232616,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232928,"byte_end":232942,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233121,"byte_end":233131,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233581,"byte_end":233591,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233852,"byte_end":233866,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234043,"byte_end":234053,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234246,"byte_end":234260,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234410,"byte_end":234420,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234581,"byte_end":234595,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234781,"byte_end":234791,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234980,"byte_end":234994,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":235366,"byte_end":235376,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259438,"byte_end":259448,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259512,"byte_end":259519,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259541,"byte_end":259548,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259580,"byte_end":259581,"line_start":19,"line_end":19,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261917,"byte_end":261927,"line_start":81,"line_end":81,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":262386,"byte_end":262387,"line_start":101,"line_end":101,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":262699,"byte_end":262706,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":269406,"byte_end":269413,"line_start":278,"line_end":278,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281589,"byte_end":281595,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290131,"byte_end":290137,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292268,"byte_end":292274,"line_start":332,"line_end":332,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294947,"byte_end":294953,"line_start":415,"line_end":415,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296936,"byte_end":296940,"line_start":476,"line_end":476,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":299222,"byte_end":299226,"line_start":536,"line_end":536,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":300387,"byte_end":300396,"line_start":564,"line_end":564,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":301167,"byte_end":301184,"line_start":586,"line_end":586,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":301386,"byte_end":301400,"line_start":594,"line_end":594,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236195,"byte_end":236205,"line_start":16,"line_end":16,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236938,"byte_end":236948,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":237163,"byte_end":237173,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304825,"byte_end":304842,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323529,"byte_end":323546,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331126,"byte_end":331143,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332628,"byte_end":332645,"line_start":811,"line_end":811,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333677,"byte_end":333694,"line_start":840,"line_end":840,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334427,"byte_end":334444,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334648,"byte_end":334665,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334873,"byte_end":334890,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":335428,"byte_end":335445,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":335653,"byte_end":335670,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":336210,"byte_end":336227,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342180,"byte_end":342184,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342493,"byte_end":342497,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361025,"byte_end":361029,"line_start":589,"line_end":589,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361936,"byte_end":361940,"line_start":616,"line_end":616,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362541,"byte_end":362545,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":363569,"byte_end":363573,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":364039,"byte_end":364043,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":364580,"byte_end":364584,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":365057,"byte_end":365061,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":365595,"byte_end":365599,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367623,"byte_end":367632,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375485,"byte_end":375494,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376393,"byte_end":376402,"line_start":283,"line_end":283,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":377027,"byte_end":377036,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":377383,"byte_end":377392,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380984,"byte_end":380991,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":383280,"byte_end":383287,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":383663,"byte_end":383670,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9676,"byte_end":9681,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":332}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9691,"byte_end":9694,"line_start":285,"line_end":285,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":584}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9761,"byte_end":9779,"line_start":287,"line_end":287,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":650}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114836,"byte_end":114844,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":697}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9820,"byte_end":9830,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":792}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9904,"byte_end":9910,"line_start":293,"line_end":293,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9981,"byte_end":9988,"line_start":297,"line_end":297,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1316}},{"kind":"Mod","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10450,"byte_end":10454,"line_start":314,"line_end":314,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2317}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43646,"byte_end":43650,"line_start":918,"line_end":918,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44527,"byte_end":44531,"line_start":942,"line_end":942,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":3122}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3118}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":3126}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3101}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3101}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3106}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3106}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3106}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":3106}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":3106}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":7681}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":7681}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2578},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2591},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91464,"byte_end":91470,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92048,"byte_end":92054,"line_start":43,"line_end":43,"column_start":26,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92158,"byte_end":92163,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":4047},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92449,"byte_end":92455,"line_start":61,"line_end":61,"column_start":28,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2604},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92789,"byte_end":92794,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92970,"byte_end":92976,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":93878,"byte_end":93897,"line_start":13,"line_end":13,"column_start":23,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2615},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":94094,"byte_end":94113,"line_start":20,"line_end":20,"column_start":28,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2615},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":94224,"byte_end":94229,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\indeterminate_offset.rs","byte_start":94414,"byte_end":94433,"line_start":30,"line_end":30,"column_start":32,"column_end":51},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2615},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96130,"byte_end":96135,"line_start":51,"line_end":51,"column_start":48,"column_end":53},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96407,"byte_end":96431,"line_start":61,"line_end":61,"column_start":32,"column_end":56},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2628},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96719,"byte_end":96743,"line_start":72,"line_end":72,"column_start":23,"column_end":47},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2628},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":97553,"byte_end":97577,"line_start":95,"line_end":95,"column_start":28,"column_end":52},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2628},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97875,"byte_end":97889,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2650},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":98066,"byte_end":98080,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2650},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":98122,"byte_end":98127,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":98247,"byte_end":98261,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2650},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99257,"byte_end":99262,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99627,"byte_end":99632,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2663},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99997,"byte_end":100002,"line_start":45,"line_end":45,"column_start":30,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100172,"byte_end":100185,"line_start":52,"line_end":52,"column_start":25,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100521,"byte_end":100526,"line_start":64,"line_end":64,"column_start":37,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100710,"byte_end":100730,"line_start":71,"line_end":71,"column_start":25,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2684},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":101065,"byte_end":101070,"line_start":83,"line_end":83,"column_start":29,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":101471,"byte_end":101476,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102535,"byte_end":102555,"line_start":20,"line_end":20,"column_start":23,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2684},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102932,"byte_end":102952,"line_start":32,"line_end":32,"column_start":28,"column_end":48},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2684},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":103059,"byte_end":103064,"line_start":35,"line_end":35,"column_start":44,"column_end":49},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":103265,"byte_end":103285,"line_start":42,"line_end":42,"column_start":32,"column_end":52},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2684},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104210,"byte_end":104223,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104588,"byte_end":104601,"line_start":31,"line_end":31,"column_start":38,"column_end":51},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104732,"byte_end":104746,"line_start":37,"line_end":37,"column_start":40,"column_end":54},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":105055,"byte_end":105068,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2702},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":105378,"byte_end":105383,"line_start":59,"line_end":59,"column_start":37,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":105570,"byte_end":105583,"line_start":66,"line_end":66,"column_start":32,"column_end":45},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2720},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107904,"byte_end":107910,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":592},"to":{"krate":0,"index":596}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111562,"byte_end":111568,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":592},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":122744,"byte_end":122758,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":140212,"byte_end":140221,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118612,"byte_end":118622,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119154,"byte_end":119164,"line_start":130,"line_end":130,"column_start":26,"column_end":36},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119292,"byte_end":119301,"line_start":136,"line_end":136,"column_start":34,"column_end":43},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2752},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119608,"byte_end":119618,"line_start":147,"line_end":147,"column_start":41,"column_end":51},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":120073,"byte_end":120083,"line_start":164,"line_end":164,"column_start":31,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":120255,"byte_end":120264,"line_start":170,"line_end":170,"column_start":36,"column_end":45},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2752},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":120383,"byte_end":120393,"line_start":176,"line_end":176,"column_start":39,"column_end":49},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165412,"byte_end":165418,"line_start":15,"line_end":15,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":848},"to":{"krate":0,"index":839}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165443,"byte_end":165453,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3260},"to":{"krate":0,"index":839}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165523,"byte_end":165530,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":839}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165555,"byte_end":165562,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":839}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165597,"byte_end":165598,"line_start":20,"line_end":20,"column_start":32,"column_end":33},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":845},"to":{"krate":0,"index":839}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166755,"byte_end":166765,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3260},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":167966,"byte_end":167967,"line_start":91,"line_end":91,"column_start":35,"column_end":36},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":168362,"byte_end":168369,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":170326,"byte_end":170333,"line_start":157,"line_end":157,"column_start":25,"column_end":32},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175147,"byte_end":175154,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178071,"byte_end":178078,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178178,"byte_end":178188,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"kind":{"Impl":{"id":191}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178271,"byte_end":178278,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178814,"byte_end":178821,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178965,"byte_end":178975,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179120,"byte_end":179127,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179457,"byte_end":179467,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179622,"byte_end":179629,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179870,"byte_end":179877,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180207,"byte_end":180217,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"kind":{"Impl":{"id":202}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180372,"byte_end":180379,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180628,"byte_end":180635,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180743,"byte_end":180753,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180863,"byte_end":180870,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":181009,"byte_end":181019,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"kind":{"Impl":{"id":210}},"from":{"krate":1,"index":11375},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":181154,"byte_end":181161,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":181255,"byte_end":181262,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":2623}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186714,"byte_end":186719,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188698,"byte_end":188703,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3325},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":189227,"byte_end":189232,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3325},"to":{"krate":2,"index":12195}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":189957,"byte_end":189962,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3325},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191777,"byte_end":191791,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218759,"byte_end":218773,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228524,"byte_end":228538,"line_start":1073,"line_end":1073,"column_start":6,"column_end":20},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229908,"byte_end":229922,"line_start":1112,"line_end":1112,"column_start":6,"column_end":20},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231370,"byte_end":231384,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231604,"byte_end":231618,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231737,"byte_end":231751,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231864,"byte_end":231878,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2711}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231997,"byte_end":232011,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232270,"byte_end":232284,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232602,"byte_end":232616,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232928,"byte_end":232942,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233121,"byte_end":233131,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":1,"index":11395},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233581,"byte_end":233591,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":1,"index":11395},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233852,"byte_end":233866,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234043,"byte_end":234053,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"kind":{"Impl":{"id":239}},"from":{"krate":1,"index":11395},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234246,"byte_end":234260,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234410,"byte_end":234420,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"kind":{"Impl":{"id":241}},"from":{"krate":1,"index":11395},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234581,"byte_end":234595,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234781,"byte_end":234791,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"kind":{"Impl":{"id":243}},"from":{"krate":1,"index":11395},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234980,"byte_end":234994,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":235366,"byte_end":235376,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"kind":{"Impl":{"id":245}},"from":{"krate":1,"index":11395},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259410,"byte_end":259416,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1590},"to":{"krate":0,"index":1581}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259438,"byte_end":259448,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3260},"to":{"krate":0,"index":1581}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259512,"byte_end":259519,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":1581}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259541,"byte_end":259548,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":1581}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259580,"byte_end":259581,"line_start":19,"line_end":19,"column_start":29,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":1587},"to":{"krate":0,"index":1581}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261917,"byte_end":261927,"line_start":81,"line_end":81,"column_start":25,"column_end":35},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3260},"to":{"krate":0,"index":1590}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":262386,"byte_end":262387,"line_start":101,"line_end":101,"column_start":35,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1606},"to":{"krate":0,"index":1590}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":262699,"byte_end":262706,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":1590}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":269406,"byte_end":269413,"line_start":278,"line_end":278,"column_start":25,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":1590}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281589,"byte_end":281595,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290131,"byte_end":290137,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292268,"byte_end":292274,"line_start":332,"line_end":332,"column_start":6,"column_end":12},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294947,"byte_end":294953,"line_start":415,"line_end":415,"column_start":6,"column_end":12},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":296936,"byte_end":296940,"line_start":476,"line_end":476,"column_start":26,"column_end":30},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":299222,"byte_end":299226,"line_start":536,"line_end":536,"column_start":26,"column_end":30},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":300387,"byte_end":300396,"line_start":564,"line_end":564,"column_start":26,"column_end":35},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":301167,"byte_end":301184,"line_start":586,"line_end":586,"column_start":26,"column_end":43},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":301386,"byte_end":301400,"line_start":594,"line_end":594,"column_start":26,"column_end":40},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2937}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\shim.rs","byte_start":303205,"byte_end":303210,"line_start":16,"line_end":16,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":1972}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236195,"byte_end":236205,"line_start":16,"line_end":16,"column_start":13,"column_end":23},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236938,"byte_end":236948,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":237163,"byte_end":237173,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304825,"byte_end":304842,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323529,"byte_end":323546,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331126,"byte_end":331143,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332628,"byte_end":332645,"line_start":811,"line_end":811,"column_start":6,"column_end":23},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333677,"byte_end":333694,"line_start":840,"line_end":840,"column_start":6,"column_end":23},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334427,"byte_end":334444,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334648,"byte_end":334665,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334873,"byte_end":334890,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":335428,"byte_end":335445,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":335653,"byte_end":335670,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":336210,"byte_end":336227,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342180,"byte_end":342184,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342493,"byte_end":342497,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361025,"byte_end":361029,"line_start":589,"line_end":589,"column_start":6,"column_end":10},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":361936,"byte_end":361940,"line_start":616,"line_end":616,"column_start":6,"column_end":10},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":362541,"byte_end":362545,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":363569,"byte_end":363573,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":364039,"byte_end":364043,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":364580,"byte_end":364584,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":365057,"byte_end":365061,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":365595,"byte_end":365599,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":3096}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367623,"byte_end":367632,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":375485,"byte_end":375494,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":376393,"byte_end":376402,"line_start":283,"line_end":283,"column_start":6,"column_end":15},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":377027,"byte_end":377036,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":377383,"byte_end":377392,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":3118}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":380984,"byte_end":380991,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":383280,"byte_end":383287,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3622},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":383663,"byte_end":383670,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3622},"to":{"krate":2,"index":12195}}]}