{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0","program":"C:\\Users\\DAVID\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","simplelog","--edition=2018","C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"local-offset\"","--cfg","feature=\"termcolor\"","-C","metadata=ef097868e5c472c0","-C","extra-filename=-ef097868e5c472c0","--out-dir","c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps","--extern","log=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\liblog-b13d406e2675f718.rmeta","--extern","termcolor=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libtermcolor-60b595524c9654a3.rmeta","--extern","time=c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libtime-5977462dedf80160.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\DAVID\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\DAVID\\Documents\\GitHub\\rust-example\\target\\rls\\debug\\deps\\libsimplelog-ef097868e5c472c0.rmeta"},"prelude":{"crate_id":{"name":"simplelog","disambiguator":[15562808018234307815,0]},"crate_root":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src","external_crates":[{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":14,"id":{"name":"log","disambiguator":[2429338322379649461,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":15,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":16,"id":{"name":"termcolor","disambiguator":[7648826685898456659,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":17,"id":{"name":"winapi_util","disambiguator":[311050577585428960,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":18,"id":{"name":"winapi","disambiguator":[8420896054204666362,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":19,"id":{"name":"time","disambiguator":[5496872511124503178,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":20,"id":{"name":"time_macros","disambiguator":[15619233697277470154,0]}},{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","num":21,"id":{"name":"itoa","disambiguator":[1208910432738536241,0]}}],"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":334,"byte_end":11109,"line_start":8,"line_end":311,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":3260},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11289,"byte_end":11299,"line_start":8,"line_end":8,"column_start":36,"column_end":46},"alias_span":null,"name":"FormatItem","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":20,"index":619},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11309,"byte_end":11327,"line_start":8,"line_end":8,"column_start":56,"column_end":74},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\mod.rs","byte_start":23759,"byte_end":23773,"line_start":10,"line_end":10,"column_start":24,"column_end":38},"alias_span":null,"name":"CombinedLogger","value":"","parent":{"krate":0,"index":54}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\mod.rs","byte_start":23800,"byte_end":23812,"line_start":11,"line_end":11,"column_start":26,"column_end":38},"alias_span":null,"name":"SimpleLogger","value":"","parent":{"krate":0,"index":54}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\mod.rs","byte_start":23868,"byte_end":23878,"line_start":13,"line_end":13,"column_start":25,"column_end":35},"alias_span":null,"name":"TermLogger","value":"","parent":{"krate":0,"index":54}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\mod.rs","byte_start":23880,"byte_end":23892,"line_start":13,"line_end":13,"column_start":37,"column_end":49},"alias_span":null,"name":"TerminalMode","value":"","parent":{"krate":0,"index":54}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\mod.rs","byte_start":23979,"byte_end":23990,"line_start":16,"line_end":16,"column_start":25,"column_end":36},"alias_span":null,"name":"WriteLogger","value":"","parent":{"krate":0,"index":54}},{"kind":"Use","ref_id":{"krate":20,"index":619},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1242,"byte_end":1260,"line_start":28,"line_end":28,"column_start":5,"column_end":23},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1262,"byte_end":1268,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1270,"byte_end":1283,"line_start":28,"line_end":28,"column_start":33,"column_end":46},"alias_span":null,"name":"ConfigBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":3260},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1285,"byte_end":1295,"line_start":28,"line_end":28,"column_start":48,"column_end":58},"alias_span":null,"name":"FormatItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1297,"byte_end":1309,"line_start":28,"line_end":28,"column_start":60,"column_end":72},"alias_span":null,"name":"LevelPadding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1311,"byte_end":1324,"line_start":28,"line_end":28,"column_start":74,"column_end":87},"alias_span":null,"name":"TargetPadding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1330,"byte_end":1343,"line_start":29,"line_end":29,"column_start":5,"column_end":18},"alias_span":null,"name":"ThreadLogMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1345,"byte_end":1358,"line_start":29,"line_end":29,"column_start":20,"column_end":33},"alias_span":null,"name":"ThreadPadding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1447,"byte_end":1461,"line_start":33,"line_end":33,"column_start":25,"column_end":39},"alias_span":null,"name":"CombinedLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1463,"byte_end":1475,"line_start":33,"line_end":33,"column_start":41,"column_end":53},"alias_span":null,"name":"SimpleLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1477,"byte_end":1488,"line_start":33,"line_end":33,"column_start":55,"column_end":66},"alias_span":null,"name":"WriteLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1545,"byte_end":1555,"line_start":35,"line_end":35,"column_start":25,"column_end":35},"alias_span":null,"name":"TermLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1557,"byte_end":1569,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"alias_span":null,"name":"TerminalMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":435},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1622,"byte_end":1627,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":380},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1629,"byte_end":1640,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"alias_span":null,"name":"ColorChoice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":216},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1658,"byte_end":1663,"line_start":39,"line_end":39,"column_start":15,"column_end":20},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":237},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1665,"byte_end":1676,"line_start":39,"line_end":39,"column_start":22,"column_end":33},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":334,"byte_end":11109,"line_start":8,"line_end":311,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":54},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440}],"decl_id":null,"docs":"\n `simplelog` provides a series of logging facilities, that can be easily combined.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":334,"byte_end":337,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `simplelog` provides a series of logging facilities, that can be easily combined.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":338,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `SimpleLogger` (very basic logger that logs to stdout)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":428,"byte_end":488,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ - `TermLogger` (advanced terminal logger, that splits to stdout/err and has color support) (can be excluded on unsupported platforms)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":489,"byte_end":626,"line_start":12,"line_end":12,"column_start":1,"column_end":138}},{"value":"/ - `WriteLogger` (logs to a given struct implementing `Write`, e.g. a file)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":627,"byte_end":705,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ - `CombinedLogger` (can be used to form combinations of the above loggers)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":706,"byte_end":784,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ - `TestLogger` (specialized logger for tests. Uses print!() / println!() for tests to be able to capture the output)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":785,"byte_end":905,"line_start":15,"line_end":15,"column_start":1,"column_end":121}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":906,"byte_end":909,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Only one Logger should be initialized of the start of your program","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":910,"byte_end":980,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ through the `Logger::init(...)` method. For the actual calling syntax","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":981,"byte_end":1054,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ take a look at the documentation of the specific implementation(s) you wanna use.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1055,"byte_end":1140,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1141,"byte_end":1144,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"deny(missing_docs, rust_2018_idioms)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1146,"byte_end":1186,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11481,"byte_end":11485,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Left","qualname":"::config::LevelPadding::Left","value":"LevelPadding::Left","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Add spaces on the left side\n","sig":null,"attributes":[{"value":"/ Add spaces on the left side","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11445,"byte_end":11476,"line_start":13,"line_end":13,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11528,"byte_end":11533,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Right","qualname":"::config::LevelPadding::Right","value":"LevelPadding::Right","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Add spaces on the right side\n","sig":null,"attributes":[{"value":"/ Add spaces on the right side","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11491,"byte_end":11523,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11568,"byte_end":11571,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Off","qualname":"::config::LevelPadding::Off","value":"LevelPadding::Off","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Do not pad the level\n","sig":null,"attributes":[{"value":"/ Do not pad the level","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11539,"byte_end":11563,"line_start":17,"line_end":17,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11426,"byte_end":11438,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"LevelPadding","qualname":"::config::LevelPadding","value":"pub enum LevelPadding { Left, Right, Off, }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449}],"decl_id":null,"docs":" Padding to be used for logging the level\n","sig":null,"attributes":[{"value":"/ Padding to be used for logging the level","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11372,"byte_end":11416,"line_start":11,"line_end":11,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11743,"byte_end":11747,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Left","qualname":"::config::ThreadPadding::Left","value":"ThreadPadding::Left(usize)","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Add spaces on the left side, up to usize many\n","sig":null,"attributes":[{"value":"/ Add spaces on the left side, up to usize many","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11689,"byte_end":11738,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11815,"byte_end":11820,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Right","qualname":"::config::ThreadPadding::Right","value":"ThreadPadding::Right(usize)","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Add spaces on the right side, up to usize many\n","sig":null,"attributes":[{"value":"/ Add spaces on the right side, up to usize many","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11760,"byte_end":11810,"line_start":26,"line_end":26,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11871,"byte_end":11874,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Off","qualname":"::config::ThreadPadding::Off","value":"ThreadPadding::Off","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Do not pad the thread id/name\n","sig":null,"attributes":[{"value":"/ Do not pad the thread id/name","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11833,"byte_end":11866,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11669,"byte_end":11682,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"name":"ThreadPadding","qualname":"::config::ThreadPadding","value":"pub enum ThreadPadding { Left(usize), Right(usize), Off, }","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463}],"decl_id":null,"docs":" Padding to be used for logging the thread id/name\n","sig":null,"attributes":[{"value":"/ Padding to be used for logging the thread id/name","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11606,"byte_end":11659,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12046,"byte_end":12050,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Left","qualname":"::config::TargetPadding::Left","value":"TargetPadding::Left(usize)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Add spaces on the left side, up to usize many\n","sig":null,"attributes":[{"value":"/ Add spaces on the left side, up to usize many","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11992,"byte_end":12041,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12118,"byte_end":12123,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Right","qualname":"::config::TargetPadding::Right","value":"TargetPadding::Right(usize)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Add spaces on the right side, up to usize many\n","sig":null,"attributes":[{"value":"/ Add spaces on the right side, up to usize many","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12063,"byte_end":12113,"line_start":37,"line_end":37,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12174,"byte_end":12177,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"Off","qualname":"::config::TargetPadding::Off","value":"TargetPadding::Off","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Do not pad the thread id/name\n","sig":null,"attributes":[{"value":"/ Do not pad the thread id/name","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12136,"byte_end":12169,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11972,"byte_end":11985,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"name":"TargetPadding","qualname":"::config::TargetPadding","value":"pub enum TargetPadding { Left(usize), Right(usize), Off, }","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":477}],"decl_id":null,"docs":" Padding to be used for logging the thread id/name\n","sig":null,"attributes":[{"value":"/ Padding to be used for logging the thread id/name","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":11909,"byte_end":11962,"line_start":33,"line_end":33,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12332,"byte_end":12335,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"IDs","qualname":"::config::ThreadLogMode::IDs","value":"ThreadLogMode::IDs","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Log thread ids only\n","sig":null,"attributes":[{"value":"/ Log thread ids only","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12304,"byte_end":12327,"line_start":46,"line_end":46,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12375,"byte_end":12380,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Names","qualname":"::config::ThreadLogMode::Names","value":"ThreadLogMode::Names","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Log the thread names only\n","sig":null,"attributes":[{"value":"/ Log the thread names only","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12341,"byte_end":12370,"line_start":48,"line_end":48,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12463,"byte_end":12467,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Both","qualname":"::config::ThreadLogMode::Both","value":"ThreadLogMode::Both","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" If this thread is named, log the name. Otherwise, log the thread id.\n","sig":null,"attributes":[{"value":"/ If this thread is named, log the name. Otherwise, log the thread id.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12386,"byte_end":12458,"line_start":50,"line_end":50,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12284,"byte_end":12297,"line_start":45,"line_end":45,"column_start":10,"column_end":23},"name":"ThreadLogMode","qualname":"::config::ThreadLogMode","value":"pub enum ThreadLogMode { IDs, Names, Both, }","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489}],"decl_id":null,"docs":" Mode for logging the thread name or id or both.\n","sig":null,"attributes":[{"value":"/ Mode for logging the thread name or id or both.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12223,"byte_end":12274,"line_start":44,"line_end":44,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":13063,"byte_end":13069,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527}],"decl_id":null,"docs":" Configuration for the Loggers","sig":null,"attributes":[{"value":"/ Configuration for the Loggers","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12624,"byte_end":12657,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12658,"byte_end":12661,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ All loggers print the message in the following form:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12662,"byte_end":12718,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ `00:00:00 [LEVEL] crate::module: [lib.rs::100] your_message`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12719,"byte_end":12783,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/ Every space delimited part except the actual message is optional.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12784,"byte_end":12853,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12854,"byte_end":12857,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Pass this struct to your logger to change when these information shall","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12858,"byte_end":12932,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ be logged.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12933,"byte_end":12947,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12948,"byte_end":12951,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Construct using [`Default`](Config::default) or using [`ConfigBuilder`]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":12952,"byte_end":13027,"line_start":70,"line_end":70,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14507,"byte_end":14520,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"ConfigBuilder","qualname":"::config::ConfigBuilder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Builder for the Logger Configurations (`Config`)","sig":null,"attributes":[{"value":"/ Builder for the Logger Configurations (`Config`)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":13773,"byte_end":13825,"line_start":91,"line_end":91,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":13826,"byte_end":13829,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ All loggers print the message in the following form:","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":13830,"byte_end":13886,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ `00:00:00 [LEVEL] crate::module: [lib.rs::100] your_message`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":13887,"byte_end":13951,"line_start":94,"line_end":94,"column_start":1,"column_end":65}},{"value":"/ Every space delimited part except the actual message is optional.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":13952,"byte_end":14021,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14022,"byte_end":14025,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Use this struct to create a custom `Config` changing when these information shall","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14026,"byte_end":14111,"line_start":97,"line_end":97,"column_start":1,"column_end":86}},{"value":"/ be logged. Every part can be enabled for a specific Level and is then","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14112,"byte_end":14185,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/ automatically enable for all lower levels as well.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14186,"byte_end":14240,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14241,"byte_end":14244,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ The Result is that the logging gets more detailed the more verbose it gets.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14245,"byte_end":14324,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ E.g. to have one part shown always use `Level::Error`. But if you","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14325,"byte_end":14394,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/ want to show the source line only on `Trace` use that.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14395,"byte_end":14453,"line_start":103,"line_end":103,"column_start":1,"column_end":59}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14478,"byte_end":14495,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14606,"byte_end":14609,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfigBuilder>::new","value":"pub fn new() -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new default ConfigBuilder\n","sig":null,"attributes":[{"value":"/ Create a new default ConfigBuilder","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14556,"byte_end":14594,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14794,"byte_end":14807,"line_start":115,"line_end":115,"column_start":12,"column_end":25},"name":"set_max_level","qualname":"<ConfigBuilder>::set_max_level","value":"pub fn set_max_level(&mut Self, LevelFilter) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and above (more verbose) the level itself shall be logged (default is Error)\n","sig":null,"attributes":[{"value":"/ Set at which level and above (more verbose) the level itself shall be logged (default is Error)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14683,"byte_end":14782,"line_start":114,"line_end":114,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15029,"byte_end":15043,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"set_time_level","qualname":"<ConfigBuilder>::set_time_level","value":"pub fn set_time_level(&mut Self, LevelFilter) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and  above (more verbose) the current time shall be logged (default is Error)\n","sig":null,"attributes":[{"value":"/ Set at which level and  above (more verbose) the current time shall be logged (default is Error)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14917,"byte_end":15017,"line_start":120,"line_end":120,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15259,"byte_end":15275,"line_start":127,"line_end":127,"column_start":12,"column_end":28},"name":"set_thread_level","qualname":"<ConfigBuilder>::set_thread_level","value":"pub fn set_thread_level(&mut Self, LevelFilter) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and above (more verbose) the thread id shall be logged. (default is Debug)\n","sig":null,"attributes":[{"value":"/ Set at which level and above (more verbose) the thread id shall be logged. (default is Debug)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15150,"byte_end":15247,"line_start":126,"line_end":126,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15494,"byte_end":15510,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"set_target_level","qualname":"<ConfigBuilder>::set_target_level","value":"pub fn set_target_level(&mut Self, LevelFilter) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and above (more verbose) the target shall be logged. (default is Debug)\n","sig":null,"attributes":[{"value":"/ Set at which level and above (more verbose) the target shall be logged. (default is Debug)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15388,"byte_end":15482,"line_start":132,"line_end":132,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15674,"byte_end":15692,"line_start":139,"line_end":139,"column_start":12,"column_end":30},"name":"set_target_padding","qualname":"<ConfigBuilder>::set_target_padding","value":"pub fn set_target_padding(&mut Self, TargetPadding) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set how the thread should be padded\n","sig":null,"attributes":[{"value":"/ Set how the thread should be padded","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15623,"byte_end":15662,"line_start":138,"line_end":138,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15935,"byte_end":15953,"line_start":145,"line_end":145,"column_start":12,"column_end":30},"name":"set_location_level","qualname":"<ConfigBuilder>::set_location_level","value":"pub fn set_location_level(&mut Self, LevelFilter) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and above (more verbose) a source code reference shall be logged (default is Trace)\n","sig":null,"attributes":[{"value":"/ Set at which level and above (more verbose) a source code reference shall be logged (default is Trace)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":15817,"byte_end":15923,"line_start":144,"line_end":144,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16154,"byte_end":16171,"line_start":151,"line_end":151,"column_start":12,"column_end":29},"name":"set_level_padding","qualname":"<ConfigBuilder>::set_level_padding","value":"pub fn set_level_padding(&mut Self, LevelPadding) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set how the levels should be padded, when logging (default is Off)\n","sig":null,"attributes":[{"value":"/ Set how the levels should be padded, when logging (default is Off)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16072,"byte_end":16142,"line_start":150,"line_end":150,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16345,"byte_end":16363,"line_start":157,"line_end":157,"column_start":12,"column_end":30},"name":"set_thread_padding","qualname":"<ConfigBuilder>::set_thread_padding","value":"pub fn set_thread_padding(&mut Self, ThreadPadding) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set how the thread should be padded\n","sig":null,"attributes":[{"value":"/ Set how the thread should be padded","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16294,"byte_end":16333,"line_start":156,"line_end":156,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16539,"byte_end":16554,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"set_thread_mode","qualname":"<ConfigBuilder>::set_thread_mode","value":"pub fn set_thread_mode(&mut Self, ThreadLogMode) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the mode for logging the thread\n","sig":null,"attributes":[{"value":"/ Set the mode for logging the thread","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16488,"byte_end":16527,"line_start":162,"line_end":162,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16846,"byte_end":16861,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"set_level_color","qualname":"<ConfigBuilder>::set_level_color","value":"pub fn set_level_color(&mut Self, Level, Option<Color>) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the color used for printing the level (if the logger supports it),\n or None to use the default foreground color\n","sig":null,"attributes":[{"value":"/ Set the color used for printing the level (if the logger supports it),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16674,"byte_end":16748,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ or None to use the default foreground color","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16753,"byte_end":16800,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"termcolor\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":16805,"byte_end":16834,"line_start":170,"line_end":170,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17766,"byte_end":17788,"line_start":194,"line_end":194,"column_start":12,"column_end":34},"name":"set_time_format_custom","qualname":"<ConfigBuilder>::set_time_format_custom","value":"pub fn set_time_format_custom(&mut Self, &'static [FormatItem])\n-> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the time format to a custom representation.","sig":null,"attributes":[{"value":"/ Sets the time format to a custom representation.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17009,"byte_end":17061,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17066,"byte_end":17069,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The easiest way to satisfy the static lifetime of the argument is to directly use the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17074,"byte_end":17163,"line_start":178,"line_end":178,"column_start":5,"column_end":94}},{"value":"/ re-exported [`time::macros::format_description`] macro.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17168,"byte_end":17227,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17232,"byte_end":17235,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ *Note*: The default time format is \"[hour]:[minute]:[second]\".","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17240,"byte_end":17306,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17311,"byte_end":17314,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The syntax for the format_description macro can be found in the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17319,"byte_end":17386,"line_start":183,"line_end":183,"column_start":5,"column_end":72}},{"value":"/ [`time` crate book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17391,"byte_end":17475,"line_start":184,"line_end":184,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17480,"byte_end":17483,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17488,"byte_end":17499,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17504,"byte_end":17507,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17512,"byte_end":17519,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # use simplelog::{ConfigBuilder, format_description};","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17524,"byte_end":17581,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"/ let config = ConfigBuilder::new()","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17586,"byte_end":17623,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/     .set_time_format_custom(format_description!(\"[hour]:[minute]:[second].[subsecond]\"))","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17628,"byte_end":17720,"line_start":191,"line_end":191,"column_start":5,"column_end":97}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17725,"byte_end":17742,"line_start":192,"line_end":192,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17747,"byte_end":17754,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18032,"byte_end":18055,"line_start":203,"line_end":203,"column_start":12,"column_end":35},"name":"set_time_format_rfc2822","qualname":"<ConfigBuilder>::set_time_format_rfc2822","value":"pub fn set_time_format_rfc2822(&mut Self) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set time format string to use rfc2822.\n","sig":null,"attributes":[{"value":"/ Set time format string to use rfc2822.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":17978,"byte_end":18020,"line_start":202,"line_end":202,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18219,"byte_end":18242,"line_start":209,"line_end":209,"column_start":12,"column_end":35},"name":"set_time_format_rfc3339","qualname":"<ConfigBuilder>::set_time_format_rfc3339","value":"pub fn set_time_format_rfc3339(&mut Self) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set time format string to use rfc3339.\n","sig":null,"attributes":[{"value":"/ Set time format string to use rfc3339.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18165,"byte_end":18207,"line_start":208,"line_end":208,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18417,"byte_end":18432,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"set_time_offset","qualname":"<ConfigBuilder>::set_time_offset","value":"pub fn set_time_offset(&mut Self, UtcOffset) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set offset used for logging time (default is UTC)\n","sig":null,"attributes":[{"value":"/ Set offset used for logging time (default is UTC)","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18352,"byte_end":18405,"line_start":214,"line_end":214,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19109,"byte_end":19133,"line_start":228,"line_end":228,"column_start":12,"column_end":36},"name":"set_time_offset_to_local","qualname":"<ConfigBuilder>::set_time_offset_to_local","value":"pub fn set_time_offset_to_local(&mut Self)\n-> Result<&mut ConfigBuilder, &mut ConfigBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Sets the offset used to the current local time offset\n (overriding values previously set by [`ConfigBuilder::set_time_offset`]).","sig":null,"attributes":[{"value":"/ Sets the offset used to the current local time offset","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18548,"byte_end":18605,"line_start":220,"line_end":220,"column_start":5,"column_end":62}},{"value":"/ (overriding values previously set by [`ConfigBuilder::set_time_offset`]).","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18610,"byte_end":18687,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18692,"byte_end":18695,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function may fail if the offset cannot be determined soundly.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18700,"byte_end":18770,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ This may be the case, when the program is multi-threaded by the time of calling this function.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18775,"byte_end":18873,"line_start":224,"line_end":224,"column_start":5,"column_end":103}},{"value":"/ One can opt-out of this behavior by setting `RUSTFLAGS=\"--cfg unsound_local_offset\"`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18878,"byte_end":18967,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/ Doing so is not recommended, completely untested and may cause unexpected segfaults.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":18972,"byte_end":19060,"line_start":226,"line_end":226,"column_start":5,"column_end":93}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19065,"byte_end":19097,"line_start":227,"line_end":227,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19953,"byte_end":19973,"line_start":249,"line_end":249,"column_start":12,"column_end":32},"name":"add_filter_allow_str","qualname":"<ConfigBuilder>::add_filter_allow_str","value":"pub fn add_filter_allow_str(&mut Self, &'static str) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add allowed module filters.\n If any are specified, only records from modules starting with one of these entries will be printed","sig":null,"attributes":[{"value":"/ Add allowed module filters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19674,"byte_end":19705,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ If any are specified, only records from modules starting with one of these entries will be printed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19710,"byte_end":19812,"line_start":246,"line_end":246,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19817,"byte_end":19820,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_allow_str(\"tokio::uds\")` would allow only logging from the `tokio` crates `uds` module.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":19825,"byte_end":19941,"line_start":248,"line_end":248,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20507,"byte_end":20523,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"add_filter_allow","qualname":"<ConfigBuilder>::add_filter_allow","value":"pub fn add_filter_allow(&mut Self, String) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add allowed module filters.\n If any are specified, only records from modules starting with one of these entries will be printed","sig":null,"attributes":[{"value":"/ Add allowed module filters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20214,"byte_end":20245,"line_start":256,"line_end":256,"column_start":5,"column_end":36}},{"value":"/ If any are specified, only records from modules starting with one of these entries will be printed","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20250,"byte_end":20352,"line_start":257,"line_end":257,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20357,"byte_end":20360,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_allow(format!(\"{}{}\",\"tokio\", \"uds\"))` would allow only logging from the `tokio` crates `uds` module.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20365,"byte_end":20495,"line_start":259,"line_end":259,"column_start":5,"column_end":135}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20855,"byte_end":20873,"line_start":269,"line_end":269,"column_start":12,"column_end":30},"name":"clear_filter_allow","qualname":"<ConfigBuilder>::clear_filter_allow","value":"pub fn clear_filter_allow(&mut Self) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear allowed module filters.\n If none are specified, nothing is filtered out\n","sig":null,"attributes":[{"value":"/ Clear allowed module filters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20755,"byte_end":20788,"line_start":267,"line_end":267,"column_start":5,"column_end":38}},{"value":"/ If none are specified, nothing is filtered out","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20793,"byte_end":20843,"line_start":268,"line_end":268,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21251,"byte_end":21272,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"add_filter_ignore_str","qualname":"<ConfigBuilder>::add_filter_ignore_str","value":"pub fn add_filter_ignore_str(&mut Self, &'static str) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add denied module filters.\n If any are specified, records from modules starting with one of these entries will be ignored","sig":null,"attributes":[{"value":"/ Add denied module filters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":20983,"byte_end":21013,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ If any are specified, records from modules starting with one of these entries will be ignored","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21018,"byte_end":21115,"line_start":275,"line_end":275,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21120,"byte_end":21123,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_ignore_str(\"tokio::uds\")` would deny logging from the `tokio` crates `uds` module.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21128,"byte_end":21239,"line_start":277,"line_end":277,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21799,"byte_end":21816,"line_start":289,"line_end":289,"column_start":12,"column_end":29},"name":"add_filter_ignore","qualname":"<ConfigBuilder>::add_filter_ignore","value":"pub fn add_filter_ignore(&mut Self, String) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add denied module filters.\n If any are specified, records from modules starting with one of these entries will be ignored","sig":null,"attributes":[{"value":"/ Add denied module filters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21517,"byte_end":21547,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ If any are specified, records from modules starting with one of these entries will be ignored","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21552,"byte_end":21649,"line_start":286,"line_end":286,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21654,"byte_end":21657,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_ignore(format!(\"{}{}\",\"tokio\", \"uds\"))` would deny logging from the `tokio` crates `uds` module.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":21662,"byte_end":21787,"line_start":288,"line_end":288,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22147,"byte_end":22166,"line_start":298,"line_end":298,"column_start":12,"column_end":31},"name":"clear_filter_ignore","qualname":"<ConfigBuilder>::clear_filter_ignore","value":"pub fn clear_filter_ignore(&mut Self) -> &mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear ignore module filters.\n If none are specified, nothing is filtered\n","sig":null,"attributes":[{"value":"/ Clear ignore module filters.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22052,"byte_end":22084,"line_start":296,"line_end":296,"column_start":5,"column_end":37}},{"value":"/ If none are specified, nothing is filtered","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22089,"byte_end":22135,"line_start":297,"line_end":297,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22311,"byte_end":22316,"line_start":304,"line_end":304,"column_start":12,"column_end":17},"name":"build","qualname":"<ConfigBuilder>::build","value":"pub fn build(&mut Self) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Build new `Config`\n","sig":null,"attributes":[{"value":"/ Build new `Config`","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22277,"byte_end":22299,"line_start":303,"line_end":303,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24696,"byte_end":24710,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"CombinedLogger","qualname":"::loggers::comblog::CombinedLogger","value":"CombinedLogger {  }","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one.","sig":null,"attributes":[{"value":"/ The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24515,"byte_end":24616,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24617,"byte_end":24620,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The purpose is to allow multiple Loggers to be set globally","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24621,"byte_end":24684,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25910,"byte_end":25914,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"init","qualname":"<CombinedLogger>::init","value":"pub fn init(Vec<Box<dyn SharedLogger>>) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the CombinedLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the CombinedLogger as the one and only used log facility.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24806,"byte_end":24903,"line_start":22,"line_end":22,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24908,"byte_end":24911,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Takes all used Loggers as a Vector argument. None of those Loggers should already be set globally.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24916,"byte_end":25018,"line_start":24,"line_end":24,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25023,"byte_end":25026,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ All loggers need to implement `log::Log` and `logger::SharedLogger` and need to provide a way to be","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25031,"byte_end":25134,"line_start":26,"line_end":26,"column_start":5,"column_end":108}},{"value":"/ initialized without calling `set_logger`. All loggers of this library provide a `new(..)`` method","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25139,"byte_end":25240,"line_start":27,"line_end":27,"column_start":5,"column_end":106}},{"value":"/ for that purpose.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25245,"byte_end":25266,"line_start":28,"line_end":28,"column_start":5,"column_end":26}},{"value":"/ Fails if another logger is already set globally.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25271,"byte_end":25323,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25328,"byte_end":25331,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25336,"byte_end":25350,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25355,"byte_end":25362,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25367,"byte_end":25396,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25401,"byte_end":25424,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25429,"byte_end":25453,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25458,"byte_end":25475,"line_start":36,"line_end":36,"column_start":5,"column_end":22}},{"value":"/ let _ = CombinedLogger::init(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25480,"byte_end":25513,"line_start":37,"line_end":37,"column_start":5,"column_end":38}},{"value":"/             vec![","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25518,"byte_end":25539,"line_start":38,"line_end":38,"column_start":5,"column_end":26}},{"value":"/ #               #[cfg(feature = \"termcolor\")]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25544,"byte_end":25593,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/                 TermLogger::new(LevelFilter::Info, Config::default(), TerminalMode::Mixed, ColorChoice::Auto),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25598,"byte_end":25712,"line_start":40,"line_end":40,"column_start":5,"column_end":119}},{"value":"/                 WriteLogger::new(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25717,"byte_end":25833,"line_start":41,"line_end":41,"column_start":5,"column_end":121}},{"value":"/             ]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25838,"byte_end":25855,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/         );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25860,"byte_end":25874,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25879,"byte_end":25886,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":25891,"byte_end":25898,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27204,"byte_end":27207,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<CombinedLogger>::new","value":"pub fn new(Vec<Box<dyn SharedLogger>>) -> Box<CombinedLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter whats globally set.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26119,"byte_end":26215,"line_start":52,"line_end":52,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26220,"byte_end":26223,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26228,"byte_end":26285,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26290,"byte_end":26385,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26390,"byte_end":26393,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Takes all used loggers as a Vector argument. The log level is automatically determined by the","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26398,"byte_end":26495,"line_start":57,"line_end":57,"column_start":5,"column_end":102}},{"value":"/ lowest log level used by the given loggers.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26500,"byte_end":26547,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26552,"byte_end":26555,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ All loggers need to implement log::Log.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26560,"byte_end":26603,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26608,"byte_end":26611,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26616,"byte_end":26630,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26635,"byte_end":26642,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26647,"byte_end":26676,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26681,"byte_end":26704,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26709,"byte_end":26733,"line_start":66,"line_end":66,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26738,"byte_end":26755,"line_start":67,"line_end":67,"column_start":5,"column_end":22}},{"value":"/ let combined_logger = CombinedLogger::new(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26760,"byte_end":26806,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"/             vec![","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26811,"byte_end":26832,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ #               #[cfg(feature = \"termcolor\")]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26837,"byte_end":26886,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/                 TermLogger::new(LevelFilter::Debug, Config::default(), TerminalMode::Mixed, ColorChoice::Auto),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":26891,"byte_end":27006,"line_start":71,"line_end":71,"column_start":5,"column_end":120}},{"value":"/                 WriteLogger::new(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap())","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27011,"byte_end":27127,"line_start":72,"line_end":72,"column_start":5,"column_end":121}},{"value":"/             ]","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27132,"byte_end":27149,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/         );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27154,"byte_end":27168,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27173,"byte_end":27180,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27185,"byte_end":27192,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36193,"byte_end":36205,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"SimpleLogger","qualname":"::loggers::simplelog::SimpleLogger","value":"SimpleLogger {  }","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":" The SimpleLogger struct. Provides a very basic Logger implementation\n","sig":null,"attributes":[{"value":"/ The SimpleLogger struct. Provides a very basic Logger implementation","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36109,"byte_end":36181,"line_start":18,"line_end":18,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36794,"byte_end":36798,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"init","qualname":"<SimpleLogger>::init","value":"pub fn init(LevelFilter, Config) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the SimpleLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the SimpleLogger as the one and only used log facility.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36307,"byte_end":36402,"line_start":26,"line_end":26,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36407,"byte_end":36410,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36415,"byte_end":36504,"line_start":28,"line_end":28,"column_start":5,"column_end":94}},{"value":"/ Fails if another Logger was already initialized.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36509,"byte_end":36561,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36566,"byte_end":36569,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36574,"byte_end":36588,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36593,"byte_end":36600,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36605,"byte_end":36634,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36639,"byte_end":36662,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36667,"byte_end":36684,"line_start":35,"line_end":35,"column_start":5,"column_end":22}},{"value":"/ let _ = SimpleLogger::init(LevelFilter::Info, Config::default());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36689,"byte_end":36758,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36763,"byte_end":36770,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36775,"byte_end":36782,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37593,"byte_end":37596,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<SimpleLogger>::new","value":"pub fn new(LevelFilter, Config) -> Box<SimpleLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter what is globally set.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36979,"byte_end":37077,"line_start":44,"line_end":44,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37082,"byte_end":37085,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37090,"byte_end":37147,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37152,"byte_end":37247,"line_start":47,"line_end":47,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37252,"byte_end":37255,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37260,"byte_end":37349,"line_start":49,"line_end":49,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37354,"byte_end":37357,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37362,"byte_end":37376,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37381,"byte_end":37388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37393,"byte_end":37422,"line_start":53,"line_end":53,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37427,"byte_end":37450,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37455,"byte_end":37472,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/ let simple_logger = SimpleLogger::new(LevelFilter::Info, Config::default());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37477,"byte_end":37557,"line_start":56,"line_end":56,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37562,"byte_end":37569,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37574,"byte_end":37581,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39612,"byte_end":39618,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Stdout","qualname":"::loggers::termlog::TerminalMode::Stdout","value":"TerminalMode::Stdout","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Only use Stdout\n","sig":null,"attributes":[{"value":"/ Only use Stdout","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39588,"byte_end":39607,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39648,"byte_end":39654,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Stderr","qualname":"::loggers::termlog::TerminalMode::Stderr","value":"TerminalMode::Stderr","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Only use Stderr\n","sig":null,"attributes":[{"value":"/ Only use Stderr","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39624,"byte_end":39643,"line_start":26,"line_end":26,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39711,"byte_end":39716,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Mixed","qualname":"::loggers::termlog::TerminalMode::Mixed","value":"TerminalMode::Mixed","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Use Stderr for Errors and Stdout otherwise\n","sig":null,"attributes":[{"value":"/ Use Stderr for Errors and Stdout otherwise","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39660,"byte_end":39706,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39569,"byte_end":39581,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TerminalMode","qualname":"::loggers::termlog::TerminalMode","value":"pub enum TerminalMode { Stdout, Stderr, Mixed, }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545}],"decl_id":null,"docs":" Specifies which streams should be used when logging\n","sig":null,"attributes":[{"value":"/ Specifies which streams should be used when logging","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39453,"byte_end":39508,"line_start":21,"line_end":21,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39945,"byte_end":39955,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"TermLogger","qualname":"::loggers::termlog::TermLogger","value":"TermLogger {  }","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" The TermLogger struct. Provides a stderr/out based Logger implementation","sig":null,"attributes":[{"value":"/ The TermLogger struct. Provides a stderr/out based Logger implementation","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39825,"byte_end":39901,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39902,"byte_end":39905,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Supports colored output","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39906,"byte_end":39933,"line_start":40,"line_end":40,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40658,"byte_end":40662,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"init","qualname":"<TermLogger>::init","value":"pub fn init(LevelFilter, Config, TerminalMode, ColorChoice)\n-> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the TermLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the TermLogger as the one and only used log facility.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40062,"byte_end":40155,"line_start":48,"line_end":48,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40160,"byte_end":40163,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40168,"byte_end":40257,"line_start":50,"line_end":50,"column_start":5,"column_end":94}},{"value":"/ Fails if another Logger was already initialized","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40262,"byte_end":40313,"line_start":51,"line_end":51,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40318,"byte_end":40321,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40326,"byte_end":40340,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40345,"byte_end":40352,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40357,"byte_end":40386,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40391,"byte_end":40414,"line_start":56,"line_end":56,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40419,"byte_end":40436,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/     TermLogger::init(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40441,"byte_end":40466,"line_start":58,"line_end":58,"column_start":5,"column_end":30}},{"value":"/         LevelFilter::Info,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40471,"byte_end":40501,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/         Config::default(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40506,"byte_end":40536,"line_start":60,"line_end":60,"column_start":5,"column_end":35}},{"value":"/         TerminalMode::Mixed,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40541,"byte_end":40573,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/         ColorChoice::Auto","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40578,"byte_end":40607,"line_start":62,"line_end":62,"column_start":5,"column_end":34}},{"value":"/     );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40612,"byte_end":40622,"line_start":63,"line_end":63,"column_start":5,"column_end":15}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40627,"byte_end":40634,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40639,"byte_end":40646,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41744,"byte_end":41747,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<TermLogger>::new","value":"pub fn new(LevelFilter, Config, TerminalMode, ColorChoice) -> Box<TermLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter whats globally set.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40993,"byte_end":41089,"line_start":78,"line_end":78,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41094,"byte_end":41097,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41102,"byte_end":41159,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41164,"byte_end":41259,"line_start":81,"line_end":81,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41264,"byte_end":41267,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41272,"byte_end":41361,"line_start":83,"line_end":83,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41366,"byte_end":41369,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns a `Box`ed TermLogger","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41374,"byte_end":41406,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41411,"byte_end":41414,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41419,"byte_end":41433,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41438,"byte_end":41445,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41450,"byte_end":41479,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41484,"byte_end":41507,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41512,"byte_end":41529,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/ let term_logger = TermLogger::new(","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41534,"byte_end":41572,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/     LevelFilter::Info,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41577,"byte_end":41603,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/     Config::default(),","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41608,"byte_end":41634,"line_start":94,"line_end":94,"column_start":5,"column_end":31}},{"value":"/     TerminalMode::Mixed,","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41639,"byte_end":41667,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/     ColorChoice::Auto","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41672,"byte_end":41697,"line_start":96,"line_end":96,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41702,"byte_end":41708,"line_start":97,"line_end":97,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41713,"byte_end":41720,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":41725,"byte_end":41732,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46635,"byte_end":46646,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"WriteLogger","qualname":"::loggers::writelog::WriteLogger","value":"WriteLogger {  }","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":" The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File\n","sig":null,"attributes":[{"value":"/ The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46519,"byte_end":46623,"line_start":16,"line_end":16,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47372,"byte_end":47376,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"init","qualname":"<WriteLogger<W>>::init","value":"pub fn init(LevelFilter, Config, W) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the WriteLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the WriteLogger as the one and only used log facility.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46800,"byte_end":46894,"line_start":24,"line_end":24,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46899,"byte_end":46902,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level`, `Config` and `Write` struct as arguments. They cannot be changed later on.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46907,"byte_end":47012,"line_start":26,"line_end":26,"column_start":5,"column_end":110}},{"value":"/ Fails if another Logger was already initialized.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47017,"byte_end":47069,"line_start":27,"line_end":27,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47074,"byte_end":47077,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47082,"byte_end":47096,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47101,"byte_end":47108,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47113,"byte_end":47142,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47147,"byte_end":47170,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47175,"byte_end":47199,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47204,"byte_end":47221,"line_start":34,"line_end":34,"column_start":5,"column_end":22}},{"value":"/ let _ = WriteLogger::init(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47226,"byte_end":47336,"line_start":35,"line_end":35,"column_start":5,"column_end":115}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47341,"byte_end":47348,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47353,"byte_end":47360,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48277,"byte_end":48280,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteLogger<W>>::new","value":"pub fn new(LevelFilter, Config, W) -> Box<WriteLogger<W>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter what is globally set.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47579,"byte_end":47677,"line_start":43,"line_end":43,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47682,"byte_end":47685,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47690,"byte_end":47747,"line_start":45,"line_end":45,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47752,"byte_end":47847,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47852,"byte_end":47855,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level`, `Config` and `Write` struct as arguments. They cannot be changed later on.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47860,"byte_end":47965,"line_start":48,"line_end":48,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47970,"byte_end":47973,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47978,"byte_end":47992,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":47997,"byte_end":48004,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48009,"byte_end":48038,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48043,"byte_end":48066,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48071,"byte_end":48095,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48100,"byte_end":48117,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/ let file_logger = WriteLogger::new(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48122,"byte_end":48241,"line_start":56,"line_end":56,"column_start":5,"column_end":124}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48246,"byte_end":48253,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48258,"byte_end":48265,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2063,"byte_end":2075,"line_start":59,"line_end":59,"column_start":11,"column_end":23},"name":"SharedLogger","qualname":"::SharedLogger","value":"SharedLogger: Log","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":" Trait to have a common interface to obtain the Level of Loggers","sig":null,"attributes":[{"value":"/ Trait to have a common interface to obtain the Level of Loggers","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1904,"byte_end":1971,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1972,"byte_end":1975,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Necessary for CombinedLogger to calculate","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":1976,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ the lowest used Level.","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2022,"byte_end":2048,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2049,"byte_end":2052,"line_start":58,"line_end":58,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2409,"byte_end":2414,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"level","qualname":"::SharedLogger::level","value":"pub fn level(&Self) -> LevelFilter","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Returns the set Level for this Logger","sig":null,"attributes":[{"value":"/ Returns the set Level for this Logger","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2087,"byte_end":2128,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2133,"byte_end":2136,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2141,"byte_end":2155,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2160,"byte_end":2163,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2168,"byte_end":2175,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2180,"byte_end":2209,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2214,"byte_end":2237,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2242,"byte_end":2259,"line_start":67,"line_end":67,"column_start":5,"column_end":22}},{"value":"/ let logger = SimpleLogger::new(LevelFilter::Info, Config::default());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2264,"byte_end":2337,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ println!(\"{}\", logger.level());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2342,"byte_end":2377,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2382,"byte_end":2389,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2394,"byte_end":2401,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2853,"byte_end":2859,"line_start":88,"line_end":88,"column_start":8,"column_end":14},"name":"config","qualname":"::SharedLogger::config","value":"pub fn config(&Self) -> Option<&Config>","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Inspect the config of a running Logger","sig":null,"attributes":[{"value":"/ Inspect the config of a running Logger","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2443,"byte_end":2485,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ An Option is returned, because some Logger may not contain a Config","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2498,"byte_end":2569,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2574,"byte_end":2577,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2582,"byte_end":2596,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2601,"byte_end":2604,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2609,"byte_end":2616,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2621,"byte_end":2650,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2655,"byte_end":2678,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2683,"byte_end":2700,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/ let logger = SimpleLogger::new(LevelFilter::Info, Config::default());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2705,"byte_end":2778,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ println!(\"{:?}\", logger.config());","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2783,"byte_end":2821,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2826,"byte_end":2833,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2838,"byte_end":2845,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2944,"byte_end":2950,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"as_log","qualname":"::SharedLogger::as_log","value":"pub fn as_log(Box<Self>) -> Box<dyn Log>","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Returns the logger as a Log trait object\n","sig":null,"attributes":[{"value":"/ Returns the logger as a Log trait object","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2892,"byte_end":2936,"line_start":90,"line_end":90,"column_start":5,"column_end":49}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14536,"byte_end":14549,"line_start":108,"line_end":108,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22389,"byte_end":22402,"line_start":309,"line_end":309,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22487,"byte_end":22493,"line_start":315,"line_end":315,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24785,"byte_end":24799,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27568,"byte_end":27582,"line_start":92,"line_end":92,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27998,"byte_end":28012,"line_start":112,"line_end":112,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36288,"byte_end":36300,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37816,"byte_end":37828,"line_start":68,"line_end":68,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":38707,"byte_end":38719,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39738,"byte_end":39750,"line_start":32,"line_end":32,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40045,"byte_end":40055,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":45311,"byte_end":45321,"line_start":202,"line_end":202,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":45696,"byte_end":45706,"line_start":218,"line_end":218,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46779,"byte_end":46790,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48544,"byte_end":48555,"line_start":68,"line_end":68,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":49035,"byte_end":49046,"line_start":85,"line_end":85,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":14536,"byte_end":14549,"line_start":108,"line_end":108,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22389,"byte_end":22402,"line_start":309,"line_end":309,"column_start":18,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\config.rs","byte_start":22487,"byte_end":22493,"line_start":315,"line_end":315,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":24785,"byte_end":24799,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27568,"byte_end":27582,"line_start":92,"line_end":92,"column_start":14,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":85},"to":{"krate":14,"index":167}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\comblog.rs","byte_start":27998,"byte_end":28012,"line_start":112,"line_end":112,"column_start":23,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":85},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":36288,"byte_end":36300,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":37816,"byte_end":37828,"line_start":68,"line_end":68,"column_start":14,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":206},"to":{"krate":14,"index":167}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\simplelog.rs","byte_start":38707,"byte_end":38719,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":39738,"byte_end":39750,"line_start":32,"line_end":32,"column_start":18,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":540},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":40045,"byte_end":40055,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":45311,"byte_end":45321,"line_start":202,"line_end":202,"column_start":14,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":290},"to":{"krate":14,"index":167}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\termlog.rs","byte_start":45696,"byte_end":45706,"line_start":218,"line_end":218,"column_start":23,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":290},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":46779,"byte_end":46790,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":48544,"byte_end":48555,"line_start":68,"line_end":68,"column_start":41,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":346},"to":{"krate":14,"index":167}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\loggers\\writelog.rs","byte_start":49035,"byte_end":49046,"line_start":85,"line_end":85,"column_start":50,"column_end":61},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":346},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\DAVID\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.12.0\\src\\lib.rs","byte_start":2077,"byte_end":2080,"line_start":59,"line_end":59,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":14,"index":167},"to":{"krate":0,"index":440}}]}